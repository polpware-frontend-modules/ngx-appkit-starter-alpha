!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@polpware/ngx-appkit-contracts-alpha"),require("@polpware/ngx-oauth2"),require("@angular/animations"),require("@angular/core"),require("@polpware/ngx-appkit-services-alpha"),require("rxjs"),require("rxjs/operators"),require("@angular/common/http"),require("@angular/router"),require("@angular/platform-browser"),require("ngx-bootstrap/modal"),require("@angular/common"),require("@angular/forms"),require("ngx-bootstrap/dropdown"),require("ngx-bootstrap/tabs"),require("ngx-bootstrap/pagination"),require("ngx-bootstrap/tooltip"),require("ngx-bootstrap/accordion"),require("ngx-bootstrap/popover"),require("ngx-bootstrap/carousel"),require("ngx-bootstrap/alert"),require("@ngx-translate/core"),require("@swimlane/ngx-datatable"),require("ng2-charts")):"function"==typeof define&&define.amd?define("@polpware/ngx-appkit-starter-alpha",["exports","@polpware/ngx-appkit-contracts-alpha","@polpware/ngx-oauth2","@angular/animations","@angular/core","@polpware/ngx-appkit-services-alpha","rxjs","rxjs/operators","@angular/common/http","@angular/router","@angular/platform-browser","ngx-bootstrap/modal","@angular/common","@angular/forms","ngx-bootstrap/dropdown","ngx-bootstrap/tabs","ngx-bootstrap/pagination","ngx-bootstrap/tooltip","ngx-bootstrap/accordion","ngx-bootstrap/popover","ngx-bootstrap/carousel","ngx-bootstrap/alert","@ngx-translate/core","@swimlane/ngx-datatable","ng2-charts"],t):t(((e=e||self).polpware=e.polpware||{},e.polpware["ngx-appkit-starter-alpha"]={}),e.ngxAppkitContractsAlpha,e.ngxOauth2,e.ng.animations,e.ng.core,e.ngxAppkitServicesAlpha,e.rxjs,e.rxjs.operators,e.ng.common.http,e.ng.router,e.ng.platformBrowser,e.modal,e.ng.common,e.ng.forms,e.dropdown,e.tabs,e.pagination,e.tooltip,e.accordion,e.popover,e.carousel,e.alert,e.core$1,e.ngxDatatable,e.ng2Charts)}(this,(function(e,t,r,n,s,i,o,a,l,c,d,u,p,h,f,g,m,v,b,w,y,S,E,M,k){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var U=function(e,t){return(U=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};function C(e,t){function r(){this.constructor=e}U(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}function P(e){var t="function"==typeof Symbol&&e[Symbol.iterator],r=0;return t?t.call(e):{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}}}function x(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,s,i=r.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)o.push(n.value)}catch(e){s={error:e}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(s)throw s.error}}return o}function T(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(x(arguments[t]));return e}var R=function(){function e(){}return e.Create=function(r){var n=new e;return Object.assign(n,r),n.date&&(n.date=t.Utilities.parseDate(n.date)),n},e}();var N=function(e,t,r){this.name=e,this.description=t,this.permissions=r};var I=function(e){function t(t,r,n){var s=e.call(this)||this;return s.currentPassword=t,s.newPassword=r,s.confirmPassword=n,s}return C(t,e),t}(r.User);var D={None:0,Female:1,Male:2};D[D.None]="None",D[D.Female]="Female",D[D.Male]="Male";var O=function(e,t,r){this.userName=e,this.password=t,this.rememberMe=r};var A=n.trigger("fadeInOut",[n.transition(":enter",[n.style({opacity:0}),n.animate("0.4s ease-in",n.style({opacity:1}))]),n.transition(":leave",[n.animate("0.4s 10ms ease-out",n.style({opacity:0}))])]);var V=function(e){function t(t){var r=e.call(this)||this;return r.impl=t,r}return C(t,e),t.prototype.get=function(){return this.impl},t.decorators=[{type:s.Injectable}],t.ctorParameters=function(){return[{type:i.ConfigurationService}]},t}(t.ConfigurationServiceAbstractProvider);var L=function(e){function t(t){var r=e.call(this)||this;return r.impl=t,r}return C(t,e),t.prototype.get=function(){return this.impl},t.decorators=[{type:s.Injectable}],t.ctorParameters=function(){return[{type:i.ThemeManager}]},t}(t.ThemeManagerAbstractProvider);var q=function(e){function t(t,r,n){var s=e.call(this,r,n)||this;return s.configurations=t,s._usersUrl="/api/account/users",s._userByUserNameUrl="/api/account/users/username",s._currentUserUrl="/api/account/users/me",s._currentUserPreferencesUrl="/api/account/users/me/preferences",s._unblockUserUrl="/api/account/users/unblock",s._rolesUrl="/api/account/roles",s._roleByRoleNameUrl="/api/account/roles/name",s._permissionsUrl="/api/account/permissions",s}return C(t,e),Object.defineProperty(t.prototype,"usersUrl",{get:function(){return this.configurations.baseUrl+this._usersUrl},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"userByUserNameUrl",{get:function(){return this.configurations.baseUrl+this._userByUserNameUrl},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentUserUrl",{get:function(){return this.configurations.baseUrl+this._currentUserUrl},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"currentUserPreferencesUrl",{get:function(){return this.configurations.baseUrl+this._currentUserPreferencesUrl},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"unblockUserUrl",{get:function(){return this.configurations.baseUrl+this._unblockUserUrl},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"rolesUrl",{get:function(){return this.configurations.baseUrl+this._rolesUrl},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"roleByRoleNameUrl",{get:function(){return this.configurations.baseUrl+this._roleByRoleNameUrl},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"permissionsUrl",{get:function(){return this.configurations.baseUrl+this._permissionsUrl},enumerable:!0,configurable:!0}),t.prototype.getUserEndpoint=function(e){var t=this,r=e?this.usersUrl+"/"+e:this.currentUserUrl;return this.http.get(r,this.requestHeaders).pipe(a.catchError((function(r){return t.handleError(r,(function(){return t.getUserEndpoint(e)}))})))},t.prototype.getUserByUserNameEndpoint=function(e){var t=this,r=this.userByUserNameUrl+"/"+e;return this.http.get(r,this.requestHeaders).pipe(a.catchError((function(r){return t.handleError(r,(function(){return t.getUserByUserNameEndpoint(e)}))})))},t.prototype.getUsersEndpoint=function(e,t){var r=this,n=e&&t?this.usersUrl+"/"+e+"/"+t:this.usersUrl;return this.http.get(n,this.requestHeaders).pipe(a.catchError((function(n){return r.handleError(n,(function(){return r.getUsersEndpoint(e,t)}))})))},t.prototype.getNewUserEndpoint=function(e){var t=this;return this.http.post(this.usersUrl,JSON.stringify(e),this.requestHeaders).pipe(a.catchError((function(r){return t.handleError(r,(function(){return t.getNewUserEndpoint(e)}))})))},t.prototype.getUpdateUserEndpoint=function(e,t){var r=this,n=t?this.usersUrl+"/"+t:this.currentUserUrl;return this.http.put(n,JSON.stringify(e),this.requestHeaders).pipe(a.catchError((function(n){return r.handleError(n,(function(){return r.getUpdateUserEndpoint(e,t)}))})))},t.prototype.getPatchUpdateUserEndpoint=function(e,t,r,n,s){var i,o,l=this;return r?(i=s?this.usersUrl+"/"+s:this.currentUserUrl,o=n?[{value:e,path:r,op:t,from:n}]:[{value:e,path:r,op:t}]):(i=t?this.usersUrl+"/"+t:this.currentUserUrl,o=e),this.http.patch(i,JSON.stringify(o),this.requestHeaders).pipe(a.catchError((function(i){return l.handleError(i,(function(){return l.getPatchUpdateUserEndpoint(e,t,r,n,s)}))})))},t.prototype.getUserPreferencesEndpoint=function(){var e=this;return this.http.get(this.currentUserPreferencesUrl,this.requestHeaders).pipe(a.catchError((function(t){return e.handleError(t,(function(){return e.getUserPreferencesEndpoint()}))})))},t.prototype.getUpdateUserPreferencesEndpoint=function(e){var t=this;return this.http.put(this.currentUserPreferencesUrl,JSON.stringify(e),this.requestHeaders).pipe(a.catchError((function(r){return t.handleError(r,(function(){return t.getUpdateUserPreferencesEndpoint(e)}))})))},t.prototype.getUnblockUserEndpoint=function(e){var t=this,r=this.unblockUserUrl+"/"+e;return this.http.put(r,null,this.requestHeaders).pipe(a.catchError((function(r){return t.handleError(r,(function(){return t.getUnblockUserEndpoint(e)}))})))},t.prototype.getDeleteUserEndpoint=function(e){var t=this,r=this.usersUrl+"/"+e;return this.http.delete(r,this.requestHeaders).pipe(a.catchError((function(r){return t.handleError(r,(function(){return t.getDeleteUserEndpoint(e)}))})))},t.prototype.getRoleEndpoint=function(e){var t=this,r=this.rolesUrl+"/"+e;return this.http.get(r,this.requestHeaders).pipe(a.catchError((function(r){return t.handleError(r,(function(){return t.getRoleEndpoint(e)}))})))},t.prototype.getRoleByRoleNameEndpoint=function(e){var t=this,r=this.roleByRoleNameUrl+"/"+e;return this.http.get(r,this.requestHeaders).pipe(a.catchError((function(r){return t.handleError(r,(function(){return t.getRoleByRoleNameEndpoint(e)}))})))},t.prototype.getRolesEndpoint=function(e,t){var r=this,n=e&&t?this.rolesUrl+"/"+e+"/"+t:this.rolesUrl;return this.http.get(n,this.requestHeaders).pipe(a.catchError((function(n){return r.handleError(n,(function(){return r.getRolesEndpoint(e,t)}))})))},t.prototype.getNewRoleEndpoint=function(e){var t=this;return this.http.post(this.rolesUrl,JSON.stringify(e),this.requestHeaders).pipe(a.catchError((function(r){return t.handleError(r,(function(){return t.getNewRoleEndpoint(e)}))})))},t.prototype.getUpdateRoleEndpoint=function(e,t){var r=this,n=this.rolesUrl+"/"+t;return this.http.put(n,JSON.stringify(e),this.requestHeaders).pipe(a.catchError((function(n){return r.handleError(n,(function(){return r.getUpdateRoleEndpoint(e,t)}))})))},t.prototype.getDeleteRoleEndpoint=function(e){var t=this,r=this.rolesUrl+"/"+e;return this.http.delete(r,this.requestHeaders).pipe(a.catchError((function(r){return t.handleError(r,(function(){return t.getDeleteRoleEndpoint(e)}))})))},t.prototype.getPermissionsEndpoint=function(){var e=this;return this.http.get(this.permissionsUrl,this.requestHeaders).pipe(a.catchError((function(t){return e.handleError(t,(function(){return e.getPermissionsEndpoint()}))})))},t.decorators=[{type:s.Injectable}],t.ctorParameters=function(){return[{type:i.ConfigurationService},{type:l.HttpClient},{type:r.AuthService}]},t}(r.EndpointBase);var H=function(){function e(e,t){this.authService=e,this.accountEndpoint=t,this._rolesChanged=new o.Subject}return e.prototype.getUser=function(e){return this.accountEndpoint.getUserEndpoint(e)},e.prototype.getUserAndRoles=function(e){return o.forkJoin(this.accountEndpoint.getUserEndpoint(e),this.accountEndpoint.getRolesEndpoint())},e.prototype.getUsers=function(e,t){return this.accountEndpoint.getUsersEndpoint(e,t)},e.prototype.getUsersAndRoles=function(e,t){return o.forkJoin(this.accountEndpoint.getUsersEndpoint(e,t),this.accountEndpoint.getRolesEndpoint())},e.prototype.updateUser=function(e){var t=this;return e.id?this.accountEndpoint.getUpdateUserEndpoint(e,e.id):this.accountEndpoint.getUserByUserNameEndpoint(e.userName).pipe(a.mergeMap((function(r){return e.id=r.id,t.accountEndpoint.getUpdateUserEndpoint(e,e.id)})))},e.prototype.newUser=function(e){return this.accountEndpoint.getNewUserEndpoint(e)},e.prototype.getUserPreferences=function(){return this.accountEndpoint.getUserPreferencesEndpoint()},e.prototype.updateUserPreferences=function(e){return this.accountEndpoint.getUpdateUserPreferencesEndpoint(e)},e.prototype.deleteUser=function(e){var t=this;return"string"==typeof e||e instanceof String?this.accountEndpoint.getDeleteUserEndpoint(e).pipe(a.tap((function(e){return t.onRolesUserCountChanged(e.roles)}))):e.id?this.deleteUser(e.id):this.accountEndpoint.getUserByUserNameEndpoint(e.userName).pipe(a.mergeMap((function(e){return t.deleteUser(e.id)})))},e.prototype.unblockUser=function(e){return this.accountEndpoint.getUnblockUserEndpoint(e)},e.prototype.userHasPermission=function(e){return this.permissions.some((function(t){return t==e}))},e.prototype.refreshLoggedInUser=function(){return this.accountEndpoint.refreshLogin()},e.prototype.getRoles=function(e,t){return this.accountEndpoint.getRolesEndpoint(e,t)},e.prototype.getRolesAndPermissions=function(e,t){return o.forkJoin(this.accountEndpoint.getRolesEndpoint(e,t),this.accountEndpoint.getPermissionsEndpoint())},e.prototype.updateRole=function(t){var r=this;return t.id?this.accountEndpoint.getUpdateRoleEndpoint(t,t.id).pipe(a.tap((function(n){return r.onRolesChanged([t],e.roleModifiedOperation)}))):this.accountEndpoint.getRoleByRoleNameEndpoint(t.name).pipe(a.mergeMap((function(e){return t.id=e.id,r.accountEndpoint.getUpdateRoleEndpoint(t,t.id)})),a.tap((function(n){return r.onRolesChanged([t],e.roleModifiedOperation)})))},e.prototype.newRole=function(t){var r=this;return this.accountEndpoint.getNewRoleEndpoint(t).pipe(a.tap((function(n){return r.onRolesChanged([t],e.roleAddedOperation)})))},e.prototype.deleteRole=function(t){var r=this;return"string"==typeof t||t instanceof String?this.accountEndpoint.getDeleteRoleEndpoint(t).pipe(a.tap((function(t){return r.onRolesChanged([t],e.roleDeletedOperation)}))):t.id?this.deleteRole(t.id):this.accountEndpoint.getRoleByRoleNameEndpoint(t.name).pipe(a.mergeMap((function(e){return r.deleteRole(e.id)})))},e.prototype.getPermissions=function(){return this.accountEndpoint.getPermissionsEndpoint()},e.prototype.onRolesChanged=function(e,t){this._rolesChanged.next({roles:e,operation:t})},e.prototype.onRolesUserCountChanged=function(t){return this.onRolesChanged(t,e.roleModifiedOperation)},e.prototype.getRolesChangedEvent=function(){return this._rolesChanged.asObservable()},Object.defineProperty(e.prototype,"permissions",{get:function(){return this.authService.userPermissions},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentUser",{get:function(){return this.authService.currentUser},enumerable:!0,configurable:!0}),e.roleAddedOperation="add",e.roleDeletedOperation="delete",e.roleModifiedOperation="modify",e.decorators=[{type:s.Injectable}],e.ctorParameters=function(){return[{type:r.AuthService},{type:q}]},e}();var j=function(){function e(){this.demoNotifications=[{id:1,header:"Welcome",body:"You are ...",isRead:!0,isPinned:!0,date:"2019-05-28T16:29:13.5877958"}]}return e.prototype.getNotificationEndpoint=function(e){var t,r=this.demoNotifications.find((function(t){return t.id==e}));return t=r?this.createResponse(r,200):this.createResponse(null,404),o.of(t.body)},e.prototype.getNotificationsEndpoint=function(e,t){this.demoNotifications;var r=this.createResponse(this.demoNotifications,200);return o.of(r.body)},e.prototype.getUnreadNotificationsEndpoint=function(e){var t=this.demoNotifications.filter((function(e){return!e.isRead})),r=this.createResponse(t,200);return o.of(r.body)},e.prototype.getNewNotificationsEndpoint=function(e){var t=this.demoNotifications,r=this.createResponse(t,200);return o.of(r.body)},e.prototype.getPinUnpinNotificationEndpoint=function(e,t){var r,n=this.demoNotifications.find((function(t){return t.id==e}));return n?(r=this.createResponse(null,204),null==t&&(t=!n.isPinned),n.isPinned=t,n.isRead=!0):r=this.createResponse(null,404),o.of(r.body)},e.prototype.getReadUnreadNotificationEndpoint=function(e,t){var r,n,s=function(e){var r=i.demoNotifications.find((function(t){return t.id==e}));r&&(r.isRead=t)},i=this;try{for(var a=P(e),l=a.next();!l.done;l=a.next()){s(l.value)}}catch(e){r={error:e}}finally{try{l&&!l.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}var c=this.createResponse(null,204);return o.of(c.body)},e.prototype.getDeleteNotificationEndpoint=function(e){var t,r=this.demoNotifications.find((function(t){return t.id==e}));return r?(this.demoNotifications=this.demoNotifications.filter((function(t){return t.id!=e})),t=this.createResponse(r,200)):t=this.createResponse(null,404),o.of(t.body)},e.prototype.createResponse=function(e,t){return new l.HttpResponse({body:e,status:t})},e.decorators=[{type:s.Injectable}],e}();var F=function(){function e(e,t){this.notificationEndpoint=e,this.authService=t}return Object.defineProperty(e.prototype,"currentUser",{get:function(){return this.authService.currentUser},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"recentNotifications",{get:function(){return this._recentNotifications},set:function(e){this._recentNotifications=e},enumerable:!0,configurable:!0}),e.prototype.getNotification=function(e){return this.notificationEndpoint.getNotificationEndpoint(e).pipe(a.map((function(e){return R.Create(e)})))},e.prototype.getNotifications=function(e,t){var r=this;return this.notificationEndpoint.getNotificationsEndpoint(e,t).pipe(a.map((function(e){return r.getNotificationsFromResponse(e)})))},e.prototype.getUnreadNotifications=function(e){var t=this;return this.notificationEndpoint.getUnreadNotificationsEndpoint(e).pipe(a.map((function(e){return t.getNotificationsFromResponse(e)})))},e.prototype.getNewNotifications=function(){var e=this;return this.notificationEndpoint.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(a.map((function(t){return e.processNewNotificationsFromResponse(t)})))},e.prototype.getNewNotificationsPeriodically=function(){var e=this;return o.interval(1e4).pipe(a.startWith(0),a.flatMap((function(){return e.notificationEndpoint.getNewNotificationsEndpoint(e.lastNotificationDate).pipe(a.map((function(t){return e.processNewNotificationsFromResponse(t)})))})))},e.prototype.pinUnpinNotification=function(e,t){return"number"==typeof e||e instanceof Number?this.notificationEndpoint.getPinUnpinNotificationEndpoint(e,t):this.pinUnpinNotification(e.id)},e.prototype.readUnreadNotification=function(e,t){return this.notificationEndpoint.getReadUnreadNotificationEndpoint(e,t)},e.prototype.deleteNotification=function(e){var t=this;return"number"==typeof e||e instanceof Number?this.notificationEndpoint.getDeleteNotificationEndpoint(e).pipe(a.map((function(r){return t.recentNotifications=t.recentNotifications.filter((function(t){return t.id!=e})),R.Create(r)}))):this.deleteNotification(e.id)},e.prototype.processNewNotificationsFromResponse=function(e){var t,r,n=this.getNotificationsFromResponse(e);try{for(var s=P(n),i=s.next();!i.done;i=s.next()){var o=i.value;o.date>this.lastNotificationDate&&(this.lastNotificationDate=o.date)}}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=s.return)&&r.call(s)}finally{if(t)throw t.error}}return n},e.prototype.getNotificationsFromResponse=function(e){var t=[];for(var r in e)t[r]=R.Create(e[r]);return t.sort((function(e,t){return t.date.valueOf()-e.date.valueOf()})),t.sort((function(e,t){return e.isPinned===t.isPinned?0:e.isPinned?-1:1})),this.recentNotifications=t,t},e.decorators=[{type:s.Injectable}],e.ctorParameters=function(){return[{type:j},{type:r.AuthService}]},e}();var B=function(e){function t(t){var r=e.call(this)||this;return r.impl=t,r}return C(t,e),t.prototype.get=function(){return this.impl},t.decorators=[{type:s.Injectable}],t.ctorParameters=function(){return[{type:i.AppTranslationService}]},t}(t.TranslationServiceAbstractProvider);var _=function(){function e(e,r){var n=this;this.titleService=e,this.router=r,this.sub=this.router.events.pipe(a.filter((function(e){return e instanceof c.NavigationEnd})),a.map((function(e){return n.router.routerState.root})),a.map((function(e){for(;e.firstChild;)e=e.firstChild;return e})),a.flatMap((function(e){return e.data}))).subscribe((function(e){var r=e.title;if(r){var s=n.router.url.split("#")[1];s&&(r+=" | "+t.Utilities.toTitleCase(s))}r&&n.appName?r+=" - "+n.appName:n.appName&&(r=n.appName),r&&n.titleService.setTitle(r)}))}return e.decorators=[{type:s.Injectable}],e.ctorParameters=function(){return[{type:d.Title},{type:c.Router}]},e}();var z=function(e){function t(t){var r=e.call(this)||this;return r.alertService=t,r}return C(t,e),t.prototype.get=function(){return this.alertService},t.decorators=[{type:s.Injectable}],t.ctorParameters=function(){return[{type:i.AlertService}]},t}(t.AlertServiceAbstractProvider);var G=function(e){function t(t){var r=e.call(this)||this;return r.impl=t,r}return C(t,e),t.prototype.get=function(){return this.impl},t.decorators=[{type:s.Injectable}],t.ctorParameters=function(){return[{type:i.LocalStoreManager}]},t}(t.LocalStoreManagerServiceAbstractProvider);var W=function(){function e(){}return e.prototype.transform=function(e,t){if(!e)return e;var r=e.reduce((function(e,r){return e[r[t]]?e[r[t]].push(r):e[r[t]]=[r],e}),{});return Object.keys(r).map((function(e){return{key:e,value:r[e]}}))},e.decorators=[{type:s.Pipe,args:[{name:"groupBy"}]}],e}(),J=function(){function e(e,t,r,n){this.alertService=e,this.translationService=t,this.accountService=r,this.notificationService=n,this.columns=[],this.rows=[],this.dataLoadingConsecutiveFailurs=0,this.verticalScrollbar=!1}return e.prototype.ngOnInit=function(){var e=this;if(this.isViewOnly)this.columns=[{prop:"date",cellTemplate:this.dateTemplate,width:100,resizeable:!1,canAutoResize:!1,sortable:!1,draggable:!1},{prop:"header",cellTemplate:this.contentHeaderTemplate,width:200,resizeable:!1,sortable:!1,draggable:!1}];else{var t=function(t){return e.translationService.getTranslation(t)};this.columns=[{prop:"",name:"",width:10,headerTemplate:this.statusHeaderTemplate,cellTemplate:this.statusTemplate,resizeable:!1,canAutoResize:!1,sortable:!1,draggable:!1},{prop:"date",name:t("notifications.Date"),cellTemplate:this.dateTemplate,width:30},{prop:"body",name:t("notifications.Notification"),cellTemplate:this.contenBodytTemplate,width:500},{name:"",width:80,cellTemplate:this.actionsTemplate,resizeable:!1,canAutoResize:!1,sortable:!1,draggable:!1}]}this.initDataLoading()},e.prototype.ngOnDestroy=function(){this.dataLoadingSubscription&&this.dataLoadingSubscription.unsubscribe()},e.prototype.initDataLoading=function(){var e=this;if(this.isViewOnly&&this.notificationService.recentNotifications)this.rows=this.processResults(this.notificationService.recentNotifications);else{this.loadingIndicator=!0;var r=this.isViewOnly?this.notificationService.getNewNotifications():this.notificationService.getNewNotificationsPeriodically();this.dataLoadingSubscription=r.subscribe((function(t){e.loadingIndicator=!1,e.dataLoadingConsecutiveFailurs=0,e.rows=e.processResults(t)}),(function(r){e.loadingIndicator=!1,e.alertService.showMessage("Load Error","Loading new notifications from the server failed!",t.MessageSeverity.warn),e.alertService.logError(r),e.dataLoadingConsecutiveFailurs++<5?setTimeout((function(){return e.initDataLoading()}),5e3):e.alertService.showStickyMessage("Load Error","Loading new notifications from the server failed!",t.MessageSeverity.error)})),this.isViewOnly&&(this.dataLoadingSubscription=null)}},e.prototype.processResults=function(e){return this.isViewOnly&&e.sort((function(e,t){return t.date.valueOf()-e.date.valueOf()})),e},e.prototype.getPrintedDate=function(e){if(e)return t.Utilities.printTimeOnly(e)+" on "+t.Utilities.printDateOnly(e)},e.prototype.deleteNotification=function(e){var r=this;this.alertService.showDialog('Are you sure you want to delete the notification "'+e.header+'"?',t.DialogType.confirm,(function(){return r.deleteNotificationHelper(e)}))},e.prototype.deleteNotificationHelper=function(e){var r=this;this.alertService.startLoadingMessage("Deleting..."),this.loadingIndicator=!0,this.notificationService.deleteNotification(e).subscribe((function(t){r.alertService.stopLoadingMessage(),r.loadingIndicator=!1,r.rows=r.rows.filter((function(t){return t.id!=e.id}))}),(function(e){r.alertService.stopLoadingMessage(),r.loadingIndicator=!1,r.alertService.showStickyMessage("Delete Error",'An error occured whilst deleting the notification.\r\nError: "'+t.Utilities.getHttpResponseMessages(e)+'"',t.MessageSeverity.error,e)}))},e.prototype.togglePin=function(e){var r=this,n=!e.isPinned,s=n?"Pinning":"Unpinning";this.alertService.startLoadingMessage(s+"..."),this.loadingIndicator=!0,this.notificationService.pinUnpinNotification(e,n).subscribe((function(t){r.alertService.stopLoadingMessage(),r.loadingIndicator=!1,e.isPinned=n}),(function(e){r.alertService.stopLoadingMessage(),r.loadingIndicator=!1,r.alertService.showStickyMessage(s+" Error","An error occured whilst "+s+' the notification.\r\nError: "'+t.Utilities.getHttpResponseMessages(e)+'"',t.MessageSeverity.error,e)}))},Object.defineProperty(e.prototype,"canManageNotifications",{get:function(){return this.accountService.userHasPermission(r.Permission.manageRolesPermission)},enumerable:!0,configurable:!0}),e.decorators=[{type:s.Component,args:[{selector:"notifications-viewer",template:'<div>\n    <ngx-datatable class="material colored-header sm table-hover"\n                   [loadingIndicator]="loadingIndicator"\n                   [rows]="rows"\n                   [rowHeight]="35"\n                   [headerHeight]="isViewOnly ? 0 : 35"\n                   [footerHeight]="35"\n                   [limit]="10"\n                   [columns]="columns"\n                   [scrollbarV]="verticalScrollbar"\n                   [columnMode]="\'force\'">\n    </ngx-datatable>\n\n    <ng-template #statusHeaderTemplate>\n        <i class="fa fa-bullhorn"></i>\n    </ng-template>\n\n    <ng-template #statusTemplate>\n        <span></span>\n    </ng-template>\n\n    <ng-template #dateTemplate let-row="row" let-value="value">\n        <span [class.unread]="!row.isRead" attr.title="{{getPrintedDate(value)}}">\n            {{getPrintedDate(value)}}\n        </span>\n    </ng-template>\n\n    <ng-template #contentHeaderTemplate let-row="row" let-value="value">\n        <span [class.unread]="!row.isRead" attr.title="{{row.body}}">\n            {{value}}\n        </span>\n    </ng-template>\n\n    <ng-template #contenBodytTemplate let-row="row" let-value="value">\n        <span [class.unread]="!row.isRead" attr.title="{{row.header}}">\n            {{value}}\n        </span>\n    </ng-template>\n\n\n    <ng-template #actionsTemplate let-row="row">\n        <a class="btn btn-link btn-sm" href="javascript:;" tooltip="{{\'notifications.Delete\' | translate}}" container="body" (click)="deleteNotification(row)"><i class="fa fa-times"></i></a>\n        <a class="btn btn-link btn-sm" href="javascript:;" tooltip="{{\'notifications.Pin\' | translate}}" co container="body" (click)="togglePin(row)">\n            <i *ngIf="row.isPinned" class="fa fa-thumb-tack"></i>\n            <i *ngIf="!row.isPinned" class="fa fa-thumb-tack fa-rotate-90"></i>\n        </a>\n    </ng-template>\n</div>',styles:[".unread{font-weight:700}"]}]}],e.ctorParameters=function(){return[{type:i.AlertService},{type:i.AppTranslationService},{type:H},{type:F}]},e.propDecorators={isViewOnly:[{type:s.Input}],verticalScrollbar:[{type:s.Input}],statusHeaderTemplate:[{type:s.ViewChild,args:["statusHeaderTemplate",{static:!0}]}],statusTemplate:[{type:s.ViewChild,args:["statusTemplate",{static:!0}]}],dateTemplate:[{type:s.ViewChild,args:["dateTemplate",{static:!0}]}],contentHeaderTemplate:[{type:s.ViewChild,args:["contentHeaderTemplate",{static:!0}]}],contenBodytTemplate:[{type:s.ViewChild,args:["contenBodytTemplate",{static:!0}]}],actionsTemplate:[{type:s.ViewChild,args:["actionsTemplate",{static:!0}]}]},e}();var Z=function(){function e(e,n){this.alertService=e,this.accountService=n,this.isEditMode=!1,this.isNewUser=!1,this.isSaving=!1,this.isChangePassword=!1,this.isEditingSelf=!1,this.showValidationErrors=!1,this.uniqueId=t.Utilities.uniqueId(),this.user=new r.User,this.allRoles=[],this.formResetToggle=!0,this.isGeneralEditor=!1}return e.prototype.ngOnInit=function(){this.isGeneralEditor||this.loadCurrentUserData()},e.prototype.loadCurrentUserData=function(){var e=this;this.alertService.startLoadingMessage(),this.canViewAllRoles?this.accountService.getUserAndRoles().subscribe((function(t){return e.onCurrentUserDataLoadSuccessful(t[0],t[1])}),(function(t){return e.onCurrentUserDataLoadFailed(t)})):this.accountService.getUser().subscribe((function(t){return e.onCurrentUserDataLoadSuccessful(t,t.roles.map((function(e){return new N(e)})))}),(function(t){return e.onCurrentUserDataLoadFailed(t)}))},e.prototype.onCurrentUserDataLoadSuccessful=function(e,t){this.alertService.stopLoadingMessage(),this.user=e,this.allRoles=t},e.prototype.onCurrentUserDataLoadFailed=function(e){this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Load Error",'Unable to retrieve user data from the server.\r\nErrors: "'+t.Utilities.getHttpResponseMessages(e)+'"',t.MessageSeverity.error,e),this.user=new r.User},e.prototype.getRoleByName=function(e){return this.allRoles.find((function(t){return t.name==e}))},e.prototype.showErrorAlert=function(e,r){this.alertService.showMessage(e,r,t.MessageSeverity.error)},e.prototype.deletePasswordFromUser=function(e){var t=e;delete t.currentPassword,delete t.newPassword,delete t.confirmPassword},e.prototype.edit=function(){this.isGeneralEditor?(this.userEdit||(this.userEdit=new I),this.isEditingSelf=!!this.accountService.currentUser&&this.userEdit.id==this.accountService.currentUser.id):(this.isEditingSelf=!0,this.userEdit=new I,Object.assign(this.userEdit,this.user)),this.isEditMode=!0,this.showValidationErrors=!0,this.isChangePassword=!1},e.prototype.save=function(){var e=this;this.isSaving=!0,this.alertService.startLoadingMessage("Saving changes..."),this.isNewUser?this.accountService.newUser(this.userEdit).subscribe((function(t){return e.saveSuccessHelper(t)}),(function(t){return e.saveFailedHelper(t)})):this.accountService.updateUser(this.userEdit).subscribe((function(t){return e.saveSuccessHelper()}),(function(t){return e.saveFailedHelper(t)}))},e.prototype.saveSuccessHelper=function(e){this.testIsRoleUserCountChanged(this.user,this.userEdit),e&&Object.assign(this.userEdit,e),this.isSaving=!1,this.alertService.stopLoadingMessage(),this.isChangePassword=!1,this.showValidationErrors=!1,this.deletePasswordFromUser(this.userEdit),Object.assign(this.user,this.userEdit),this.userEdit=new I,this.resetForm(),this.isGeneralEditor&&(this.isNewUser?this.alertService.showMessage("Success",'User "'+this.user.userName+'" was created successfully',t.MessageSeverity.success):this.isEditingSelf||this.alertService.showMessage("Success",'Changes to user "'+this.user.userName+'" was saved successfully',t.MessageSeverity.success)),this.isEditingSelf&&(this.alertService.showMessage("Success","Changes to your User Profile was saved successfully",t.MessageSeverity.success),this.refreshLoggedInUser()),this.isEditMode=!1,this.changesSavedCallback&&this.changesSavedCallback()},e.prototype.saveFailedHelper=function(e){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",t.MessageSeverity.error,e),this.alertService.showStickyMessage(e,null,t.MessageSeverity.error),this.changesFailedCallback&&this.changesFailedCallback()},e.prototype.testIsRoleUserCountChanged=function(e,t){var r=this,n=this.isNewUser?t.roles:t.roles.filter((function(t){return-1==e.roles.indexOf(t)})),s=this.isNewUser?[]:e.roles.filter((function(e){return-1==t.roles.indexOf(e)})),i=n.concat(s);i.length&&setTimeout((function(){return r.accountService.onRolesUserCountChanged(i)}))},e.prototype.cancel=function(){this.isGeneralEditor?this.userEdit=this.user=new I:this.userEdit=new I,this.showValidationErrors=!1,this.resetForm(),this.alertService.showMessage("Cancelled","Operation cancelled by user",t.MessageSeverity.default),this.alertService.resetStickyMessage(),this.isGeneralEditor||(this.isEditMode=!1),this.changesCancelledCallback&&this.changesCancelledCallback()},e.prototype.close=function(){this.userEdit=this.user=new I,this.showValidationErrors=!1,this.resetForm(),this.isEditMode=!1,this.changesSavedCallback&&this.changesSavedCallback()},e.prototype.refreshLoggedInUser=function(){var e=this;this.accountService.refreshLoggedInUser().subscribe((function(t){e.loadCurrentUserData()}),(function(r){e.alertService.resetStickyMessage(),e.alertService.showStickyMessage("Refresh failed","An error occured whilst refreshing logged in user information from the server",t.MessageSeverity.error,r)}))},e.prototype.changePassword=function(){this.isChangePassword=!0},e.prototype.unlockUser=function(){var e=this;this.isSaving=!0,this.alertService.startLoadingMessage("Unblocking user..."),this.accountService.unblockUser(this.userEdit.id).subscribe((function(){e.isSaving=!1,e.userEdit.isLockedOut=!1,e.alertService.stopLoadingMessage(),e.alertService.showMessage("Success","User has been successfully unblocked",t.MessageSeverity.success)}),(function(r){e.isSaving=!1,e.alertService.stopLoadingMessage(),e.alertService.showStickyMessage("Unblock Error","The below errors occured whilst unblocking the user:",t.MessageSeverity.error,r),e.alertService.showStickyMessage(r,null,t.MessageSeverity.error)}))},e.prototype.resetForm=function(e){var t=this;void 0===e&&(e=!1),this.isChangePassword=!1,e?(this.formResetToggle=!1,setTimeout((function(){t.formResetToggle=!0}))):this.form.reset()},e.prototype.newUser=function(e){return this.isGeneralEditor=!0,this.isNewUser=!0,this.allRoles=T(e),this.user=this.userEdit=new I,this.userEdit.isEnabled=!0,this.edit(),this.userEdit},e.prototype.editUser=function(e,t){return e?(this.isGeneralEditor=!0,this.isNewUser=!1,this.setRoles(e,t),this.user=new r.User,this.userEdit=new I,Object.assign(this.user,e),Object.assign(this.userEdit,e),this.edit(),this.userEdit):this.newUser(t)},e.prototype.displayUser=function(e,t){this.user=new r.User,Object.assign(this.user,e),this.deletePasswordFromUser(this.user),this.setRoles(e,t),this.isEditMode=!1},e.prototype.setRoles=function(e,t){var r,n,s=this;if(this.allRoles=t?T(t):[],e.roles){var i=function(e){o.allRoles.some((function(t){return t.name==e}))||o.allRoles.unshift(new N(e))},o=this;try{for(var a=P(e.roles),l=a.next();!l.done;l=a.next()){i(l.value)}}catch(e){r={error:e}}finally{try{l&&!l.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}}null!=t&&this.allRoles.length==t.length||setTimeout((function(){s.rolesSelector&&s.rolesSelector.refresh()}))},Object.defineProperty(e.prototype,"canViewAllRoles",{get:function(){return this.accountService.userHasPermission(r.Permission.viewRolesPermission)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"canAssignRoles",{get:function(){return this.accountService.userHasPermission(r.Permission.assignRolesPermission)},enumerable:!0,configurable:!0}),e.decorators=[{type:s.Component,args:[{selector:"user-info",template:'<div>\n  <form *ngIf="formResetToggle" [attr.autocomplete]="isGeneralEditor ? \'NaN\' : null" name="userInfoForm" #f="ngForm" novalidate\n        (ngSubmit)="f.form.valid ? save() :\n\n          (!userName.valid && showErrorAlert(\'User name is required\', \'Please enter a user name (minimum of 2 and maximum of 200 characters)\'));\n\n          (userPassword && !userPassword.valid && showErrorAlert(\'Password is required\', \'Please enter the current password\'));\n\n          (email.errors?.required && showErrorAlert(\'Email is required\', \'Please enter an email address (maximum of 200 characters)\'));\n          (email.errors?.pattern && showErrorAlert(\'Invalid Email\', \'Please enter a valid email address\'));\n\n          (isChangePassword && isEditingSelf && !currentPassword.valid && showErrorAlert(\'Current password is required\', \'Please enter the current password\'));\n\n          ((isChangePassword || isNewUser) && !newPassword.valid && showErrorAlert(\'New password is required\', \'Please enter the new password (minimum of 6 characters)\'));\n\n          ((isChangePassword || isNewUser) && newPassword.valid && confirmPassword.errors?.required && showErrorAlert(\'Confirmation password is required\', \'Please enter the confirmation password\'));\n          ((isChangePassword || isNewUser) && newPassword.valid && confirmPassword.errors?.validateEqual && showErrorAlert(\'Passwword mismatch\', \'New password and confirmation password do not match\'));\n\n          (canAssignRoles && !isEditingSelf && !roles.valid && showErrorAlert(\'Roles is required\', \'Please select a minimum of 1 role\'));">\n\n    <div class="form-group row">\n      <label [class.col-lg-3]="isViewOnly" [class.col-lg-2]="!isViewOnly" class="col-form-label" for="jobTitle-{{uniqueId}}">{{\'users.editor.JobTitle\' | translate}}</label>\n      <div *ngIf="!isEditMode" [class.col-lg-9]="isViewOnly" [class.col-lg-10]="!isViewOnly">\n        <p class="form-control-plaintext">{{user.jobTitle}}</p>\n      </div>\n      <div *ngIf="isEditMode" [class.col-lg-9]="isViewOnly" [class.col-lg-10]="!isViewOnly">\n        <input autofocus type="text" attr.id="jobTitle-{{uniqueId}}" name="jobTitle" placeholder="Enter Job Title" class="form-control" [(ngModel)]="userEdit.jobTitle" />\n      </div>\n    </div>\n\n    <div class="row">\n      <div class="col-lg-12">\n        <hr [class.separator-hr]="!isEditMode" [class.edit-separator-hr]="isEditMode" />\n      </div>\n    </div>\n\n    <div class="form-group row has-feedback-icon">\n      <label [class.col-lg-3]="isViewOnly" [class.col-lg-2]="!isViewOnly" class="col-form-label" for="userName-{{uniqueId}}">{{\'users.editor.UserName\' | translate}}</label>\n      <div *ngIf="!isEditMode || isEditingSelf" [class.col-lg-9]="isViewOnly" [class.col-lg-10]="!isViewOnly">\n        <p class="form-control-plaintext">{{user.userName}}</p>\n      </div>\n      <div *ngIf="isEditMode && !isEditingSelf" [class.col-lg-9]="isViewOnly" [class.col-lg-10]="!isViewOnly">\n        <input type="text" attr.id="userName-{{uniqueId}}" name="userName" [attr.autocomplete]="isGeneralEditor ? \'new-password\' : null" placeholder="Enter user name"\n               class="form-control" [ngClass]="{\'is-valid\': f.submitted && userName.valid, \'is-invalid\' : f.submitted && !userName.valid}"\n               [(ngModel)]="userEdit.userName" #userName="ngModel" required minlength="2" maxlength="200" />\n        <i *ngIf="showValidationErrors && f.submitted" class="fa form-control-feedback" [ngClass]="{\'fa-check\': userName.valid, \'fa-times\' : !userName.valid}" aria-hidden="true"></i>\n        <span *ngIf="showValidationErrors && f.submitted && !userName.valid" class="invalid-feedback">\n          {{\'users.editor.UserNameRequired\' | translate}}\n        </span>\n      </div>\n    </div>\n\n    <div *ngIf="isEditMode && isEditingSelf && !isChangePassword && user.userName != userEdit.userName" class="row">\n      <div class="col-lg-12">\n        <hr class="password-separator-hr" />\n      </div>\n    </div>\n    <div *ngIf="isEditMode && isEditingSelf && !isChangePassword && user.userName != userEdit.userName" class="form-group row has-feedback-icon">\n      <label class="col-form-label col-lg-2" for="userPassword-{{uniqueId}}">{{\'users.editor.Password\' | translate}}</label>\n      <div class="col-lg-10">\n        <input type="password" attr.id="userPassword-{{uniqueId}}" name="userPassword" [attr.autocomplete]="isGeneralEditor ? \'new-password\' : null" placeholder="Enter password"\n               class="form-control" [ngClass]="{\'is-valid\': f.submitted && userPassword.valid, \'is-invalid\' : f.submitted && !userPassword.valid}"\n               [(ngModel)]="userEdit.currentPassword" #userPassword="ngModel" required />\n        <small class="hint-sm">{{\'users.editor.PasswordHint\' | translate}}</small>\n        <i *ngIf="showValidationErrors && f.submitted" class="fa form-control-feedback" [ngClass]="{\'fa-check\': userPassword.valid, \'fa-times\' : !userPassword.valid}" aria-hidden="true"></i>\n        <span *ngIf="showValidationErrors && f.submitted && !userPassword.valid" class="invalid-feedback">\n          {{\'users.editor.CurrentPasswordRequired\' | translate}}\n        </span>\n      </div>\n    </div>\n\n\n    <div class="row">\n      <div class="col-lg-12">\n        <hr [class.separator-hr]="!isEditMode" [class.edit-separator-hr]="isEditMode" />\n      </div>\n    </div>\n\n    <div class="form-group row has-feedback-icon">\n      <label [class.col-lg-3]="isViewOnly" [class.col-lg-2]="!isViewOnly" class="col-form-label" for="email-{{uniqueId}}">{{\'users.editor.Email\' | translate}}</label>\n      <div *ngIf="!isEditMode" [class.col-lg-9]="isViewOnly" [class.col-lg-10]="!isViewOnly">\n        <p class="form-control-plaintext">{{user.email}}</p>\n      </div>\n      <div *ngIf="isEditMode" [class.col-lg-9]="isViewOnly" [class.col-lg-10]="!isViewOnly">\n        <input type="text" attr.id="email-{{uniqueId}}" name="email" placeholder="Enter email address" class="form-control" [ngClass]="{\'is-valid\': f.submitted && email.valid, \'is-invalid\' : f.submitted && !email.valid}"\n               [(ngModel)]="userEdit.email" #email="ngModel" required maxlength="200" pattern="^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$" />\n        <i *ngIf="showValidationErrors && f.submitted" class="fa form-control-feedback" [ngClass]="{\'fa-check\': email.valid, \'fa-times\' : !email.valid}" aria-hidden="true"></i>\n        <span *ngIf="showValidationErrors && f.submitted && email.errors?.required" class="invalid-feedback">\n          {{\'users.editor.EmailRequired\' | translate}}\n        </span>\n        <span *ngIf="showValidationErrors && f.submitted && email.errors?.pattern" class="invalid-feedback">\n          {{\'users.editor.InvalidEmail\' | translate}}\n        </span>\n      </div>\n    </div>\n\n    <div *ngIf="isEditMode" class="row">\n      <div class="col-lg-12">\n        <hr [class.separator-hr]="!isEditMode" [class.edit-separator-hr]="isEditMode" />\n      </div>\n    </div>\n\n    <div *ngIf="isEditMode" class="form-group row">\n      <label for="newPassword-{{uniqueId}}" class="col-form-label col-lg-2">{{\'users.editor.Password\' | translate}}</label>\n      <div *ngIf="!isChangePassword && !isNewUser" class="col-lg-10">\n        <button type="button" (click)="changePassword()" class="btn btn-link">{{\'users.editor.ChangePassword\' | translate}}</button>\n      </div>\n\n      <div *ngIf="isChangePassword || isNewUser" class="col-lg-10">\n        <div class="password-well card card-body bg-light">\n          <div *ngIf="isEditingSelf" class="form-group row has-feedback-icon">\n            <label class="col-form-label col-lg-3" for="currentPassword-{{uniqueId}}">{{\'users.editor.CurrentPassword\' | translate}}</label>\n            <div class="col-lg-9">\n              <input type="password" attr.id="currentPassword-{{uniqueId}}" name="currentPassword" [attr.autocomplete]="isGeneralEditor ? \'new-password\' : null" placeholder="Enter current password" class="form-control"\n                     [ngClass]="{\'is-valid\': f.submitted && currentPassword.valid, \'is-invalid\' : f.submitted && !currentPassword.valid}" [(ngModel)]="userEdit.currentPassword" #currentPassword="ngModel" required />\n              <i *ngIf="showValidationErrors && f.submitted" class="fa form-control-feedback" [ngClass]="{\'fa-check\': currentPassword.valid, \'fa-times\' : !currentPassword.valid}" aria-hidden="true"></i>\n              <span *ngIf="showValidationErrors && f.submitted && !currentPassword.valid" class="invalid-feedback">\n                {{\'users.editor.CurrentPasswordRequired\' | translate}}\n              </span>\n            </div>\n          </div>\n\n          <div *ngIf="!isNewUser" class="row">\n            <div class="col-lg-12">\n              <hr class="password-separator-hr" />\n            </div>\n          </div>\n\n          <div class="form-group row has-feedback-icon">\n            <label class="col-form-label col-lg-3" for="newPassword-{{uniqueId}}">{{\'users.editor.NewPassword\' | translate}}</label>\n            <div class="col-lg-9">\n              <input type="password" attr.id="newPassword-{{uniqueId}}" name="newPassword" [attr.autocomplete]="isGeneralEditor ? \'new-password\' : null" placeholder="Enter new password" class="form-control"\n                     [ngClass]="{\'is-valid\': f.submitted && newPassword.valid, \'is-invalid\' : f.submitted && !newPassword.valid}" [(ngModel)]="userEdit.newPassword" #newPassword="ngModel"\n                     required minlength="6" validateEqual="confirmPassword" reverse="true" />\n              <i *ngIf="showValidationErrors && f.submitted" class="fa form-control-feedback" [ngClass]="{\'fa-check\': newPassword.valid, \'fa-times\' : !newPassword.valid}" aria-hidden="true"></i>\n              <span *ngIf="showValidationErrors && f.submitted && !newPassword.valid" class="invalid-feedback">\n                {{\'users.editor.NewPasswordRequired\' | translate}}\n              </span>\n            </div>\n          </div>\n\n          <div class="row">\n            <div class="col-lg-12">\n              <hr class="password-separator-hr" />\n            </div>\n          </div>\n\n          <div class="form-group row has-feedback-icon">\n            <label class="col-form-label col-lg-3" for="confirmPassword-{{uniqueId}}">{{\'users.editor.ConfirmPassword\' | translate}}</label>\n            <div class="col-lg-9">\n              <input type="password" attr.id="confirmPassword-{{uniqueId}}" name="confirmPassword" [attr.autocomplete]="isGeneralEditor ? \'new-password\' : null" placeholder="Confirm new password" class="form-control"\n                     [ngClass]="{\'is-valid\': f.submitted && confirmPassword.valid, \'is-invalid\' : f.submitted && !confirmPassword.valid}" [(ngModel)]="userEdit.confirmPassword" #confirmPassword="ngModel"\n                     required validateEqual="newPassword" />\n              <i *ngIf="showValidationErrors && f.submitted" class="fa form-control-feedback" [ngClass]="{\'fa-check\': confirmPassword.valid, \'fa-times\' : !confirmPassword.valid}" aria-hidden="true"></i>\n              <span *ngIf="showValidationErrors && f.submitted && confirmPassword.errors?.required" class="invalid-feedback">\n                {{\'users.editor.ConfirmationPasswordRequired\' | translate}}\n              </span>\n              <span *ngIf="showValidationErrors && f.submitted && confirmPassword.errors?.validateEqual && !confirmPassword.errors?.required" class="invalid-feedback">\n                {{\'users.editor.PasswordMismatch\' | translate}}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    \x3c!--******************************************************************************************************--\x3e\n\n    <div *ngIf="!isEditMode || canAssignRoles || isEditingSelf" class="row">\n      <div class="col-lg-12">\n        <hr [class.separator-hr]="!isEditMode" [class.edit-separator-hr]="isEditMode" />\n      </div>\n    </div>\n\n    <div *ngIf="!isEditMode || canAssignRoles || isEditingSelf" class="form-group row has-feedback-icon">\n      <label [class.col-lg-3]="isViewOnly" [class.col-lg-2]="!isViewOnly" class="col-form-label" for="roles-user-info">{{\'users.editor.Roles\' | translate}}</label>\n      <div *ngIf="!isEditMode" [class.col-lg-9]="isViewOnly" [class.col-lg-10]="!isViewOnly">\n        <p ngPreserveWhitespaces class="form-control-plaintext">\n          <span *ngFor="let role of user.roles">\n            <span title=\'{{getRoleByName(role)?.description}}\' class="badge badge-pill badge-secondary">{{role}}</span>\n          </span>\n        </p>\n      </div>\n      <div *ngIf="isEditMode && canAssignRoles && !isEditingSelf" [ngClass]="{\'is-valid\': f.submitted && roles.valid, \'is-invalid\' : f.submitted && !roles.valid}" [class.col-lg-9]="isViewOnly" [class.col-lg-10]="!isViewOnly">\n        <select id="roles-user-info" name="roles" [(ngModel)]="userEdit.roles" #roles="ngModel" #rolesSelector="bootstrap-select"\n                class="selectpicker form-control left-status" bootstrapSelect required multiple data-live-search="true" data-actions-box="false" data-live-search-placeholder="Search..." title="Select Roles">\n          <option *ngFor="let role of allRoles" attr.data-content="<span title=\'{{role.description}}\' class=\'badge badge-pill badge-secondary\'>{{role.name}}</span>" attr.value="{{role.name}}">\n            {{role.name}}\n          </option>\n        </select>\n        <i *ngIf="showValidationErrors && f.submitted" class="fa form-control-feedback" [ngClass]="{\'fa-check\': roles.valid, \'fa-times\' : !roles.valid}" aria-hidden="true"></i>\n        <span *ngIf="showValidationErrors && f.submitted && !roles.valid" class="invalid-feedback">\n          {{\'users.editor.RoleRequired\' | translate}}\n        </span>\n      </div>\n    </div>\n\n    \x3c!--******************************************************************************************************--\x3e\n\n    <div class="row">\n      <div class="col-lg-12">\n        <hr [class.separator-hr]="!isEditMode" [class.edit-separator-hr]="isEditMode" />\n      </div>\n    </div>\n\n    <div class="form-group row">\n      <label [class.col-lg-3]="isViewOnly" [class.col-lg-2]="!isViewOnly" class="col-form-label" for="fullName-{{uniqueId}}">{{\'users.editor.FullName\' | translate}}</label>\n      <div *ngIf="!isEditMode" [class.col-lg-9]="isViewOnly" [class.col-lg-10]="!isViewOnly">\n        <p class="form-control-plaintext">{{user.fullName}}</p>\n      </div>\n      <div *ngIf="isEditMode" [class.col-lg-9]="isViewOnly" [class.col-lg-10]="!isViewOnly">\n        <input type="text" attr.id="fullName-{{uniqueId}}" name="fullName" placeholder="Enter full name" class="form-control" [(ngModel)]="userEdit.fullName" />\n      </div>\n    </div>\n\n    <div class="row">\n      <div class="col-lg-12">\n        <hr [class.separator-hr]="!isEditMode" [class.edit-separator-hr]="isEditMode" />\n      </div>\n    </div>\n\n    <div class="form-group row">\n      <label [class.col-lg-3]="isViewOnly" [class.col-lg-2]="!isViewOnly" class="col-form-label" for="phoneNumber-{{uniqueId}}">{{\'users.editor.PhoneNumber\' | translate}}</label>\n      <div *ngIf="!isEditMode" [class.col-lg-9]="isViewOnly" [class.col-lg-10]="!isViewOnly">\n        <p class="form-control-plaintext">{{user.phoneNumber}}</p>\n      </div>\n      <div *ngIf="isEditMode" [class.col-lg-9]="isViewOnly" [class.col-lg-10]="!isViewOnly">\n        <input type="text" attr.id="phoneNumber-{{uniqueId}}" name="phoneNumber" placeholder="Enter phone number" class="form-control" [(ngModel)]="userEdit.phoneNumber" />\n      </div>\n    </div>\n\n    <div *ngIf="!isViewOnly" class="row">\n      <div class="col-lg-12">\n        <hr [class.last-separator-hr]="!isEditMode" [class.edit-last-separator-hr]="isEditMode" />\n      </div>\n    </div>\n\n    <div *ngIf="!isViewOnly" class="form-group row">\n      <div class="col-sm-5">\n        <div *ngIf="isGeneralEditor && isEditMode" class="float-left">\n          <div class="form-check user-enabled">\n            <input class="form-check-input" type="checkbox" id="idEnabled" name="isEnabled" [(ngModel)]="userEdit.isEnabled">\n            <label for="idEnabled" class="form-check-label">{{\'users.editor.Enabled\' | translate}}</label>\n          </div>\n          <button *ngIf="userEdit.isLockedOut" type="button" (click)="unlockUser()" class="btn btn-warning unblock-user" [disabled]="isSaving"><i class=\'fa fa-unlock-alt\'></i> {{\'users.editor.Unblock\' | translate}}</button>\n        </div>\n      </div>\n      <div class="col-sm-7">\n        <div ngPreserveWhitespaces class="float-right">\n          <button *ngIf="!isEditMode && isGeneralEditor" type="button" (click)="close()" class="btn btn-outline-secondary"><i class=\'fa fa-close\'></i> {{\'users.editor.Close\' | translate}}</button>\n          <button *ngIf="!isEditMode && !isGeneralEditor" type="button" (click)="edit()" class="btn btn-outline-secondary"><i class=\'fa fa-edit\'></i> {{\'users.editor.Edit\' | translate}}</button>\n          <button *ngIf="isEditMode" type="button" (click)="cancel()" class="btn btn-danger" [disabled]="isSaving"><i class=\'fa fa-times\'></i> {{\'users.editor.Cancel\' | translate}}</button>\n          <button *ngIf="isEditMode" type="submit" class="btn btn-primary" [disabled]="isSaving">\n            <i *ngIf="!isSaving" class=\'fa fa-save\'></i><i *ngIf="isSaving" class=\'fa fa-circle-o-notch fa-spin\'></i> {{isSaving ? (\'users.editor.Saving\' | translate) : (\'users.editor.Save\' | translate)}}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class="clearfix"></div>\n  </form>\n</div>\n',styles:[".separator-hr{margin:0 5px;border-top-style:dashed}.edit-separator-hr{margin:10px 5px;border-top-style:dashed}.last-separator-hr{margin-top:5px}.edit-last-separator-hr{margin-top:15px}.password-separator-hr{margin:5px;border-style:none}.form-group{margin-top:0;margin-bottom:0}input.form-control{border-left-width:5px}.invalid-feedback{display:block}.password-well{padding:.5rem}.hint-sm{display:block}.form-check.user-enabled{display:inline-block}.unblock-user{margin-left:34px}@media (min-width:992px){.user-enabled{margin-left:40px}}"]}]}],e.ctorParameters=function(){return[{type:i.AlertService},{type:H}]},e.propDecorators={isViewOnly:[{type:s.Input}],isGeneralEditor:[{type:s.Input}],form:[{type:s.ViewChild,args:["f",{static:!1}]}],userName:[{type:s.ViewChild,args:["userName",{static:!1}]}],userPassword:[{type:s.ViewChild,args:["userPassword",{static:!1}]}],email:[{type:s.ViewChild,args:["email",{static:!1}]}],currentPassword:[{type:s.ViewChild,args:["currentPassword",{static:!1}]}],newPassword:[{type:s.ViewChild,args:["newPassword",{static:!1}]}],confirmPassword:[{type:s.ViewChild,args:["confirmPassword",{static:!1}]}],roles:[{type:s.ViewChild,args:["roles",{static:!1}]}],rolesSelector:[{type:s.ViewChild,args:["rolesSelector",{static:!1}]}]},e}();var K=function(){function e(e,t,r){this.alertService=e,this.translationService=t,this.accountService=r,this.columns=[],this.rows=[],this.rowsCache=[],this.allRoles=[]}return e.prototype.ngOnInit=function(){var e=this,t=function(t){return e.translationService.getTranslation(t)};this.columns=[{prop:"index",name:"#",width:40,cellTemplate:this.indexTemplate,canAutoResize:!1},{prop:"jobTitle",name:t("users.management.Title"),width:50},{prop:"userName",name:t("users.management.UserName"),width:90,cellTemplate:this.userNameTemplate},{prop:"fullName",name:t("users.management.FullName"),width:120},{prop:"email",name:t("users.management.Email"),width:140},{prop:"roles",name:t("users.management.Roles"),width:120,cellTemplate:this.rolesTemplate},{prop:"phoneNumber",name:t("users.management.PhoneNumber"),width:100}],this.canManageUsers&&this.columns.push({name:"",width:160,cellTemplate:this.actionsTemplate,resizeable:!1,canAutoResize:!1,sortable:!1,draggable:!1}),this.loadData()},e.prototype.ngAfterViewInit=function(){var e=this;this.userEditor.changesSavedCallback=function(){e.addNewUserToList(),e.editorModal.hide()},this.userEditor.changesCancelledCallback=function(){e.editedUser=null,e.sourceUser=null,e.editorModal.hide()}},e.prototype.addNewUserToList=function(){var e,n;if(this.sourceUser){Object.assign(this.sourceUser,this.editedUser);var s=this.rowsCache.indexOf(this.sourceUser,0);s>-1&&t.Utilities.moveArrayItem(this.rowsCache,s,0),(s=this.rows.indexOf(this.sourceUser,0))>-1&&t.Utilities.moveArrayItem(this.rows,s,0),this.editedUser=null,this.sourceUser=null}else{var i=new r.User;Object.assign(i,this.editedUser),this.editedUser=null;var o=0;try{for(var a=P(this.rowsCache),l=a.next();!l.done;l=a.next()){var c=l.value;c.index>o&&(o=c.index)}}catch(t){e={error:t}}finally{try{l&&!l.done&&(n=a.return)&&n.call(a)}finally{if(e)throw e.error}}i.index=o+1,this.rowsCache.splice(0,0,i),this.rows.splice(0,0,i),this.rows=T(this.rows)}},e.prototype.loadData=function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.canViewRoles?this.accountService.getUsersAndRoles().subscribe((function(t){return e.onDataLoadSuccessful(t[0],t[1])}),(function(t){return e.onDataLoadFailed(t)})):this.accountService.getUsers().subscribe((function(t){return e.onDataLoadSuccessful(t,e.accountService.currentUser.roles.map((function(e){return new N(e)})))}),(function(t){return e.onDataLoadFailed(t)}))},e.prototype.onDataLoadSuccessful=function(e,t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,e.forEach((function(e,t,r){e.index=t+1})),this.rowsCache=T(e),this.rows=e,this.allRoles=t},e.prototype.onDataLoadFailed=function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.alertService.showStickyMessage("Load Error",'Unable to retrieve users from the server.\r\nErrors: "'+t.Utilities.getHttpResponseMessages(e)+'"',t.MessageSeverity.error,e)},e.prototype.onSearchChanged=function(e){this.rows=this.rowsCache.filter((function(r){return t.Utilities.searchArray(e,!1,r.userName,r.fullName,r.email,r.phoneNumber,r.jobTitle,r.roles)}))},e.prototype.onEditorModalHidden=function(){this.editingUserName=null,this.userEditor.resetForm(!0)},e.prototype.newUser=function(){this.editingUserName=null,this.sourceUser=null,this.editedUser=this.userEditor.newUser(this.allRoles),this.editorModal.show()},e.prototype.editUser=function(e){this.editingUserName={name:e.userName},this.sourceUser=e,this.editedUser=this.userEditor.editUser(e,this.allRoles),this.editorModal.show()},e.prototype.deleteUser=function(e){var r=this;this.alertService.showDialog('Are you sure you want to delete "'+e.userName+'"?',t.DialogType.confirm,(function(){return r.deleteUserHelper(e)}))},e.prototype.deleteUserHelper=function(e){var r=this;this.alertService.startLoadingMessage("Deleting..."),this.loadingIndicator=!0,this.accountService.deleteUser(e).subscribe((function(t){r.alertService.stopLoadingMessage(),r.loadingIndicator=!1,r.rowsCache=r.rowsCache.filter((function(t){return t!==e})),r.rows=r.rows.filter((function(t){return t!==e}))}),(function(e){r.alertService.stopLoadingMessage(),r.loadingIndicator=!1,r.alertService.showStickyMessage("Delete Error",'An error occured whilst deleting the user.\r\nError: "'+t.Utilities.getHttpResponseMessages(e)+'"',t.MessageSeverity.error,e)}))},Object.defineProperty(e.prototype,"canAssignRoles",{get:function(){return this.accountService.userHasPermission(r.Permission.assignRolesPermission)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"canViewRoles",{get:function(){return this.accountService.userHasPermission(r.Permission.viewRolesPermission)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"canManageUsers",{get:function(){return this.accountService.userHasPermission(r.Permission.manageUsersPermission)},enumerable:!0,configurable:!0}),e.decorators=[{type:s.Component,args:[{selector:"users-management",template:'<div>\n  <div class="row control-box">\n    <div class="col-lg-8">\n      <div class="form-group search-box">\n        <search-box (searchChange)="onSearchChanged($event)" placeholder="{{\'users.management.Search\' | translate}}">></search-box>\n      </div>\n    </div>\n    <div class="col-lg-4 pr-lg-5">\n      <ul class="nav flex-column flex-lg-row justify-content-end">\n        <li *ngIf="canManageUsers && canAssignRoles" class="nav-item toolbaritem">\n          <a class="nav-link" href="javascript:;" (click)="newUser()">\n            <i class="fa fa-plus-circle"></i> {{\'users.management.NewUser\' | translate}}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <ngx-datatable class="material colored-header sm table table-striped table-hover"\n                 [loadingIndicator]="loadingIndicator"\n                 [rows]="rows"\n                 [rowHeight]="35"\n                 [headerHeight]="35"\n                 [footerHeight]="35"\n                 [columns]="columns"\n                 [scrollbarV]="true"\n                 [columnMode]="\'force\'">\n  </ngx-datatable>\n\n  <ng-template #indexTemplate let-value="value">\n    <strong>{{value}}</strong>\n  </ng-template>\n\n  <ng-template #userNameTemplate let-row="row" let-value="value">\n    <span [class.locked-out]="row.isLockedOut" [class.user-disabled]="!row.isEnabled">\n      <i *ngIf="row.isLockedOut" class="fa fa-exclamation-triangle"> </i>\n      <i *ngIf="!row.isEnabled" class="fa fa-exclamation"> </i>\n      {{value}}\n    </span>\n  </ng-template>\n\n  <ng-template #rolesTemplate let-row="row" let-value="value" let-i="index">\n    <span class="user-role badge badge-pill badge-secondary" *ngFor="let role of value">{{role}}</span>\n  </ng-template>\n\n  <ng-template #actionsTemplate let-row="row" let-value="value" let-i="index">\n    <div *ngIf="canManageUsers">\n      <a class="btn btn-link btn-sm" href="javascript:;" (click)="editUser(row)"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> {{\'users.management.Edit\' | translate}}</a>|\n      <a class="btn btn-link btn-sm" href="javascript:;" (click)="deleteUser(row)"><i class="fa fa-trash-o" aria-hidden="true"></i> {{\'users.management.Delete\' | translate}}</a>\n    </div>\n  </ng-template>\n\n\n  <div class="modal fade" bsModal #editorModal="bs-modal" (onHidden)="onEditorModalHidden()" [config]="{backdrop: \'static\'}" tabindex="-1">\n    <div class="modal-dialog modal-lg">\n      <div class="modal-content">\n        <div class="modal-header">\n          <h4 *ngIf="!editingUserName" class="modal-title float-left"><i class="fa fa-user-plus"></i> {{\'users.management.NewUser\' | translate}}</h4>\n          <h4 *ngIf="editingUserName" class="modal-title float-left"><i class="fa fa-user-circle-o"></i> {{\'users.management.EditUser\' | translate:editingUserName}}</h4>\n          <button type="button" class="close float-right" title="Close" (click)="editorModal.hide()">\n            <span aria-hidden="true">&times;</span>\n          </button>\n        </div>\n        <div class="modal-body">\n          <user-info #userEditor [isGeneralEditor]="true"></user-info>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',styles:[".user-role{font-size:.8em!important;margin-right:1px}.control-box{margin-bottom:5px}.search-box{margin:0}.nav-item.toolbaritem a{padding-top:3px;padding-bottom:3px;min-width:100px}.user-disabled{color:#777;font-style:italic}.locked-out{background-color:#ff4500;color:#f5f5f5;width:100%;display:inline-block;padding-left:5px}"]}]}],e.ctorParameters=function(){return[{type:i.AlertService},{type:i.AppTranslationService},{type:H}]},e.propDecorators={indexTemplate:[{type:s.ViewChild,args:["indexTemplate",{static:!0}]}],userNameTemplate:[{type:s.ViewChild,args:["userNameTemplate",{static:!0}]}],rolesTemplate:[{type:s.ViewChild,args:["rolesTemplate",{static:!0}]}],actionsTemplate:[{type:s.ViewChild,args:["actionsTemplate",{static:!0}]}],editorModal:[{type:s.ViewChild,args:["editorModal",{static:!0}]}],userEditor:[{type:s.ViewChild,args:["userEditor",{static:!0}]}]},e}();var X=function(){function e(e){var t=this;this.el=e,this.oldValues="",this.ngModelChange=new s.EventEmitter,this.shown=new s.EventEmitter,this.hidden=new s.EventEmitter,this.changedSubscription=o.fromEvent($(this.el.nativeElement),"changed.bs.select").subscribe((function(e){return setTimeout((function(){t.checkIsValuesChanged(t.selected)&&t.ngModelChange.emit(t.selected)}))})),this.shownSubscription=o.fromEvent($(this.el.nativeElement),"shown.bs.select").subscribe((function(e){return setTimeout((function(){return t.shown.emit()}))})),this.hiddenSubscription=o.fromEvent($(this.el.nativeElement),"hidden.bs.select").subscribe((function(e){return setTimeout((function(){return t.hidden.emit()}))}))}return Object.defineProperty(e.prototype,"ngModel",{set:function(e){var t=this;setTimeout((function(){return t.selected=e}))},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;$(this.el.nativeElement).selectpicker(),this.requiredAttribute&&$(this.el.nativeElement).selectpicker("setStyle","required","add"),setTimeout((function(){e.refresh(),e.doValidation()}))},e.prototype.ngOnDestroy=function(){this.changedSubscription&&this.changedSubscription.unsubscribe(),this.shownSubscription&&this.shownSubscription.unsubscribe(),this.hiddenSubscription&&this.hiddenSubscription.unsubscribe(),$(this.el.nativeElement).selectpicker("destroy")},e.prototype.checkIsValuesChanged=function(e){var t=this;return!(e==this.oldValues||e instanceof Array&&e.length===this.oldValues.length&&e.every((function(e,r){return e===t.oldValues[r]})))},e.prototype.doValidation=function(){this.requiredAttribute&&($(this.el.nativeElement).selectpicker("setStyle",this.valid?"ng-invalid":"ng-valid","remove"),$(this.el.nativeElement).selectpicker("setStyle",this.valid?"ng-valid":"ng-invalid","add"))},Object.defineProperty(e.prototype,"requiredAttribute",{get:function(){return""===this.required||"true"==this.required},enumerable:!0,configurable:!0}),e.prototype.refresh=function(){var e=this;setTimeout((function(){$(e.el.nativeElement).selectpicker("refresh")}))},e.prototype.render=function(){var e=this;setTimeout((function(){$(e.el.nativeElement).selectpicker("render")}))},Object.defineProperty(e.prototype,"valid",{get:function(){return!this.requiredAttribute||this.selected&&this.selected.length>0},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"selected",{get:function(){return $(this.el.nativeElement).selectpicker("val")},set:function(e){this.checkIsValuesChanged(e)&&(this.oldValues=this.selected,$(this.el.nativeElement).selectpicker("val",e),this.doValidation())},enumerable:!0,configurable:!0}),e.decorators=[{type:s.Directive,args:[{selector:"[bootstrapSelect]",exportAs:"bootstrap-select"}]}],e.ctorParameters=function(){return[{type:s.ElementRef}]},e.propDecorators={required:[{type:s.Input}],ngModel:[{type:s.Input}],ngModelChange:[{type:s.Output}],shown:[{type:s.Output}],hidden:[{type:s.Output}]},e}();var Y=function(){function e(e,t,r,n,s){this.alertService=e,this.translationService=t,this.accountService=r,this.themeManager=n,this.configurations=s,this.themeSelectorToggle=!0}return e.prototype.ngOnInit=function(){var e=this;this.languageChangedSubscription=this.translationService.languageChanged$.subscribe((function(t){e.themeSelectorToggle=!1,setTimeout((function(){e.languageSelector.refresh(),e.homePageSelector.refresh(),e.themeSelectorToggle=!0}))}))},e.prototype.ngOnDestroy=function(){this.languageChangedSubscription.unsubscribe()},e.prototype.reloadFromServer=function(){var e=this;this.alertService.startLoadingMessage(),this.accountService.getUserPreferences().subscribe((function(r){e.alertService.stopLoadingMessage(),e.configurations.import(r),e.alertService.showMessage("Defaults loaded!","",t.MessageSeverity.info)}),(function(r){e.alertService.stopLoadingMessage(),e.alertService.showStickyMessage("Load Error",'Unable to retrieve user preferences from the server.\r\nErrors: "'+t.Utilities.getHttpResponseMessages(r)+'"',t.MessageSeverity.error,r)}))},e.prototype.setAsDefault=function(){var e=this;this.alertService.showDialog("Are you sure you want to set the current configuration as your new defaults?",t.DialogType.confirm,(function(){return e.setAsDefaultHelper()}),(function(){return e.alertService.showMessage("Operation Cancelled!","",t.MessageSeverity.default)}))},e.prototype.setAsDefaultHelper=function(){var e=this;this.alertService.startLoadingMessage("","Saving new defaults"),this.accountService.updateUserPreferences(this.configurations.export()).subscribe((function(r){e.alertService.stopLoadingMessage(),e.alertService.showMessage("New Defaults","Account defaults updated successfully",t.MessageSeverity.success)}),(function(r){e.alertService.stopLoadingMessage(),e.alertService.showStickyMessage("Save Error",'An error occured whilst saving configuration defaults.\r\nErrors: "'+t.Utilities.getHttpResponseMessages(r)+'"',t.MessageSeverity.error,r)}))},e.prototype.resetDefault=function(){var e=this;this.alertService.showDialog("Are you sure you want to reset your defaults?",t.DialogType.confirm,(function(){return e.resetDefaultHelper()}),(function(){return e.alertService.showMessage("Operation Cancelled!","",t.MessageSeverity.default)}))},e.prototype.resetDefaultHelper=function(){var e=this;this.alertService.startLoadingMessage("","Resetting defaults"),this.accountService.updateUserPreferences(null).subscribe((function(r){e.alertService.stopLoadingMessage(),e.configurations.import(null),e.alertService.showMessage("Defaults Reset","Account defaults reset completed successfully",t.MessageSeverity.success)}),(function(r){e.alertService.stopLoadingMessage(),e.alertService.showStickyMessage("Save Error",'An error occured whilst resetting configuration defaults.\r\nErrors: "'+t.Utilities.getHttpResponseMessages(r)+'"',t.MessageSeverity.error,r)}))},Object.defineProperty(e.prototype,"canViewCustomers",{get:function(){return this.accountService.userHasPermission(r.Permission.viewUsersPermission)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"canViewProducts",{get:function(){return this.accountService.userHasPermission(r.Permission.viewUsersPermission)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"canViewOrders",{get:function(){return!0},enumerable:!0,configurable:!0}),e.decorators=[{type:s.Component,args:[{selector:"user-preferences",template:'<div>\n    <div class="form-group row">\n        <label for="refreshButton" class="col-sm-3 col-form-label">{{\'preferences.ReloadPreferences\' | translate}} </label>\n        <div class="col-sm-4">\n            <button id="refreshButton" class="btn btn-outline-secondary" (click)="reloadFromServer()">\n                <i class="fa fa-refresh"></i>\n            </button>\n        </div>\n        <div class="col-sm-5">\n            <p class="form-control-plaintext text-muted small">{{\'preferences.ReloadPreferencesHint\' | translate}}</p>\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col-md-12">\n            <hr class="separator-hr" />\n        </div>\n    </div>\n\n    <div class="form-group row">\n        <label for="language" class="col-sm-3 col-form-label">{{\'preferences.Language\' | translate}} </label>\n        <div class="col-sm-4">\n            <select id="language" [(ngModel)]="configurations.language" #languageSelector="bootstrap-select" bootstrapSelect class="selectpicker form-control">\n                <option data-subtext="(Default)" value="en">{{\'preferences.English\' | translate}}</option>\n                <option value="fr">{{\'preferences.French\' | translate}}</option>\n                <option value="de">{{\'preferences.German\' | translate}}</option>\n                <option value="pt">{{\'preferences.Portuguese\' | translate}}</option>\n                <option value="ar">{{\'preferences.Arabic\' | translate}}</option>\n                <option value="ko">{{\'preferences.Korean\' | translate}}</option>\n            </select>\n        </div>\n        <div class="col-sm-5">\n            <p class="form-control-plaintext text-muted small">{{\'preferences.LanguageHint\' | translate}}</p>\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col-md-12">\n            <hr class="separator-hr" />\n        </div>\n    </div>\n\n    <div class="form-group row">\n        <label for="homePage" class="col-sm-3 col-form-label">{{\'preferences.HomePage\' | translate}} </label>\n        <div class="col-sm-4">\n            <select id="homePage" [(ngModel)]="configurations.homeUrl" #homePageSelector="bootstrap-select" bootstrapSelect class="selectpicker form-control">\n                <option data-icon="fa fa-tachometer" data-subtext="(Default)" value="/">{{\'preferences.Dashboard\' | translate}}</option>\n                <option *ngIf="canViewCustomers" data-icon="fa fa-handshake-o" value="/customers">{{\'preferences.Customers\' | translate}}</option>\n                <option *ngIf="canViewProducts" data-icon="fa fa-truck" value="/products">{{\'preferences.Products\' | translate}}</option>\n                <option *ngIf="canViewOrders" data-icon="fa fa-shopping-cart" value="/orders">{{\'preferences.Orders\' | translate}}</option>\n                <option data-icon="fa fa-info-circle" value="/about">{{\'preferences.About\' | translate}}</option>\n                <option data-icon="fa fa-cog" value="/settings">{{\'preferences.Settings\' | translate}}</option>\n            </select>\n        </div>\n        <div class="col-sm-5">\n            <p class="form-control-plaintext text-muted small">{{\'preferences.HomePageHint\' | translate}}</p>\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col-md-12">\n            <hr class="separator-hr" />\n        </div>\n    </div>\n\n    <div class="form-group row">\n        <label for="defaultTheme" class="col-sm-3 col-form-label">{{\'preferences.Theme\' | translate}} </label>\n        <div *ngIf="themeSelectorToggle" class="col-sm-4">\n            <select id="defaultTheme" [(ngModel)]="configurations.themeId" bootstrapSelect class="selectpicker theme-picker form-control">\n                <option *ngFor="let theme of themeManager.themes"\n                attr.data-content="<div class=\'theme-item\' style=\'background-color: {{theme.background}}; color: {{theme.color}}\'>{{\'preferences.\' + theme.name + \'Theme\' | translate}}\n                <span class=\'small\'>{{theme.isDark ? \'(Dark)\' : \'\'}}</span></div>">\n                {{theme.id}}\n                </option>\n            </select>\n        </div>\n        <div class="col-sm-5">\n            <p class="form-control-plaintext text-muted small">{{\'preferences.ThemeHint\' | translate}}</p>\n        </div>\n    </div>\n\n    <div class="row">\n        <div class="col-md-12">\n            <hr class="separator-hr" />\n        </div>\n    </div>\n\n    <div class="form-group row">\n        <label class="col-sm-3 col-form-label" for="dashboardStatistics">{{\'preferences.DashboardStatistics\' | translate}} </label>\n        <div class="col-sm-4">\n            <div class="checkbox">\n                <input name="dashboardStatistics" [(ngModel)]="configurations.showDashboardStatistics" class="form-control" type="checkbox" bootstrapToggle data-size="small">\n            </div>\n        </div>\n        <div class="col-sm-5">\n            <p class="form-control-plaintext text-muted small">{{\'preferences.DashboardStatisticsHint\' | translate}}</p>\n        </div>\n    </div>\n    \x3c!--  --\x3e\n\n    <div class="row">\n        <div class="col-md-12">\n            <hr class="subseparator-hr" />\n        </div>\n    </div>\n\n    <div class="form-group row">\n        <label class="col-sm-3 col-form-label" for="dashboardTodo">{{\'preferences.DashboardNotifications\' | translate}} </label>\n        <div class="col-sm-4">\n            <div class="checkbox">\n                <input name="dashboardNotifications" [(ngModel)]="configurations.showDashboardNotifications" class="form-control" type="checkbox" bootstrapToggle data-size="small">\n            </div>\n        </div>\n        <div class="col-sm-5">\n            <p class="form-control-plaintext text-muted small">{{\'preferences.DashboardNotificationsHint\' | translate}}</p>\n        </div>\n    </div>\n    \x3c!--  --\x3e\n\n    <div class="row">\n        <div class="col-md-12">\n            <hr class="subseparator-hr" />\n        </div>\n    </div>\n\n    <div class="form-group row">\n        <label class="col-sm-3 col-form-label" for="dashboardTodo">{{\'preferences.DashboardTodo\' | translate}} </label>\n        <div class="col-sm-4">\n            <div class="checkbox">\n                <input name="dashboardTodo" [(ngModel)]="configurations.showDashboardTodo" class="form-control" type="checkbox" bootstrapToggle data-size="small">\n            </div>\n        </div>\n        <div class="col-sm-5">\n            <p class="form-control-plaintext text-muted small">{{\'preferences.DashboardTodoHint\' | translate}}</p>\n        </div>\n    </div>\n    \x3c!--  --\x3e\n\n\n    <div class="row">\n        <div class="col-md-12">\n            <hr class="subseparator-hr" />\n        </div>\n    </div>\n\n    <div class="form-group row">\n        <label class="col-sm-3 col-form-label" for="dashboardBanner">{{\'preferences.DashboardBanner\' | translate}}</label>\n        <div class="col-sm-4">\n            <div class="checkbox">\n                <input name="dashboardBanner" [(ngModel)]="configurations.showDashboardBanner" class="form-control" type="checkbox" bootstrapToggle data-size="small">\n            </div>\n        </div>\n        <div class="col-sm-5">\n            <p class="form-control-plaintext text-muted small">{{\'preferences.DashboardBannerHint\' | translate}}</p>\n        </div>\n    </div>\n    \x3c!--  --\x3e\n\n\n\n    <div class="row">\n        <div class="col-md-12">\n            <hr class="last-separator-hr" />\n        </div>\n    </div>\n    <div class="form-group row">\n        <div class="col-sm-3">\n\n        </div>\n        <div class="col-sm-9">\n            <div class="row float-left">\n                <div class="col-sm-6 col-reset-default">\n                    <button type="button" (click)="resetDefault()" class="btn btn-success">\n                        <i class=\'fa fa-circle-o-notch\'></i> {{\'preferences.ResetDefault\' | translate}}\n                    </button>\n                </div>\n                <div class="col-sm-6 col-set-default">\n                    <button type="button" (click)="setAsDefault()" class="btn btn-primary">\n                        <i class=\'fa fa-hdd-o\'></i> {{\'preferences.SetDefault\' | translate}}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n',styles:[".separator-hr{margin:7px 5px;border-top-style:dashed}.subseparator-hr{margin:7px 5px;border-top-style:none}.last-separator-hr{margin-top:7px}.form-group{margin-top:0;margin-bottom:0}.form-control-plaintext{min-height:0}.checkbox{padding-top:0}.col-reset-default{padding-right:0}.col-set-default{padding-left:5px}.col-reset-default .btn,.col-set-default .btn{min-width:150px}@media (min-width:768px){.col-form-label{padding-top:5px}}"]}]}],e.ctorParameters=function(){return[{type:i.AlertService},{type:i.AppTranslationService},{type:H},{type:i.ThemeManager},{type:i.ConfigurationService}]},e.propDecorators={languageSelector:[{type:s.ViewChild,args:["languageSelector",{static:!0}]}],homePageSelector:[{type:s.ViewChild,args:["homePageSelector",{static:!0}]}]},e}();var Q=function(){function e(e,t){this.alertService=e,this.accountService=t,this.isNewRole=!1,this.showValidationErrors=!0,this.roleEdit=new N,this.allPermissions=[],this.selectedValues={},this.formResetToggle=!0}return e.prototype.showErrorAlert=function(e,r){this.alertService.showMessage(e,r,t.MessageSeverity.error)},e.prototype.save=function(){var e=this;this.isSaving=!0,this.alertService.startLoadingMessage("Saving changes..."),this.roleEdit.permissions=this.getSelectedPermissions(),this.isNewRole?this.accountService.newRole(this.roleEdit).subscribe((function(t){return e.saveSuccessHelper(t)}),(function(t){return e.saveFailedHelper(t)})):this.accountService.updateRole(this.roleEdit).subscribe((function(t){return e.saveSuccessHelper()}),(function(t){return e.saveFailedHelper(t)}))},e.prototype.saveSuccessHelper=function(e){var r=this;e&&Object.assign(this.roleEdit,e),this.isSaving=!1,this.alertService.stopLoadingMessage(),this.showValidationErrors=!1,this.isNewRole?this.alertService.showMessage("Success",'Role "'+this.roleEdit.name+'" was created successfully',t.MessageSeverity.success):this.alertService.showMessage("Success",'Changes to role "'+this.roleEdit.name+'" was saved successfully',t.MessageSeverity.success),this.roleEdit=new N,this.resetForm(),!this.isNewRole&&this.accountService.currentUser.roles.some((function(e){return e==r.editingRoleName}))&&this.refreshLoggedInUser(),this.changesSavedCallback&&this.changesSavedCallback()},e.prototype.refreshLoggedInUser=function(){var e=this;this.accountService.refreshLoggedInUser().subscribe((function(e){}),(function(r){e.alertService.resetStickyMessage(),e.alertService.showStickyMessage("Refresh failed","An error occured whilst refreshing logged in user information from the server",t.MessageSeverity.error,r)}))},e.prototype.saveFailedHelper=function(e){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",t.MessageSeverity.error,e),this.alertService.showStickyMessage(e,null,t.MessageSeverity.error),this.changesFailedCallback&&this.changesFailedCallback()},e.prototype.cancel=function(){this.roleEdit=new N,this.showValidationErrors=!1,this.resetForm(),this.alertService.showMessage("Cancelled","Operation cancelled by user",t.MessageSeverity.default),this.alertService.resetStickyMessage(),this.changesCancelledCallback&&this.changesCancelledCallback()},e.prototype.selectAll=function(){var e=this;this.allPermissions.forEach((function(t){return e.selectedValues[t.value]=!0}))},e.prototype.selectNone=function(){var e=this;this.allPermissions.forEach((function(t){return e.selectedValues[t.value]=!1}))},e.prototype.toggleGroup=function(e){var t,r=this;this.allPermissions.forEach((function(n){n.groupName==e&&(null==t&&(t=1==r.selectedValues[n.value]),r.selectedValues[n.value]=!t)}))},e.prototype.getSelectedPermissions=function(){var e=this;return this.allPermissions.filter((function(t){return 1==e.selectedValues[t.value]}))},e.prototype.resetForm=function(e){var t=this;void 0===e&&(e=!1),e?(this.formResetToggle=!1,setTimeout((function(){t.formResetToggle=!0}))):this.form.reset()},e.prototype.newRole=function(e){return this.isNewRole=!0,this.showValidationErrors=!0,this.editingRoleName=null,this.allPermissions=e,this.selectedValues={},this.roleEdit=new N,this.roleEdit},e.prototype.editRole=function(e,t){var r=this;return e?(this.isNewRole=!1,this.showValidationErrors=!0,this.editingRoleName=e.name,this.allPermissions=t,this.selectedValues={},e.permissions.forEach((function(e){return r.selectedValues[e.value]=!0})),this.roleEdit=new N,Object.assign(this.roleEdit,e),this.roleEdit):this.newRole(t)},Object.defineProperty(e.prototype,"canManageRoles",{get:function(){return this.accountService.userHasPermission(r.Permission.manageRolesPermission)},enumerable:!0,configurable:!0}),e.decorators=[{type:s.Component,args:[{selector:"role-editor",template:'<div>\n  <form *ngIf="formResetToggle" name="roleEditorForm" #f="ngForm" novalidate\n        (ngSubmit)="f.form.valid ? save() :\n          (!roleName.valid && showErrorAlert(\'Role name is required\', \'Please enter a role name (minimum of 2 and maximum of 200 characters)\'));">\n\n    <div class="row">\n      <div class="col-sm-5">\n        <div class="form-group row has-feedback-icon">\n          <label class="col-form-label col-md-3" for="roleName">{{\'roles.editor.Name\' | translate}}</label>\n          <div class="col-md-9">\n            <input [disabled]="!canManageRoles" type="text" id="roleName" name="roleName" placeholder="Enter role name" class="form-control"\n                   [ngClass]="{\'is-valid\': f.submitted && roleName.valid, \'is-invalid\' : f.submitted && !roleName.valid}" [(ngModel)]="roleEdit.name" #roleName="ngModel" required minlength="2" maxlength="200" />\n            <i *ngIf="showValidationErrors && f.submitted" class="fa form-control-feedback" [ngClass]="{\'fa-check\': roleName.valid, \'fa-times\' : !roleName.valid}" aria-hidden="true"></i>\n          </div>\n        </div>\n      </div>\n\n      <div class="col-sm-7">\n        <div class="form-group row">\n          <label class="col-form-label col-md-3" for="roleDescription">{{\'roles.editor.Description\' | translate}}</label>\n          <div class="col-md-9">\n            <input [disabled]="!canManageRoles" type="text" id="roleDescription" name="roleDescription" placeholder="Enter role description" class="form-control" [(ngModel)]="roleEdit.description" />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class="row">\n      <div class="col-md-12">\n        <span *ngIf="showValidationErrors && f.submitted && !roleName.valid" class="invalid-feedback">\n          {{\'roles.editor.RoleNameRequired\' | translate}}\n        </span>\n      </div>\n    </div>\n\n    <div class="row">\n      <div class="col-md-12">\n        <hr class="edit-separator-hr" />\n      </div>\n    </div>\n\n    <div class="row">\n      <div class="col-sm-12 card card-body bg-light well-sm permissionsRow">\n        <div class="row">\n\n          <ng-template ngFor let-permissionGroup [ngForOf]="allPermissions | groupBy: \'groupName\'" let-i="index">\n            <div class="form-group row col-sm-6 permissionsColumn">\n              <label class="col-md-5 col-form-label group-name" for="checkboxes" (click)="toggleGroup(permissionGroup.key)">{{permissionGroup.key}}</label>\n              <div class="col-md-7">\n                <div class="form-check" *ngFor="let permission of permissionGroup.value">\n                  <input [disabled]="!canManageRoles" name="checkboxes-{{permission.value}}" id="checkboxes-{{permission.value}}" type="checkbox" class="form-check-input" [(ngModel)]="selectedValues[permission.value]">\n                  <label class="form-check-label" tooltip="{{permission.description}}" for="checkboxes-{{permission.value}}">{{permission.name}}</label>\n                </div>\n              </div>\n            </div>\n            <div *ngIf="(i + 1) % 2 === 0" class="clearfix"></div>\n          </ng-template>\n\n        </div>\n      </div>\n\n    </div>\n\n\n    <div class="row">\n      <div class="col-md-12">\n        <hr class="edit-last-separator-hr" />\n      </div>\n    </div>\n\n\n    <div class="form-group row">\n      <div class="col-sm-5">\n        <div *ngIf="canManageRoles" class="float-left">\n          <a (click)="selectAll()" href="javascript:;" class="btn btn-link">{{\'roles.editor.SelectAll\' | translate}}</a>|<a (click)="selectNone()" href="javascript:;" class="btn btn-link">{{\'roles.editor.SelectNone\' | translate}}</a>\n        </div>\n      </div>\n\n      <div class="col-sm-7">\n        <div ngPreserveWhitespaces class="float-right">\n          <button *ngIf="!canManageRoles" type="button" (click)="cancel()" class="btn btn-outline-secondary">{{\'roles.editor.Close\' | translate}}</button>\n          <button *ngIf="canManageRoles" type="button" (click)="cancel()" class="btn btn-danger" [disabled]="isSaving"><i class=\'fa fa-times\'></i> {{\'roles.editor.Cancel\' | translate}}</button>\n          <button *ngIf="canManageRoles" type="submit" class="btn btn-primary" [disabled]="isSaving">\n            <i *ngIf="!isSaving" class=\'fa fa-save\'></i><i *ngIf="isSaving" class=\'fa fa-circle-o-notch fa-spin\'></i> {{isSaving ? (\'roles.editor.Saving\' | translate) : (\'roles.editor.Save\' | translate)}}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class="clearfix"></div>\n  </form>\n</div>\n',styles:[".separator-hr{margin:0 5px;border-top-style:dashed}.edit-separator-hr{margin:10px 5px;border-top-style:dashed}.last-separator-hr{margin-top:5px}.edit-last-separator-hr{margin-top:15px}.form-group{margin-top:0;margin-bottom:0}input.form-control{border-left-width:5px}.invalid-feedback{display:block}.group-name{padding-top:0;font-weight:500;padding-right:0}.permissionsColumn{margin-bottom:20px}.permissionsRow{margin:0 15px}.well-sm{padding:.5rem}@media (min-width:992px){.user-enabled{margin-left:40px}}"]}]}],e.ctorParameters=function(){return[{type:i.AlertService},{type:H}]},e.propDecorators={form:[{type:s.ViewChild,args:["f",{static:!1}]}]},e}();var ee=function(){function e(e,t,r){this.alertService=e,this.translationService=t,this.accountService=r,this.columns=[],this.rows=[],this.rowsCache=[],this.allPermissions=[]}return e.prototype.ngOnInit=function(){var e=this,t=function(t){return e.translationService.getTranslation(t)};this.columns=[{prop:"index",name:"#",width:50,cellTemplate:this.indexTemplate,canAutoResize:!1},{prop:"name",name:t("roles.management.Name"),width:180},{prop:"description",name:t("roles.management.Description"),width:320},{prop:"usersCount",name:t("roles.management.Users"),width:50},{name:"",width:160,cellTemplate:this.actionsTemplate,resizeable:!1,canAutoResize:!1,sortable:!1,draggable:!1}],this.loadData()},e.prototype.ngAfterViewInit=function(){var e=this;this.roleEditor.changesSavedCallback=function(){e.addNewRoleToList(),e.editorModal.hide()},this.roleEditor.changesCancelledCallback=function(){e.editedRole=null,e.sourceRole=null,e.editorModal.hide()}},e.prototype.addNewRoleToList=function(){var e,r;if(this.sourceRole){Object.assign(this.sourceRole,this.editedRole);var n=this.rowsCache.indexOf(this.sourceRole,0);n>-1&&t.Utilities.moveArrayItem(this.rowsCache,n,0),(n=this.rows.indexOf(this.sourceRole,0))>-1&&t.Utilities.moveArrayItem(this.rows,n,0),this.editedRole=null,this.sourceRole=null}else{var s=new N;Object.assign(s,this.editedRole),this.editedRole=null;var i=0;try{for(var o=P(this.rowsCache),a=o.next();!a.done;a=o.next()){var l=a.value;l.index>i&&(i=l.index)}}catch(t){e={error:t}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(e)throw e.error}}s.index=i+1,this.rowsCache.splice(0,0,s),this.rows.splice(0,0,s),this.rows=T(this.rows)}},e.prototype.loadData=function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.accountService.getRolesAndPermissions().subscribe((function(t){e.alertService.stopLoadingMessage(),e.loadingIndicator=!1;var r=t[0],n=t[1];r.forEach((function(e,t,r){e.index=t+1})),e.rowsCache=T(r),e.rows=r,e.allPermissions=n}),(function(r){e.alertService.stopLoadingMessage(),e.loadingIndicator=!1,e.alertService.showStickyMessage("Load Error",'Unable to retrieve roles from the server.\r\nErrors: "'+t.Utilities.getHttpResponseMessages(r)+'"',t.MessageSeverity.error,r)}))},e.prototype.onSearchChanged=function(e){this.rows=this.rowsCache.filter((function(r){return t.Utilities.searchArray(e,!1,r.name,r.description)}))},e.prototype.onEditorModalHidden=function(){this.editingRoleName=null,this.roleEditor.resetForm(!0)},e.prototype.newRole=function(){this.editingRoleName=null,this.sourceRole=null,this.editedRole=this.roleEditor.newRole(this.allPermissions),this.editorModal.show()},e.prototype.editRole=function(e){this.editingRoleName={name:e.name},this.sourceRole=e,this.editedRole=this.roleEditor.editRole(e,this.allPermissions),this.editorModal.show()},e.prototype.deleteRole=function(e){var r=this;this.alertService.showDialog('Are you sure you want to delete the "'+e.name+'" role?',t.DialogType.confirm,(function(){return r.deleteRoleHelper(e)}))},e.prototype.deleteRoleHelper=function(e){var r=this;this.alertService.startLoadingMessage("Deleting..."),this.loadingIndicator=!0,this.accountService.deleteRole(e).subscribe((function(t){r.alertService.stopLoadingMessage(),r.loadingIndicator=!1,r.rowsCache=r.rowsCache.filter((function(t){return t!==e})),r.rows=r.rows.filter((function(t){return t!==e}))}),(function(e){r.alertService.stopLoadingMessage(),r.loadingIndicator=!1,r.alertService.showStickyMessage("Delete Error",'An error occured whilst deleting the role.\r\nError: "'+t.Utilities.getHttpResponseMessages(e)+'"',t.MessageSeverity.error,e)}))},Object.defineProperty(e.prototype,"canManageRoles",{get:function(){return this.accountService.userHasPermission(r.Permission.manageRolesPermission)},enumerable:!0,configurable:!0}),e.decorators=[{type:s.Component,args:[{selector:"roles-management",template:'<div>\n  <div class="row control-box">\n    <div class="col-lg-8">\n      <div class="form-group search-box">\n        <search-box (searchChange)="onSearchChanged($event)" placeholder="{{\'roles.management.Search\' | translate}}">></search-box>\n      </div>\n    </div>\n    <div class="col-lg-4 pr-lg-5">\n      <ul class="nav flex-column flex-lg-row justify-content-end">\n        <li *ngIf="canManageRoles" class="nav-item toolbaritem">\n          <a class="nav-link" href="javascript:;" (click)="newRole()">\n            <i class="fa fa-plus-circle"></i> {{\'roles.management.NewRole\' | translate}}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <ngx-datatable class="material colored-header sm table table-striped table-hover"\n                 [loadingIndicator]="loadingIndicator"\n                 [rows]="rows"\n                 [rowHeight]="35"\n                 [headerHeight]="35"\n                 [footerHeight]="35"\n                 [columns]="columns"\n                 [scrollbarV]="true"\n                 [columnMode]="\'force\'">\n  </ngx-datatable>\n\n  <ng-template #indexTemplate let-value="value">\n    <strong>{{value}}</strong>\n  </ng-template>\n\n\n  <ng-template #actionsTemplate let-row="row" let-value="value" let-i="index">\n    <a *ngIf="canManageRoles" class="btn btn-link btn-sm" href="javascript:;" (click)="editRole(row)"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> {{\'roles.management.Edit\' | translate}}</a>\n    <a *ngIf="!canManageRoles" class="btn btn-link btn-sm" href="javascript:;" (click)="editRole(row)"><i class="fa fa-eye" aria-hidden="true"></i> {{\'roles.management.Details\' | translate}}</a>\n    {{canManageRoles ? \'|\' : \'\'}}\n    <a *ngIf="canManageRoles" class="btn btn-link btn-sm" href="javascript:;" (click)="deleteRole(row)"><i class="fa fa-trash-o" aria-hidden="true"></i> {{\'roles.management.Delete\' | translate}}</a>\n  </ng-template>\n\n\n  <div class="modal fade" bsModal #editorModal="bs-modal" (onHidden)="onEditorModalHidden()" [config]="{backdrop: \'static\'}" tabindex="-1">\n    <div class="modal-dialog modal-lg">\n      <div class="modal-content">\n        <div class="modal-header">\n          <h4 *ngIf="!canManageRoles" class="modal-title float-left"><i class="fa fa-shield"></i> {{\'roles.management.RoleDetails\' | translate:editingRoleName}}</h4>\n          <h4 *ngIf="canManageRoles" class="modal-title float-left"><i class="fa fa-shield"></i> {{editingRoleName ? (\'roles.management.EditRole\' | translate:editingRoleName) : (\'roles.management.NewRole\' | translate)}}</h4>\n          <button type="button" class="close float-right" title="Close" (click)="editorModal.hide()">\n            <span aria-hidden="true">&times;</span>\n          </button>\n        </div>\n        <div class="modal-body">\n          <role-editor #roleEditor></role-editor>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',styles:[".control-box{margin-bottom:5px}.search-box{margin:0}.nav-item.toolbaritem a{padding-top:3px;padding-bottom:3px;min-width:100px}"]}]}],e.ctorParameters=function(){return[{type:i.AlertService},{type:i.AppTranslationService},{type:H}]},e.propDecorators={indexTemplate:[{type:s.ViewChild,args:["indexTemplate",{static:!0}]}],actionsTemplate:[{type:s.ViewChild,args:["actionsTemplate",{static:!0}]}],editorModal:[{type:s.ViewChild,args:["editorModal",{static:!0}]}],roleEditor:[{type:s.ViewChild,args:["roleEditor",{static:!0}]}]},e}();var te=function(){function e(e,t,r,n){this.alertService=e,this.translationService=t,this.localStorage=r,this.authService=n,this.rows=[],this.rowsCache=[],this.columns=[],this.editing={},this.taskEdit={},this.isDataLoaded=!1,this.loadingIndicator=!0,this.formResetToggle=!0,this._hideCompletedTasks=!1,this.verticalScrollbar=!1}return Object.defineProperty(e.prototype,"currentUserId",{get:function(){return this.authService.currentUser&&(this._currentUserId=this.authService.currentUser.id),this._currentUserId},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"hideCompletedTasks",{get:function(){return this._hideCompletedTasks},set:function(e){this.rows=e?this.rowsCache.filter((function(e){return!e.completed})):T(this.rowsCache),this._hideCompletedTasks=e},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.loadingIndicator=!0,this.fetch((function(t){e.refreshDataIndexes(t),e.rows=t,e.rowsCache=T(t),e.isDataLoaded=!0,setTimeout((function(){e.loadingIndicator=!1}),1500)}));var t=function(t){return e.translationService.getTranslation(t)};this.columns=[{prop:"completed",name:"",width:30,headerTemplate:this.statusHeaderTemplate,cellTemplate:this.statusTemplate,resizeable:!1,canAutoResize:!1,sortable:!1,draggable:!1},{prop:"name",name:t("todoDemo.management.Task"),cellTemplate:this.nameTemplate,width:200},{prop:"description",name:t("todoDemo.management.Description"),cellTemplate:this.descriptionTemplate,width:500},{name:"",width:80,cellTemplate:this.actionsTemplate,resizeable:!1,canAutoResize:!1,sortable:!1,draggable:!1}]},e.prototype.ngOnDestroy=function(){this.saveToDisk()},e.prototype.fetch=function(e){var t=this,r=this.getFromDisk();null==r?setTimeout((function(){null==(r=t.getFromDisk())&&(r=[{completed:!0,important:!0,name:"Create visual studio extension",description:"Create a visual studio VSIX extension package that will add this project as an aspnet-core project template"},{completed:!1,important:!0,name:"Do a quick how-to writeup",description:""},{completed:!1,important:!1,name:"Create aspnet-core/Angular8 tutorials based on this project",description:"Create tutorials (blog/video/youtube) on how to build applications (full stack) using aspnet-core/Angular8. The tutorial will focus on getting productive with the technology right away rather than the details on how and why they work so audience can get onboard quickly."}]),e(r)}),1e3):e(r)},e.prototype.refreshDataIndexes=function(e){var t,r,n=0;try{for(var s=P(e),i=s.next();!i.done;i=s.next()){i.value.$$index=n++}}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=s.return)&&r.call(s)}finally{if(t)throw t.error}}},e.prototype.onSearchChanged=function(e){this.rows=this.rowsCache.filter((function(r){return t.Utilities.searchArray(e,!1,r.name,r.description)||"important"==e&&r.important||"not important"==e&&!r.important}))},e.prototype.showErrorAlert=function(e,r){this.alertService.showMessage(e,r,t.MessageSeverity.error)},e.prototype.addTask=function(){var e=this;this.formResetToggle=!1,setTimeout((function(){e.formResetToggle=!0,e.taskEdit={},e.editorModal.show()}))},e.prototype.save=function(){this.rowsCache.splice(0,0,this.taskEdit),this.rows.splice(0,0,this.taskEdit),this.refreshDataIndexes(this.rowsCache),this.rows=T(this.rows),this.saveToDisk(),this.editorModal.hide()},e.prototype.updateValue=function(e,t,r,n){this.editing[n.$$index+"-"+t]=!1,this.rows[n.$$index][t]=e.target.value,this.rows=T(this.rows),this.saveToDisk()},e.prototype.delete=function(e){var r=this;this.alertService.showDialog("Are you sure you want to delete the task?",t.DialogType.confirm,(function(){return r.deleteHelper(e)}))},e.prototype.deleteHelper=function(e){this.rowsCache=this.rowsCache.filter((function(t){return t!==e})),this.rows=this.rows.filter((function(t){return t!==e})),this.saveToDisk()},e.prototype.getFromDisk=function(){return this.localStorage.getDataObject(e.DBKeyTodoDemo+":"+this.currentUserId)},e.prototype.saveToDisk=function(){this.isDataLoaded&&this.localStorage.saveSyncedSessionData(this.rowsCache,e.DBKeyTodoDemo+":"+this.currentUserId)},e.DBKeyTodoDemo="todo-demo.todo_list",e.decorators=[{type:s.Component,args:[{selector:"todo-demo",template:'<div>\n    <div class="row control-box">\n        <div class="col-lg-8">\n            <div class="form-group search-box">\n                <search-box (searchChange)="onSearchChanged($event)" placeholder="{{\'todoDemo.management.Search\' | translate}}"></search-box>\n            </div>\n        </div>\n        <div class="col-lg-4">\n            <ul class="nav flex-column flex-lg-row">\n                <li [class.active]="hideCompletedTasks" class="nav-item toolbaritem">\n                    <a class="nav-link" href="javascript:;" (click)="hideCompletedTasks = !hideCompletedTasks"><i class="fa fa-eye-slash"></i> {{\'todoDemo.management.HideCompleted\' | translate}}</a>\n                </li>\n                <li class="nav-item toolbaritem">\n                    <a class="nav-link" href="javascript:;" (click)="addTask()"><i class="fa fa-plus"></i> {{\'todoDemo.management.AddTask\' | translate}}</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <ngx-datatable class="material colored-header sm table-hover"\n                   [loadingIndicator]="loadingIndicator"\n                   [rows]="rows"\n                   [rowHeight]="35"\n                   [headerHeight]="35"\n                   [footerHeight]="35"\n                   [columns]="columns"\n                   [scrollbarV]="verticalScrollbar"\n                   [columnMode]="\'force\'">\n    </ngx-datatable>\n\n    <ng-template #statusHeaderTemplate>\n        <i class="fa fa-check-square-o"></i>\n    </ng-template>\n\n    <ng-template #statusTemplate let-row="row" let-value="value">\n        <div class="form-check">\n            <input class="form-check-input" attr.name="checkboxes-{{value}}" type="checkbox" [(ngModel)]="row.completed">\n            <label class="form-check-label"></label>\n        </div>\n    </ng-template>\n\n    <ng-template #nameTemplate let-row="row" let-value="value">\n        <span *ngIf="!editing[row.$$index + \'-name\']" class="inline-label" [class.completed]="row.completed" attr.title="Double click to edit - {{value}}" (dblclick)="editing[row.$$index + \'-name\'] = true">\n            {{value}}\n        </span>\n        <input *ngIf="editing[row.$$index + \'-name\']" class="inline-editor" autofocus (blur)="updateValue($event, \'name\', value, row)" type="text" [value]="value" />\n    </ng-template>\n\n    <ng-template #descriptionTemplate let-row="row" let-value="value">\n        <span *ngIf="!editing[row.$$index + \'-description\']" class="inline-label" [class.completed]="row.completed" attr.title="Double click to edit - {{value}}" (dblclick)="editing[row.$$index + \'-description\'] = true">\n            {{value}}\n        </span>\n        <input *ngIf="editing[row.$$index + \'-description\']" class="inline-editor" autofocus (blur)="updateValue($event, \'description\', value, row)" type="text" [value]="value" />\n    </ng-template>\n\n\n    <ng-template #actionsTemplate let-row="row">\n        <a class="btn btn-link btn-sm" href="javascript:;" tooltip="{{\'todoDemo.management.Delete\' | translate}}" container="body" (click)="delete(row)"><i class="fa fa-times"></i></a>\n        <a class="btn btn-link btn-sm" href="javascript:;" tooltip="{{\'todoDemo.management.Important\' | translate}}" container="body" (click)="row.important = !row.important" (mouseover)="row.isMouseOver=true" (mouseout)="row.isMouseOver=false">\n            <i *ngIf="row.important || row.isMouseOver" class="fa fa-bookmark"></i>\n            <i *ngIf="!row.important && !row.isMouseOver" class="fa fa-bookmark-o"></i>\n        </a>\n    </ng-template>\n\n\n\n\n\n    <div class="modal fade" bsModal #editorModal="bs-modal" tabindex="-1">\n        <div class="modal-dialog">\n            <div class="modal-content">\n                <div class="modal-header">\n                    <h4 class="modal-title float-left"><i class="fa fa-tasks"></i> {{\'todoDemo.editor.NewTask\' | translate}}</h4>\n                    <button type="button" class="close" title="Close" (click)="editorModal.hide()">\n                        <span aria-hidden="true">&times;</span>\n                    </button>\n                </div>\n                <div class="modal-body">\n                    <form *ngIf="formResetToggle" name="taskEditorForm" #f="ngForm" novalidate\n                          (ngSubmit)="f.form.valid ? save() :\n                      (!taskName.valid && showErrorAlert(\'Task name is required\', \'Please enter a name for the task\'));">\n\n\n                        <div class="form-group row has-feedback-icon">\n                            <label class="col-form-label col-md-3" for="taskName">{{\'todoDemo.editor.Name\' | translate}}:</label>\n                            <div class="col-md-9">\n                                <input autofocus type="text" id="taskName" name="taskName" placeholder="Enter task name" class="form-control" [ngClass]="{\'is-valid\': f.submitted && taskName.valid, \'is-invalid\' : f.submitted && !taskName.valid}"\n                                       [(ngModel)]="taskEdit.name" #taskName="ngModel" required />\n                                <i *ngIf="f.submitted" class="fa form-control-feedback" [ngClass]="{\'fa-check\': taskName.valid, \'fa-times\' : !taskName.valid}" aria-hidden="true"></i>\n                                <span *ngIf="f.submitted && !taskName.valid" class="invalid-feedback">\n                                    {{\'todoDemo.editor.TaskNameRequired\' | translate}}\n                                </span>\n                            </div>\n                        </div>\n\n                        <div class="form-group row description-form-group">\n                            <label class="col-form-label col-md-3" for="taskDescription">{{\'todoDemo.editor.Description\' | translate}}:</label>\n                            <div class="col-md-9">\n                                <input type="text" id="taskDescription" name="taskDescription" placeholder="Enter task description" class="form-control" [(ngModel)]="taskEdit.description" />\n                            </div>\n                        </div>\n\n                        <div class="row">\n                            <label class="col-form-label col-md-3"> </label>\n                            <div class="col-md-9">\n                                <div class="form-check">\n                                    <input class="form-check-input" id="isImportant" name="isImportant" type="checkbox" [(ngModel)]="taskEdit.important">\n                                    <label for="isImportant" class="form-check-label">{{\'todoDemo.editor.Important\' | translate}}</label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="row">\n                            <div class="col-md-12">\n                                <hr class="edit-last-separator-hr" />\n                            </div>\n                        </div>\n\n\n                        <div class="form-group actionBtn-form-group">\n                            <div class="float-right">\n                                <button type="submit" class="btn btn-primary">{{\'todoDemo.editor.AddTask\' | translate}}</button>\n                            </div>\n                        </div>\n                        <div class="clearfix"></div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>',styles:["input.form-control{border-left-width:5px}.control-box{margin-bottom:5px}.search-box{margin:0}.nav-item.toolbaritem a{padding-top:3px;padding-bottom:3px;min-width:100px;font-weight:700}.completed{text-decoration:line-through}.form-check{margin:0}.inline-label{width:100%;min-height:1rem;display:inline-block}.inline-editor{width:100%}.description-form-group{margin-bottom:5px}.actionBtn-form-group{margin:0}.edit-last-separator-hr{margin:10px 0}"]}]}],e.ctorParameters=function(){return[{type:i.AlertService},{type:i.AppTranslationService},{type:i.LocalStoreManager},{type:r.AuthService}]},e.propDecorators={verticalScrollbar:[{type:s.Input}],statusHeaderTemplate:[{type:s.ViewChild,args:["statusHeaderTemplate",{static:!0}]}],statusTemplate:[{type:s.ViewChild,args:["statusTemplate",{static:!0}]}],nameTemplate:[{type:s.ViewChild,args:["nameTemplate",{static:!0}]}],descriptionTemplate:[{type:s.ViewChild,args:["descriptionTemplate",{static:!0}]}],actionsTemplate:[{type:s.ViewChild,args:["actionsTemplate",{static:!0}]}],editorModal:[{type:s.ViewChild,args:["editorModal",{static:!0}]}]},e}();var re=function(){function e(){this.placeholder="Search...",this.searchChange=new s.EventEmitter}return e.prototype.onValueChange=function(e){var t=this;setTimeout((function(){return t.searchChange.emit(e)}))},e.prototype.clear=function(){this.searchInput.nativeElement.value="",this.onValueChange(this.searchInput.nativeElement.value)},e.decorators=[{type:s.Component,args:[{selector:"search-box",template:'<div class="icon-addon addon-sm">\n    <label for="searchInput" title="Search"><i class="fa fa-search left-icon search-icon"></i></label>\n    <input id="searchInput" #searchInput type="search" ngModel="" (ngModelChange)="onValueChange($event)" [attr.placeholder]="placeholder" class="form-control left-icon right-icon">\n    <a *ngIf="searchInput.value" href="javascript:;" title="Clear" (click)="clear()" class="fa fa-times-circle clear-input right-icon"></a>\n</div>',styles:[".search-icon{pointer-events:none}"]}]}],e.propDecorators={placeholder:[{type:s.Input}],searchChange:[{type:s.Output}],searchInput:[{type:s.ViewChild,args:["searchInput",{static:!0}]}]},e}();require("chart.js");var ne=function(){function e(e){this.alertService=e,this.chartData=[{data:[65,59,80,81,56,55],label:"Series A"},{data:[28,48,40,19,86,27],label:"Series B"},{data:[18,48,77,9,100,27],label:"Series C"}],this.chartLabels=["Jan","Feb","Mar","Apr","May","Jun"],this.chartOptions={responsive:!0,title:{display:!1,fontSize:16,text:"Important Stuff"}},this.chartColors=[{backgroundColor:"rgba(148,159,177,0.2)",borderColor:"rgba(148,159,177,1)",pointBackgroundColor:"rgba(148,159,177,1)",pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:"rgba(148,159,177,0.8)"},{backgroundColor:"rgba(77,83,96,0.2)",borderColor:"rgba(77,83,96,1)",pointBackgroundColor:"rgba(77,83,96,1)",pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:"rgba(77,83,96,1)"},{backgroundColor:"rgba(128,128,128,0.2)",borderColor:"rgba(128,128,128,1)",pointBackgroundColor:"rgba(128,128,128,1)",pointBorderColor:"#fff",pointHoverBackgroundColor:"#fff",pointHoverBorderColor:"rgba(128,128,128,0.8)"}],this.chartLegend=!0,this.chartType="line"}return e.prototype.ngOnInit=function(){var e=this;this.timerReference=setInterval((function(){return e.randomize()}),5e3);var t=o.of(window.innerWidth),r=o.fromEvent(window,"resize").pipe(a.map((function(e){return e.target.innerWidth})));this.windowWidth$=o.merge(t,r).pipe(a.distinctUntilChanged()),this.windowWidthSub=this.windowWidth$.subscribe((function(t){return e.chartLegend=!(t<600)}))},e.prototype.ngOnDestroy=function(){clearInterval(this.timerReference),this.windowWidthSub.unsubscribe()},e.prototype.randomize=function(){for(var e=new Array(this.chartData.length),t=0;t<this.chartData.length;t++){e[t]={data:new Array(this.chartData[t].data.length),label:this.chartData[t].label};for(var r=0;r<this.chartData[t].data.length;r++)e[t].data[r]=Math.floor(100*Math.random()+1)}this.chartData=e},e.prototype.changeChartType=function(e){this.chartType=e},e.prototype.showMessage=function(e){this.alertService.showMessage("Demo",e,t.MessageSeverity.info)},e.prototype.showDialog=function(e){var r=this;this.alertService.showDialog(e,t.DialogType.prompt,(function(e){return r.configure(!0,e)}),(function(){return r.configure(!1)}))},e.prototype.configure=function(e,r){var n=this;e?(this.alertService.showStickyMessage("Simulating...","",t.MessageSeverity.wait),setTimeout((function(){n.alertService.resetStickyMessage(),n.alertService.showMessage("Demo",'Your settings was successfully configured to "'+r+'"',t.MessageSeverity.success)}),2e3)):this.alertService.showMessage("Demo","Operation cancelled by user",t.MessageSeverity.default)},e.prototype.chartClicked=function(e){console.log(e)},e.prototype.chartHovered=function(e){console.log(e)},e.decorators=[{type:s.Component,args:[{selector:"statistics-demo",template:'<div class="row statistics-container">\n  <div class="col-md-6">\n    <div class="chart-container">\n      <canvas baseChart width="600" height="250"\n              [datasets]="chartData"\n              [labels]="chartLabels"\n              [options]="chartOptions"\n              [colors]="chartColors"\n              [legend]="chartLegend"\n              [chartType]="chartType"\n              (chartHover)="chartHovered($event)"\n              (chartClick)="chartClicked($event)"></canvas>\n    </div>\n  </div>\n  <div class="col-md-6">\n    <div class="d-none d-sm-block table-responsive">\n      <table class="table table-sm">\n        <thead>\n          <tr>\n            <th class="border-top-0"></th>\n            <th class="border-top-0" *ngFor="let label of chartLabels">{{label}}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let d of chartData">\n            <th>{{d && d.label.split(\' \').pop()}}</th>\n            <td *ngFor="let label of chartLabels; let j=index">{{d && d.data[j]}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <button class="refresh-btn" (click)="randomize();showMessage(\'Manual refresh!\');">REFSH</button>\n    <div class="chart-type-container" dropdown>\n      <button id="chartType" type="button" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-bar-chart"></i></button>\n      <ul class="dropdown-menu">\n        <li [class.active]="chartType == \'bar\'">\n          <a class="dropdown-item" (click)="changeChartType(\'bar\')" href="javascript:;">Bar Chart</a>\n        </li>\n        <li [class.active]="chartType == \'pie\'">\n          <a class="dropdown-item" (click)="changeChartType(\'pie\')" href="javascript:;">Pie Chart</a>\n        </li>\n        <li [class.active]="chartType == \'doughnut\'">\n          <a class="dropdown-item" (click)="changeChartType(\'doughnut\')" href="javascript:;">Doughnut Chart</a>\n        </li>\n        <li [class.active]="chartType == \'polarArea\'">\n          <a class="dropdown-item" (click)="changeChartType(\'polarArea\')" href="javascript:;">Polar Area Chart</a>\n        </li>\n        <li [class.active]="chartType == \'radar\'">\n          <a class="dropdown-item" (click)="changeChartType(\'radar\')" href="javascript:;">Radar Chart</a>\n        </li>\n        <li class="dropdown-divider"></li>\n        <li [class.active]="chartType == \'line\'">\n          <a class="dropdown-item" (click)="changeChartType(\'line\')" href="javascript:;">Line Chart</a>\n        </li>\n      </ul>\n    </div>\n    <button (click)="showMessage(\'You\\\'ve clicked on the menu\')"><i class="fa fa-bars"></i></button>\n    <button (click)="showDialog(\'Enter some value to do serious configuration...\')"><i class="fa fa-cogs"></i></button>\n  </div>\n</div>\n',styles:[".statistics-container{font-size:.875rem}.chart-container{display:block}.refresh-btn{margin-right:10px}.chart-type-container{display:inline-block}.chart-type-container .active{background-color:#e8e8e8}"]}]}],e.ctorParameters=function(){return[{type:i.AlertService}]},e}();var se=function(){function e(e,t){var r=this;this.el=e,this.zone=t,this.showBSTab=new s.EventEmitter,this.hideBSTab=new s.EventEmitter,this.tabShownSubscription=o.fromEvent($(this.el.nativeElement),"show.bs.tab").subscribe((function(e){r.runInZone((function(){return r.showBSTab.emit({type:e.type,target:e.target,relatedTarget:e.relatedTarget})}))})),this.tabHiddenSubscription=o.fromEvent($(this.el.nativeElement),"hidden.bs.tab").subscribe((function(e){r.runInZone((function(){return r.hideBSTab.emit({type:e.type,target:e.target,relatedTarget:e.relatedTarget})}))}))}return e.prototype.ngOnDestroy=function(){this.tabShownSubscription.unsubscribe(),this.tabHiddenSubscription.unsubscribe()},e.prototype.runInZone=function(e){this.zone.run((function(){e()}))},e.prototype.show=function(e){$(e).tab("show")},e.decorators=[{type:s.Directive,args:[{selector:"[bootstrapTab]",exportAs:"bootstrap-tab"}]}],e.ctorParameters=function(){return[{type:s.ElementRef},{type:s.NgZone}]},e.propDecorators={showBSTab:[{type:s.Output}],hideBSTab:[{type:s.Output}]},e}();var ie=function(){function e(e,t,r){this.router=e,this.route=t,this.accountService=r,this.isProfileActivated=!0,this.isPreferencesActivated=!1,this.isUsersActivated=!1,this.isRolesActivated=!1,this.profileTab="profile",this.preferencesTab="preferences",this.usersTab="users",this.rolesTab="roles"}return e.prototype.ngOnInit=function(){var e=this;this.fragmentSubscription=this.route.fragment.subscribe((function(t){return e.showContent(t)}))},e.prototype.ngOnDestroy=function(){this.fragmentSubscription.unsubscribe()},e.prototype.showContent=function(e){e&&(e=e.toLowerCase()),this.isFragmentEquals(e,this.usersTab)&&!this.canViewUsers||this.isFragmentEquals(e,this.rolesTab)&&!this.canViewRoles||this.tab.show("#"+(e||this.profileTab)+"Tab")},e.prototype.isFragmentEquals=function(e,t){return null==e&&(e=""),null==t&&(t=""),e.toLowerCase()==t.toLowerCase()},e.prototype.onShowTab=function(e){var t=e.target.hash.split("#",2).pop();this.isProfileActivated=t==this.profileTab,this.isPreferencesActivated=t==this.preferencesTab,this.isUsersActivated=t==this.usersTab,this.isRolesActivated=t==this.rolesTab,this.router.navigate([],{fragment:t})},Object.defineProperty(e.prototype,"canViewUsers",{get:function(){return this.accountService.userHasPermission(r.Permission.viewUsersPermission)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"canViewRoles",{get:function(){return this.accountService.userHasPermission(r.Permission.viewRolesPermission)},enumerable:!0,configurable:!0}),e.decorators=[{type:s.Component,args:[{selector:"settings",template:'<div class="container settings-page">\n    <header class="pageHeader">\n        <h3><i class="fa fa-cog fa-lg page-caption" aria-hidden="true"></i> {{\'pageHeader.Settings\' | translate}}</h3>\n    </header>\n\n    <div [@fadeInOut]>\n        <div class="d-sm-flex flex-row">\n            <ul bootstrapTab #tab="bootstrap-tab" (showBSTab)="onShowTab($event)" class="nav nav-tabs nav-tabs--vertical nav-tabs--left" role="navigation">\n                <li class="nav-item">\n                    <a id="profileTab" [routerLink]="[]" fragment="profile" data-target="#profile" href="#profile" class="nav-link active" data-toggle="tab" role="tab" aria-controls="profile">\n                        <i class="fa fa-user-circle-o fa-fw" aria-hidden="true"></i> {{\'settings.tab.Profile\' | translate}}\n                    </a>\n                </li>\n                <li class="nav-item">\n                    <a id="preferencesTab" [routerLink]="[]" fragment="preferences" data-target="#preferences" href="#preferences" class="nav-link" data-toggle="tab" role="tab" aria-controls="preferences">\n                        <i class="fa fa-sliders fa-fw" aria-hidden="true"></i> {{\'settings.tab.Preferences\' | translate}}\n                    </a>\n                </li>\n            </ul>\n            <div class="tab-content w-100">\n                <div class="tab-pane show active" id="profile" role="tabpanel">\n                    <h4>{{\'settings.header.UserProfile\' | translate}}</h4>\n                    <hr class="separator-hr" />\n                    <div [@fadeInOut] *ngIf="isProfileActivated" class="content-container pl-lg-2">\n                        <user-info></user-info>\n                    </div>\n\n                </div>\n                <div class="tab-pane" id="preferences" role="tabpanel">\n                    <h4>{{\'settings.header.UserPreferences\' | translate}}</h4>\n                    <hr class="separator-hr" />\n                    <div [@fadeInOut] *ngIf="isPreferencesActivated" class="content-container pl-lg-2">\n                        <user-preferences></user-preferences>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n',animations:[A],styles:[".separator-hr{margin-top:0;margin-bottom:10px}[hidden]{display:none}"]}]}],e.ctorParameters=function(){return[{type:c.Router},{type:c.ActivatedRoute},{type:H}]},e.propDecorators={tab:[{type:s.ViewChild,args:["tab",{static:!0}]}]},e}();var oe=function(){function e(){}return e.decorators=[{type:s.Component,args:[{selector:"not-found",template:'<header class="pageHeader">\n    <h3><i class="fa fa-exclamation-circle fa-lg page-caption" aria-hidden="true"></i> {{\'pageHeader.NotFound\' | translate}}</h3>\n</header>\n\n<div [@fadeInOut] class="d-flex h-75">\n    <div class="m-auto">\n        <div class="icon-container"><i class=\'fa fa-exclamation-circle\'></i> {{\'notFound.404\' | translate}}</div>\n        <div class="text-muted error-description">{{\'notFound.pageNotFound\' | translate}}</div>\n        <div><a class="btn btn-primary" routerLink="/"><i class=\'fa fa-home\'></i> {{\'notFound.backToHome\' | translate}}</a></div>\n    </div>\n</div>\n',animations:[A],styles:[".icon-container{font-size:5rem}.error-description{font-size:1.5rem;padding-bottom:10px}"]}]}],e}(),ae=function(){function e(e,t,r){this.alertService=e,this.authService=t,this.configurations=r,this.userLogin=new O,this.isLoading=!1,this.formResetToggle=!0,this.isModal=!1}return e.prototype.ngOnInit=function(){var e=this;this.userLogin.rememberMe=this.authService.rememberMe,this.getShouldRedirect()?this.authService.redirectLoginUser():this.loginStatusSubscription=this.authService.getLoginStatusEvent().subscribe((function(t){e.getShouldRedirect()&&e.authService.redirectLoginUser()}))},e.prototype.ngOnDestroy=function(){this.loginStatusSubscription&&this.loginStatusSubscription.unsubscribe()},e.prototype.getShouldRedirect=function(){return!this.isModal&&this.authService.isLoggedIn&&!this.authService.isSessionExpired},e.prototype.showErrorAlert=function(e,r){this.alertService.showMessage(e,r,t.MessageSeverity.error)},e.prototype.closeModal=function(){this.modalClosedCallback&&this.modalClosedCallback()},e.prototype.login=function(){var e=this;this.isLoading=!0,this.alertService.startLoadingMessage("","Attempting login..."),this.authService.loginWithPassword(this.userLogin.userName,this.userLogin.password,this.userLogin.rememberMe).subscribe((function(r){setTimeout((function(){e.alertService.stopLoadingMessage(),e.isLoading=!1,e.reset(),e.isModal?(e.alertService.showMessage("Login","Session for "+r.userName+" restored!",t.MessageSeverity.success),setTimeout((function(){e.alertService.showStickyMessage("Session Restored","Please try your last operation again",t.MessageSeverity.default)}),500),e.closeModal()):e.alertService.showMessage("Login","Welcome "+r.userName+"!",t.MessageSeverity.success)}),500)}),(function(r){if(e.alertService.stopLoadingMessage(),t.Utilities.checkNoNetwork(r))e.alertService.showStickyMessage(t.Utilities.noNetworkMessageCaption,t.Utilities.noNetworkMessageDetail,t.MessageSeverity.error,r),e.offerAlternateHost();else{var n=t.Utilities.getHttpResponseMessage(r);n?e.alertService.showStickyMessage("Unable to login",e.mapLoginErrorMessage(n),t.MessageSeverity.error,r):e.alertService.showStickyMessage("Unable to login","An error occured whilst logging in, please try again later.\nError: "+t.Utilities.getResponseBody(r),t.MessageSeverity.error,r)}setTimeout((function(){e.isLoading=!1}),500)}))},e.prototype.offerAlternateHost=function(){var e=this;t.Utilities.checkIsLocalHost(location.origin)&&t.Utilities.checkIsLocalHost(this.configurations.baseUrl)&&this.alertService.showDialog("Dear Developer!\nIt appears your backend Web API service is not running...\nWould you want to temporarily switch to the online Demo API below?(Or specify another)",t.DialogType.prompt,(function(r){e.configurations.baseUrl=r,e.configurations.tokenUrl=r,e.alertService.showStickyMessage("API Changed!","The target Web API has been changed to: "+r,t.MessageSeverity.warn)}),null,null,null,this.configurations.fallbackBaseUrl)},e.prototype.mapLoginErrorMessage=function(e){return"invalid_username_or_password"==e?"Invalid username or password":"invalid_grant"==e?"This account has been disabled":e},e.prototype.reset=function(){var e=this;this.formResetToggle=!1,setTimeout((function(){e.formResetToggle=!0}))},e.decorators=[{type:s.Component,args:[{selector:"app-login",template:'<div class="d-flex h-90">\n  <div class="login-container m-auto">\n    <div class="card boxshadow">\n      <div class="card-header bg-primary dark text-white clearfix">\n        <i class="fa fa-lock" aria-hidden="true"></i> Login\n        <button *ngIf="isModal" type="button" class="close float-right text-light" aria-label="Close" (click)="closeModal()">\n          <span aria-hidden="true">&times;</span>\n        </button>\n      </div>\n      <div class="card-body">\n        <div class="col-md-8 offset-md-2">\n          <form *ngIf="formResetToggle" class="login" name="loginForm" #f="ngForm" novalidate\n                (ngSubmit)="f.form.valid ? login() :\n                          (!username.valid && showErrorAlert(\'Username is required\', \'Please enter a valid username\'));\n                          (!password.valid && showErrorAlert(\'Password is required\', \'Please enter a valid password\'))">\n            <div class="form-group row has-feedback-icon">\n              <label class="col-form-label col-md-3" for="login-username">Username:</label>\n              <div class="col-md-9">\n                <input type="text" id="login-username" name="username" placeholder="Enter username" autocomplete="username" class="form-control" [ngClass]="{\'is-valid\': f.submitted && username.valid, \'is-invalid\' : f.submitted && !username.valid}"\n                       [(ngModel)]="userLogin.userName" #username="ngModel" required />\n                <i *ngIf="f.submitted" class="fa form-control-feedback" [ngClass]="{\'fa-check\': username.valid, \'fa-times\' : !username.valid}" aria-hidden="true"></i>\n                <span class="invalid-feedback" *ngIf="f.submitted && !username.valid">\n                  Username is required\n                </span>\n              </div>\n            </div>\n            <div class="form-group row has-feedback-icon">\n              <label class="col-form-label col-md-3" for="login-password">Password:</label>\n              <div class="col-md-9">\n                <input type="password" id="login-password" name="password" placeholder="Enter password" autocomplete="current-password" class="form-control" [ngClass]="{\'is-valid\': f.submitted && password.valid, \'is-invalid\' : f.submitted && !password.valid}"\n                       [(ngModel)]="userLogin.password" #password="ngModel" required />\n                <i *ngIf="f.submitted" class="fa form-control-feedback" [ngClass]="{\'fa-check\': password.valid, \'fa-times\' : !password.valid}" aria-hidden="true"></i>\n                <span class="invalid-feedback" *ngIf="f.submitted && !password.valid">\n                  Password is required\n                </span>\n              </div>\n            </div>\n            <div class="form-group row">\n              <div class="offset-md-3 col-md-9">\n                <div class="form-check">\n                  <input type="checkbox" class="form-check-input" id="login-rememberme" name="rememberMe" [(ngModel)]="userLogin.rememberMe">\n                  <label class="form-check-label" for="login-rememberme">Remember me</label>\n                </div>\n              </div>\n            </div>\n            <div class="form-group row">\n              <div class="offset-md-3 col-md-9">\n                <button type="submit" class="btn btn-primary" [disabled]="isLoading">\n                  <i *ngIf="isLoading" class=\'fa fa-circle-o-notch fa-spin\'></i> {{isLoading ? \'Logging in...\' : \'Login\'}}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',styles:['.boxshadow{position:relative;box-shadow:1px 2px 4px rgba(0,0,0,.5);padding:10px;background:#fff}.boxshadow::after{content:"";position:absolute;z-index:-1;box-shadow:0 15px 20px rgba(0,0,0,.3);width:70%;left:15%;height:100px;bottom:0}.cardshadow{box-shadow:0 4px 8px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19)}.last-control-group{margin-bottom:-.75rem}.h-90{height:90%}@media (min-width:768px){.login-container{width:700px}}@media (min-width:1200px){.login-container{width:730px}}']}]}],e.ctorParameters=function(){return[{type:i.AlertService},{type:r.AuthService},{type:i.ConfigurationService}]},e.propDecorators={isModal:[{type:s.Input}]},e}();var le=function(){function e(){}return e.decorators=[{type:s.NgModule,args:[{imports:[],declarations:[],exports:[p.CommonModule,h.FormsModule,h.ReactiveFormsModule,c.RouterModule,f.BsDropdownModule,g.TabsModule,m.PaginationModule,u.ModalModule,b.AccordionModule,w.PopoverModule,v.TooltipModule,y.CarouselModule,S.AlertModule,E.TranslateModule,M.NgxDatatableModule,k.ChartsModule],providers:[],entryComponents:[]}]}],e}(),ce=function(){function e(e,t){this.validateEqual=e,this.reverse=t}return e.prototype.validate=function(e){var t=e.root.get(this.validateEqual);return t?"true"===this.reverse?this.validateReverse(e,t):this.validateNoReverse(e,t):null},e.prototype.validateNoReverse=function(e,t){return t.value===e.value?null:{validateEqual:!0}},e.prototype.validateReverse=function(e,t){return e.value===t.value?t.errors&&(delete t.errors.validateEqual,0==Object.keys(t.errors).length&&t.setErrors(null)):t.setErrors({validateEqual:!0}),null},e.decorators=[{type:s.Directive,args:[{selector:"[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]",providers:[{provide:h.NG_VALIDATORS,useExisting:s.forwardRef((function(){return e})),multi:!0}]}]}],e.ctorParameters=function(){return[{type:String,decorators:[{type:s.Attribute,args:["validateEqual"]}]},{type:String,decorators:[{type:s.Attribute,args:["reverse"]}]}]},e}();var de=function(){function e(){this.lastFunction=new s.EventEmitter}return Object.defineProperty(e.prototype,"lastElement",{set:function(e){var t=this;e&&setTimeout((function(){t.lastFunction.emit()}))},enumerable:!0,configurable:!0}),e.decorators=[{type:s.Directive,args:[{selector:"[lastElement]"}]}],e.propDecorators={lastElement:[{type:s.Input}],lastFunction:[{type:s.Output}]},e}();var ue=function(){function e(e){this.elementRef=e}return e.prototype.ngOnInit=function(){var e=this;setTimeout((function(){return e.elementRef.nativeElement.focus()}),500)},e.decorators=[{type:s.Directive,args:[{selector:"[autofocus]"}]}],e.ctorParameters=function(){return[{type:s.ElementRef}]},e}();var pe=function(){function e(e){var t=this;this.el=e,this.ngModelChange=new s.EventEmitter,this.checkedSubscription=o.fromEvent($(this.el.nativeElement),"change").subscribe((function(e){return t.ngModelChange.emit(e.target.checked)}))}return Object.defineProperty(e.prototype,"ngModel",{set:function(e){this.toggle(e)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.initialize()},e.prototype.ngOnDestroy=function(){this.destroy()},e.prototype.initialize=function(e){$(this.el.nativeElement).bootstrapToggle(e)},e.prototype.destroy=function(){this.checkedSubscription&&this.checkedSubscription.unsubscribe(),$(this.el.nativeElement).bootstrapToggle("destroy")},e.prototype.toggleOn=function(){$(this.el.nativeElement).bootstrapToggle("on")},e.prototype.toggleOff=function(){$(this.el.nativeElement).bootstrapToggle("off")},e.prototype.toggle=function(e){null==e?$(this.el.nativeElement).bootstrapToggle("toggle"):$(this.el.nativeElement).prop("checked",e).change()},e.prototype.enable=function(){$(this.el.nativeElement).bootstrapToggle("enable")},e.prototype.disable=function(){$(this.el.nativeElement).bootstrapToggle("disable")},e.decorators=[{type:s.Directive,args:[{selector:"[bootstrapToggle]",exportAs:"bootstrap-toggle"}]}],e.ctorParameters=function(){return[{type:s.ElementRef}]},e.propDecorators={ngModel:[{type:s.Input}],ngModelChange:[{type:s.Output}]},e}();var he=function(){function e(e){var t=this;this.el=e,this._isShown=!1,this.options={},this.ngModelChange=new s.EventEmitter,this.changedSubscription=o.fromEvent($(this.el.nativeElement),"change").subscribe((function(e){return setTimeout((function(){return t.ngModelChange.emit(e.target.value)}))})),this.shownSubscription=o.fromEvent($(this.el.nativeElement),"show").subscribe((function(e){return t._isShown=!0})),this.hiddenSubscription=o.fromEvent($(this.el.nativeElement),"hide").subscribe((function(e){return t._isShown=!1}))}return Object.defineProperty(e.prototype,"isShown",{get:function(){return this._isShown},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ngModel",{set:function(e){this.tryUpdate(e)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.initialize(this.options)},e.prototype.ngOnDestroy=function(){this.destroy()},e.prototype.initialize=function(e){$(this.el.nativeElement).datepicker(e)},e.prototype.destroy=function(){this.changedSubscription&&(this.changedSubscription.unsubscribe(),this.shownSubscription.unsubscribe(),this.hiddenSubscription.unsubscribe()),$(this.el.nativeElement).datepicker("destroy")},e.prototype.show=function(){$(this.el.nativeElement).datepicker("show")},e.prototype.hide=function(){$(this.el.nativeElement).datepicker("hide")},e.prototype.toggle=function(){this.isShown?this.hide():this.show()},e.prototype.tryUpdate=function(e){var t=this;clearTimeout(this.updateTimeout),$(this.el.nativeElement).is(":focus")?this.updateTimeout=setTimeout((function(){t.updateTimeout=null,t.tryUpdate(e)}),100):this.update(e)},e.prototype.update=function(e){var t=this;setTimeout((function(){return $(t.el.nativeElement).datepicker("update",e)}))},e.prototype.setDate=function(e){var t=this;setTimeout((function(){return $(t.el.nativeElement).datepicker("setDate",e)}))},e.prototype.setUTCDate=function(e){var t=this;setTimeout((function(){return $(t.el.nativeElement).datepicker("setUTCDate",e)}))},e.prototype.clearDates=function(){var e=this;setTimeout((function(){return $(e.el.nativeElement).datepicker("clearDates")}))},e.prototype.getDate=function(){$(this.el.nativeElement).datepicker("getDate")},e.prototype.getUTCDate=function(){$(this.el.nativeElement).datepicker("getUTCDate")},e.decorators=[{type:s.Directive,args:[{selector:"[bootstrapDatepicker]",exportAs:"bootstrap-datepicker"}]}],e.ctorParameters=function(){return[{type:s.ElementRef}]},e.propDecorators={options:[{type:s.Input}],ngModel:[{type:s.Input}],ngModelChange:[{type:s.Output}]},e}();var fe=function(){function e(e){if(e)throw new Error("NgxAppkitStarterAlphaModule is already loaded. Import it in the AppModule only")}return e.forRoot=function(){return{ngModule:e,providers:[]}},e.decorators=[{type:s.NgModule,args:[{declarations:[ce,de,ue,se,pe,X,he,W,K,Z,Y,ee,Q,J,re,ne,te,ae,ie,oe],imports:[le],exports:[ce,de,ue,se,pe,X,he,W,K,Z,Y,ee,Q,J,re,ne,te,ae,ie,oe],providers:[_,F,j,H,q,z,L,V,G,B,{provide:t.AlertServiceAbstractProvider,useClass:z},{provide:t.ThemeManagerAbstractProvider,useClass:L},{provide:t.ConfigurationServiceAbstractProvider,useClass:V},{provide:t.LocalStoreManagerServiceAbstractProvider,useClass:G},{provide:t.TranslationServiceAbstractProvider,useClass:B}],entryComponents:[ae]}]}],e.ctorParameters=function(){return[{type:e,decorators:[{type:s.Optional},{type:s.SkipSelf}]}]},e}();e.AccountEndpoint=q,e.AccountService=H,e.AlertServiceProvider=z,e.AppTitleService=_,e.ConfigurationServiceProvider=V,e.DependencyModule=le,e.Gender=D,e.GroupByPipe=W,e.LocalStoreManagerProvider=G,e.LoginComponent=ae,e.NgxAppkitStarterAlphaModule=fe,e.NotFoundComponent=oe,e.Notification=R,e.NotificationEndpoint=j,e.NotificationService=F,e.NotificationsViewerComponent=J,e.Role=N,e.RoleEditorComponent=Q,e.RolesManagementComponent=ee,e.SearchBoxComponent=re,e.SettingsComponent=ie,e.StatisticsDemoComponent=ne,e.ThemeManagerProvider=L,e.TodoDemoComponent=te,e.TranslationServiceProvider=B,e.UserEdit=I,e.UserInfoComponent=Z,e.UserLogin=O,e.UserPreferencesComponent=Y,e.UsersManagementComponent=K,e.fadeInOut=A,e.flyInOut=function(e){return void 0===e&&(e=.2),n.trigger("flyInOut",[n.state("in",n.style({opacity:1,transform:"translateX(0)"})),n.transition("void => *",[n.style({opacity:0,transform:"translateX(-100%)"}),n.animate(e+"s ease-in")]),n.transition("* => void",[n.animate(e+"s 10ms ease-out",n.style({opacity:0,transform:"translateX(100%)"}))])])},e.ɵa=ce,e.ɵb=de,e.ɵc=ue,e.ɵd=se,e.ɵe=pe,e.ɵf=X,e.ɵg=he,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=polpware-ngx-appkit-starter-alpha.umd.min.js.map