{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@polpware/ngx-appkit-starter-alpha/lib/models/enums.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/notification.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/role.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/user-edit.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/user-login.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/animations.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/configuration.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/theme-manager.provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/account-endpoint.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/account.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/notification-endpoint.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/notification.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/translation.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/app-title.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/alert.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/local-storage-manager.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pipes/group-by.pipe.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/autofocus.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-datepicker.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-select.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-tab.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-toggle.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/equal-validator.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/last-element.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/notifications-viewer/notifications-viewer.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/notifications-viewer/notifications-viewer.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/search-box/search-box.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/search-box/search-box.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/user-info/user-info.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/user-info/user-info.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/users-management/users-management.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/users-management/users-management.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/user-preferences/user-preferences.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/user-preferences/user-preferences.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/role-editor/role-editor.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/role-editor/role-editor.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/roles-management/roles-management.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/roles-management/roles-management.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/todo-demo/todo-demo.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/todo-demo/todo-demo.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/statistics-demo/statistics-demo.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/statistics-demo/statistics-demo.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/settings/settings.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/settings/settings.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/not-found/not-found.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/not-found/not-found.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/login/login.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/login/login.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/dependency.module.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/ngx-appkit-starter-alpha.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","Gender","Notification","Create","data","assign","date","Utilities","parseDate","name","description","permissions","UserEdit","currentPassword","newPassword","confirmPassword","_this","_super","User","userName","password","rememberMe","fadeInOut","trigger","transition","style","opacity","animate","ConfigurationServiceProvider","impl","get","core","ɵɵinject","ngxAppkitServicesAlpha","ConfigurationService","factory","ɵfac","ConfigurationServiceAbstractProvider","ThemeManagerProvider","ThemeManager","ThemeManagerAbstractProvider","AccountEndpoint","configurations","http","authService","_usersUrl","_userByUserNameUrl","_currentUserUrl","_currentUserPreferencesUrl","_unblockUserUrl","_rolesUrl","_roleByRoleNameUrl","_permissionsUrl","defineProperty","baseUrl","getUserEndpoint","userId","endpointUrl","usersUrl","currentUserUrl","requestHeaders","pipe","catchError","handleError","getUserByUserNameEndpoint","userByUserNameUrl","getUsersEndpoint","page","pageSize","getNewUserEndpoint","userObject","post","JSON","stringify","getUpdateUserEndpoint","put","getPatchUpdateUserEndpoint","valueOrPatch","opOrUserId","path","from","patchDocument","op","patch","getUserPreferencesEndpoint","currentUserPreferencesUrl","getUpdateUserPreferencesEndpoint","configuration","getUnblockUserEndpoint","unblockUserUrl","getDeleteUserEndpoint","delete","getRoleEndpoint","roleId","rolesUrl","getRoleByRoleNameEndpoint","roleName","roleByRoleNameUrl","getRolesEndpoint","getNewRoleEndpoint","roleObject","getUpdateRoleEndpoint","getDeleteRoleEndpoint","getPermissionsEndpoint","permissionsUrl","HttpClient","ngxOauth2","AuthService","EndpointBase","AccountService","accountEndpoint","_rolesChanged","Subject","getUser","getUserAndRoles","forkJoin","getUsers","getUsersAndRoles","updateUser","user","id","mergeMap","foundUser","newUser","getUserPreferences","updateUserPreferences","deleteUser","userOrUserId","String","tap","onRolesUserCountChanged","roles","unblockUser","userHasPermission","permissionValue","some","refreshLoggedInUser","refreshLogin","getRoles","getRolesAndPermissions","updateRole","role","onRolesChanged","roleModifiedOperation","foundRole","newRole","roleAddedOperation","deleteRole","roleOrRoleId","roleDeletedOperation","getPermissions","operation","getRolesChangedEvent","asObservable","userPermissions","currentUser","NotificationEndpoint","demoNotifications","header","body","isRead","isPinned","getNotificationEndpoint","notificationId","response","notification","find","val","createResponse","of","getNotificationsEndpoint","getUnreadNotificationsEndpoint","unreadNotifications","filter","getNewNotificationsEndpoint","lastNotificationDate","getPinUnpinNotificationEndpoint","getReadUnreadNotificationEndpoint","notificationIds","this_1","notificationIds_1","notificationIds_1_1","getDeleteNotificationEndpoint","status","HttpResponse","NotificationService","notificationEndpoint","_recentNotifications","notifications","getNotification","map","getNotifications","getNotificationsFromResponse","getUnreadNotifications","getNewNotifications","processNewNotificationsFromResponse","getNewNotificationsPeriodically","interval","startWith","flatMap","pinUnpinNotification","notificationOrNotificationId","Number","readUnreadNotification","deleteNotification","recentNotifications","notifications_1","notifications_1_1","sort","a","valueOf","TranslationServiceProvider","AppTranslationService","TranslationServiceAbstractProvider","AppTitleService","titleService","router","sub","events","event","NavigationEnd","_","routerState","root","route","firstChild","subscribe","title","fragment","url","split","toTitleCase","appName","setTitle","platformBrowser","Title","Router","AlertServiceProvider","alertService","AlertService","AlertServiceAbstractProvider","LocalStoreManagerProvider","LocalStoreManager","LocalStoreManagerServiceAbstractProvider","GroupByPipe","transform","field","groupedObj","reduce","prev","cur","keys","key","pure","AutofocusDirective","elementRef","ngOnInit","setTimeout","nativeElement","focus","ɵɵdirectiveInject","ElementRef","selectors","BootstrapDatepickerDirective","el","_isShown","options","ngModelChange","EventEmitter","changedSubscription","fromEvent","$","emit","target","shownSubscription","hiddenSubscription","tryUpdate","initialize","ngOnDestroy","destroy","datepicker","unsubscribe","show","hide","toggle","isShown","clearTimeout","updateTimeout","is","update","setDate","setUTCDate","clearDates","getDate","getUTCDate","inputs","ngModel","outputs","exportAs","BootstrapSelectDirective","oldValues","shown","hidden","checkIsValuesChanged","selected","values","selectpicker","requiredAttribute","refresh","doValidation","newValue","every","v","valid","required","render","BootstrapTabDirective","zone","showBSTab","hideBSTab","tabShownSubscription","runInZone","type","relatedTarget","tabHiddenSubscription","delegate","run","selector","tab","NgZone","BootstrapToggleDirective","checkedSubscription","checked","bootstrapToggle","toggleOn","toggleOff","prop","change","enable","disable","EqualValidator","validateEqual","reverse","validate","c","other","validateReverse","validateNoReverse","errors","setErrors","ɵɵinjectAttribute","features","ɵɵProvidersFeature","provide","NG_VALIDATORS","useExisting","forwardRef","multi","LastElementDirective","lastFunction","isLastElement","lastElement","i0.ɵɵelement","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵclassProp","i0.ɵɵattribute","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵpropertyInterpolate","i0.ɵɵproperty","NotificationsViewerComponent","translationService","accountService","notificationService","columns","rows","dataLoadingConsecutiveFailurs","verticalScrollbar","isViewOnly","cellTemplate","dateTemplate","width","resizeable","canAutoResize","sortable","draggable","contentHeaderTemplate","gT","getTranslation","headerTemplate","statusHeaderTemplate","statusTemplate","contenBodytTemplate","actionsTemplate","initDataLoading","dataLoadingSubscription","processResults","loadingIndicator","dataLoadTask","showMessage","MessageSeverity","warn","logError","showStickyMessage","getPrintedDate","printTimeOnly","printDateOnly","row","showDialog","DialogType","confirm","deleteNotificationHelper","startLoadingMessage","results","stopLoadingMessage","item","getHttpResponseMessages","togglePin","pin","opText","Permission","manageRolesPermission","viewQuery","rf","ctx","SearchBoxComponent","placeholder","searchChange","onValueChange","clear","searchInput","$event","ctx_r2","i0.ɵɵtextInterpolate","ctx_r3","i0.ɵɵattributeInterpolate1","ctx_r4","ctx_r5","userEdit","i0.ɵɵpropertyInterpolate1","ctx_r7","ctx_r8","ctx_r9","email","ctx_r10","isEditMode","ctx_r42","ctx_r39","ctx_r12","ctx_r59","i0.ɵɵattributeInterpolate2","ctx_r60","ctx_r13","ctx_r14","ctx_r15","ctx_r16","ctx_r17","ctx_r18","ctx_r93","userPassword","showErrorAlert","pattern","isChangePassword","isEditingSelf","isNewUser","canAssignRoles","ctx_r0","UserInfoComponent","isSaving","showValidationErrors","uniqueId","allRoles","formResetToggle","isGeneralEditor","loadCurrentUserData","canViewAllRoles","onCurrentUserDataLoadSuccessful","onCurrentUserDataLoadFailed","x","Role","getRoleByName","caption","message","deletePasswordFromUser","edit","save","saveSuccessHelper","saveFailedHelper","testIsRoleUserCountChanged","resetForm","success","changesSavedCallback","changesFailedCallback","editedUser","rolesAdded","indexOf","rolesRemoved","modifiedRoles","cancel","default","resetStickyMessage","changesCancelledCallback","close","changePassword","unlockUser","isLockedOut","replace","form","reset","isEnabled","editUser","setRoles","displayUser","ur","unshift","_b","_c","rolesSelector","viewRolesPermission","assignRolesPermission","row_r16","UsersManagementComponent","rowsCache","indexTemplate","userNameTemplate","rolesTemplate","canManageUsers","loadData","ngAfterViewInit","userEditor","addNewUserToList","editorModal","sourceUser","sourceIndex","moveArrayItem","maxIndex","u","index","splice","canViewRoles","onDataLoadSuccessful","onDataLoadFailed","users","forEach","onSearchChanged","searchArray","fullName","phoneNumber","jobTitle","onEditorModalHidden","editingUserName","deleteUserHelper","manageUsersPermission","i0.ɵɵattributeInterpolate4","UserPreferencesComponent","themeManager","themeSelectorToggle","languageChangedSubscription","languageChanged$","languageSelector","homePageSelector","reloadFromServer","import","info","setAsDefault","setAsDefaultHelper","export","resetDefault","resetDefaultHelper","viewUsersPermission","selectedValues","permission_r14","ɵɵpureFunction2","_c2$3","_r1","submitted","_r2","roleEdit","RoleEditorComponent","isNewRole","allPermissions","getSelectedPermissions","editingRoleName","selectAll","selectNone","toggleGroup","groupName","firstMemberValue","editRole","RolesManagementComponent","roleEditor","addNewRoleToList","editedRole","sourceRole","deleteRoleHelper","value_r17","value_r29","row_r28","isMouseOver","ctx_r11","taskEdit","TodoDemoComponent","localStorage","editing","isDataLoaded","_hideCompletedTasks","_currentUserId","completed","fetch","refreshDataIndexes","nameTemplate","descriptionTemplate","saveToDisk","cb","getFromDisk","important","data_1","data_1_1","$$index","addTask","updateValue","cell","cellValue","deleteHelper","getDataObject","DBKeyTodoDemo","currentUserId","saveSyncedSessionData","StatisticsDemoComponent","chartData","label","chartLabels","chartOptions","responsive","display","fontSize","text","chartColors","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","chartLegend","chartType","timerReference","setInterval","randomize","initialWidth$","window","innerWidth","resizedWidth$","windowWidth$","merge","distinctUntilChanged","windowWidthSub","clearInterval","_chartData","j","Math","floor","random","changeChartType","msg","prompt","configure","wait","chartClicked","console","log","chartHovered","decls","vars","consts","template","SettingsComponent","isProfileActivated","isPreferencesActivated","isUsersActivated","isRolesActivated","profileTab","preferencesTab","usersTab","rolesTab","fragmentSubscription","anchor","showContent","toLowerCase","isFragmentEquals","canViewUsers","fragment1","fragment2","onShowTab","activeTab","hash","pop","navigate","ActivatedRoute","NotFoundComponent","_r8","ctx_r1","userLogin","LoginComponent","UserLogin","isLoading","isModal","getShouldRedirect","redirectLoginUser","loginStatusSubscription","getLoginStatusEvent","isLoggedIn","isSessionExpired","closeModal","modalClosedCallback","login","loginWithPassword","checkNoNetwork","noNetworkMessageCaption","noNetworkMessageDetail","offerAlternateHost","errorMessage","getHttpResponseMessage","mapLoginErrorMessage","getResponseBody","checkIsLocalHost","location","origin","tokenUrl","fallbackBaseUrl","DependencyModule","providers","imports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","BsDropdownModule","TabsModule","PaginationModule","ModalModule","AccordionModule","PopoverModule","TooltipModule","CarouselModule","AlertModule","TranslateModule","NgxDatatableModule","ChartsModule","exports","NgxAppkitStarterAlphaModule","parentModule","Error","forRoot","ngModule","useClass","declarations","duration","state"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport enum Gender {\n    None,\n    Female,\n    Male\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Utilities } from '@polpware/ngx-appkit-contracts-alpha';\n\n\nexport class Notification {\n\n\n    public id: number;\n    public header: string;\n    public body: string;\n    public isRead: boolean;\n    public isPinned: boolean;\n    public date: Date;\n\n    public static Create(data: {}) {\n        const n = new Notification();\n        Object.assign(n, data);\n\n        if (n.date) {\n            n.date = Utilities.parseDate(n.date);\n        }\n\n        return n;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Permission } from '@polpware/ngx-oauth2';\n\n\nexport class Role {\n\n    constructor(name?: string, description?: string, permissions?: Permission[]) {\n\n        this.name = name;\n        this.description = description;\n        this.permissions = permissions;\n    }\n\n    public id: string;\n    public name: string;\n    public description: string;\n    public usersCount: number;\n    public permissions: Permission[];\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { User } from '@polpware/ngx-oauth2';\n\n\nexport class UserEdit extends User {\n    constructor(currentPassword?: string, newPassword?: string, confirmPassword?: string) {\n        super();\n\n        this.currentPassword = currentPassword;\n        this.newPassword = newPassword;\n        this.confirmPassword = confirmPassword;\n    }\n\n    public currentPassword: string;\n    public newPassword: string;\n    public confirmPassword: string;\n\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport class UserLogin {\n    constructor(userName?: string, password?: string, rememberMe?: boolean) {\n        this.userName = userName;\n        this.password = password;\n        this.rememberMe = rememberMe;\n    }\n\n    userName: string;\n    password: string;\n    rememberMe: boolean;\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n\n\nexport const fadeInOut = trigger('fadeInOut', [\n    transition(':enter', [style({ opacity: 0 }), animate('0.4s ease-in', style({ opacity: 1 }))]),\n    transition(':leave', [animate('0.4s 10ms ease-out', style({ opacity: 0 }))])\n]);\n\n\n\nexport function flyInOut(duration: number = 0.2) {\n    return trigger('flyInOut', [\n        state('in', style({ opacity: 1, transform: 'translateX(0)' })),\n        transition('void => *', [style({ opacity: 0, transform: 'translateX(-100%)' }), animate(`${duration}s ease-in`)]),\n        transition('* => void', [animate(`${duration}s 10ms ease-out`, style({ opacity: 0, transform: 'translateX(100%)' }))])\n    ]);\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    ConfigurationServiceAbstractProvider,\n    IConfigurationServiceContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    ConfigurationService\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class ConfigurationServiceProvider extends ConfigurationServiceAbstractProvider {\n\n    constructor(private readonly impl: ConfigurationService) {\n        super();\n    }\n\n    get(): IConfigurationServiceContract {\n        return this.impl;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    ThemeManagerAbstractProvider,\n    IThemeManagerContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    ThemeManager\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class ThemeManagerProvider extends ThemeManagerAbstractProvider {\n\n    constructor(private readonly impl: ThemeManager) {\n        super();\n    }\n\n    get(): IThemeManagerContract {\n        return this.impl;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport {\n    AuthService,\n    EndpointBase\n} from '@polpware/ngx-oauth2';\nimport { ConfigurationService } from '@polpware/ngx-appkit-services-alpha';\n\n\n@Injectable()\nexport class AccountEndpoint extends EndpointBase {\n\n    private readonly _usersUrl: string = '/api/account/users';\n    private readonly _userByUserNameUrl: string = '/api/account/users/username';\n    private readonly _currentUserUrl: string = '/api/account/users/me';\n    private readonly _currentUserPreferencesUrl: string = '/api/account/users/me/preferences';\n    private readonly _unblockUserUrl: string = '/api/account/users/unblock';\n    private readonly _rolesUrl: string = '/api/account/roles';\n    private readonly _roleByRoleNameUrl: string = '/api/account/roles/name';\n    private readonly _permissionsUrl: string = '/api/account/permissions';\n\n    get usersUrl() { return this.configurations.baseUrl + this._usersUrl; }\n    get userByUserNameUrl() { return this.configurations.baseUrl + this._userByUserNameUrl; }\n    get currentUserUrl() { return this.configurations.baseUrl + this._currentUserUrl; }\n    get currentUserPreferencesUrl() { return this.configurations.baseUrl + this._currentUserPreferencesUrl; }\n    get unblockUserUrl() { return this.configurations.baseUrl + this._unblockUserUrl; }\n    get rolesUrl() { return this.configurations.baseUrl + this._rolesUrl; }\n    get roleByRoleNameUrl() { return this.configurations.baseUrl + this._roleByRoleNameUrl; }\n    get permissionsUrl() { return this.configurations.baseUrl + this._permissionsUrl; }\n\n\n    constructor(private configurations: ConfigurationService, http: HttpClient, authService: AuthService) {\n        super(http, authService);\n    }\n\n\n    getUserEndpoint<T>(userId?: string): Observable<T> {\n        const endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUserEndpoint(userId));\n            }));\n    }\n\n\n    getUserByUserNameEndpoint<T>(userName: string): Observable<T> {\n        const endpointUrl = `${this.userByUserNameUrl}/${userName}`;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUserByUserNameEndpoint(userName));\n            }));\n    }\n\n\n    getUsersEndpoint<T>(page?: number, pageSize?: number): Observable<T> {\n        const endpointUrl = page && pageSize ? `${this.usersUrl}/${page}/${pageSize}` : this.usersUrl;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUsersEndpoint(page, pageSize));\n            }));\n    }\n\n\n    getNewUserEndpoint<T>(userObject: any): Observable<T> {\n\n        return this.http.post<T>(this.usersUrl, JSON.stringify(userObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getNewUserEndpoint(userObject));\n            }));\n    }\n\n    getUpdateUserEndpoint<T>(userObject: any, userId?: string): Observable<T> {\n        const endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\n\n        return this.http.put<T>(endpointUrl, JSON.stringify(userObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUpdateUserEndpoint(userObject, userId));\n            }));\n    }\n\n    getPatchUpdateUserEndpoint<T>(patch: {}, userId?: string): Observable<T>;\n    getPatchUpdateUserEndpoint<T>(value: any, op: string, path: string, from?: any, userId?: string): Observable<T>;\n    getPatchUpdateUserEndpoint<T>(valueOrPatch: any, opOrUserId?: string, path?: string, from?: any, userId?: string): Observable<T> {\n        let endpointUrl: string;\n        let patchDocument: {};\n\n        if (path) {\n            endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\n            patchDocument = from ?\n                [{ value: valueOrPatch, path, op: opOrUserId, from }] :\n                [{ value: valueOrPatch, path, op: opOrUserId }];\n        } else {\n            endpointUrl = opOrUserId ? `${this.usersUrl}/${opOrUserId}` : this.currentUserUrl;\n            patchDocument = valueOrPatch;\n        }\n\n        return this.http.patch<T>(endpointUrl, JSON.stringify(patchDocument), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getPatchUpdateUserEndpoint(valueOrPatch, opOrUserId, path, from, userId));\n            }));\n    }\n\n\n    getUserPreferencesEndpoint<T>(): Observable<T> {\n\n        return this.http.get<T>(this.currentUserPreferencesUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUserPreferencesEndpoint());\n            }));\n    }\n\n    getUpdateUserPreferencesEndpoint<T>(configuration: string): Observable<T> {\n        return this.http.put<T>(this.currentUserPreferencesUrl, JSON.stringify(configuration), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUpdateUserPreferencesEndpoint(configuration));\n            }));\n    }\n\n    getUnblockUserEndpoint<T>(userId: string): Observable<T> {\n        const endpointUrl = `${this.unblockUserUrl}/${userId}`;\n\n        return this.http.put<T>(endpointUrl, null, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUnblockUserEndpoint(userId));\n            }));\n    }\n\n    getDeleteUserEndpoint<T>(userId: string): Observable<T> {\n        const endpointUrl = `${this.usersUrl}/${userId}`;\n\n        return this.http.delete<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getDeleteUserEndpoint(userId));\n            }));\n    }\n\n\n\n\n\n    getRoleEndpoint<T>(roleId: string): Observable<T> {\n        const endpointUrl = `${this.rolesUrl}/${roleId}`;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getRoleEndpoint(roleId));\n            }));\n    }\n\n\n    getRoleByRoleNameEndpoint<T>(roleName: string): Observable<T> {\n        const endpointUrl = `${this.roleByRoleNameUrl}/${roleName}`;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getRoleByRoleNameEndpoint(roleName));\n            }));\n    }\n\n\n\n    getRolesEndpoint<T>(page?: number, pageSize?: number): Observable<T> {\n        const endpointUrl = page && pageSize ? `${this.rolesUrl}/${page}/${pageSize}` : this.rolesUrl;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getRolesEndpoint(page, pageSize));\n            }));\n    }\n\n    getNewRoleEndpoint<T>(roleObject: any): Observable<T> {\n\n        return this.http.post<T>(this.rolesUrl, JSON.stringify(roleObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getNewRoleEndpoint(roleObject));\n            }));\n    }\n\n    getUpdateRoleEndpoint<T>(roleObject: any, roleId: string): Observable<T> {\n        const endpointUrl = `${this.rolesUrl}/${roleId}`;\n\n        return this.http.put<T>(endpointUrl, JSON.stringify(roleObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUpdateRoleEndpoint(roleObject, roleId));\n            }));\n    }\n\n    getDeleteRoleEndpoint<T>(roleId: string): Observable<T> {\n        const endpointUrl = `${this.rolesUrl}/${roleId}`;\n\n        return this.http.delete<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getDeleteRoleEndpoint(roleId));\n            }));\n    }\n\n\n    getPermissionsEndpoint<T>(): Observable<T> {\n\n        return this.http.get<T>(this.permissionsUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getPermissionsEndpoint());\n            }));\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, forkJoin } from 'rxjs';\nimport { mergeMap, tap } from 'rxjs/operators';\n\nimport {\n    AuthService, User,\n    Permission,\n    PermissionValues\n} from '@polpware/ngx-oauth2';\n\nimport { AccountEndpoint } from './account-endpoint.service';\n\nimport { Role } from '../models/role.model';\nimport { UserEdit } from '../models/user-edit.model';\n\nexport type RolesChangedOperation = 'add' | 'delete' | 'modify';\nexport interface RolesChangedEventArg { roles: Role[] | string[]; operation: RolesChangedOperation; }\n\n@Injectable()\nexport class AccountService {\n    public static readonly roleAddedOperation: RolesChangedOperation = 'add';\n    public static readonly roleDeletedOperation: RolesChangedOperation = 'delete';\n    public static readonly roleModifiedOperation: RolesChangedOperation = 'modify';\n\n    private _rolesChanged = new Subject<RolesChangedEventArg>();\n\n    constructor(\n        private authService: AuthService,\n        private accountEndpoint: AccountEndpoint) {\n\n    }\n\n    getUser(userId?: string) {\n        return this.accountEndpoint.getUserEndpoint<User>(userId);\n    }\n\n    getUserAndRoles(userId?: string) {\n\n        return forkJoin(\n            this.accountEndpoint.getUserEndpoint<User>(userId),\n            this.accountEndpoint.getRolesEndpoint<Role[]>());\n    }\n\n    getUsers(page?: number, pageSize?: number) {\n\n        return this.accountEndpoint.getUsersEndpoint<User[]>(page, pageSize);\n    }\n\n    getUsersAndRoles(page?: number, pageSize?: number) {\n\n        return forkJoin(\n            this.accountEndpoint.getUsersEndpoint<User[]>(page, pageSize),\n            this.accountEndpoint.getRolesEndpoint<Role[]>());\n    }\n\n\n    updateUser(user: UserEdit) {\n        if (user.id) {\n            return this.accountEndpoint.getUpdateUserEndpoint(user, user.id);\n        } else {\n            return this.accountEndpoint.getUserByUserNameEndpoint<User>(user.userName).pipe(\n                mergeMap(foundUser => {\n                    user.id = foundUser.id;\n                    return this.accountEndpoint.getUpdateUserEndpoint(user, user.id);\n                }));\n        }\n    }\n\n    newUser(user: UserEdit) {\n        return this.accountEndpoint.getNewUserEndpoint<User>(user);\n    }\n\n\n    getUserPreferences() {\n        return this.accountEndpoint.getUserPreferencesEndpoint<string>();\n    }\n\n    updateUserPreferences(configuration: string) {\n        return this.accountEndpoint.getUpdateUserPreferencesEndpoint(configuration);\n    }\n\n\n    deleteUser(userOrUserId: string | User): Observable<User> {\n\n        if (typeof userOrUserId === 'string' || userOrUserId instanceof String) {\n            return this.accountEndpoint.getDeleteUserEndpoint<User>(userOrUserId as string).pipe<User>(\n                tap(data => this.onRolesUserCountChanged(data.roles)));\n        } else {\n\n            if (userOrUserId.id) {\n                return this.deleteUser(userOrUserId.id);\n            } else {\n                return this.accountEndpoint.getUserByUserNameEndpoint<User>(userOrUserId.userName).pipe<User>(\n                    mergeMap(user => this.deleteUser(user.id)));\n            }\n        }\n    }\n\n\n    unblockUser(userId: string) {\n        return this.accountEndpoint.getUnblockUserEndpoint(userId);\n    }\n\n\n    userHasPermission(permissionValue: PermissionValues): boolean {\n        return this.permissions.some(p => p == permissionValue);\n    }\n\n\n    refreshLoggedInUser() {\n        return this.accountEndpoint.refreshLogin();\n    }\n\n    getRoles(page?: number, pageSize?: number) {\n\n        return this.accountEndpoint.getRolesEndpoint<Role[]>(page, pageSize);\n    }\n\n\n    getRolesAndPermissions(page?: number, pageSize?: number) {\n\n        return forkJoin(\n            this.accountEndpoint.getRolesEndpoint<Role[]>(page, pageSize),\n            this.accountEndpoint.getPermissionsEndpoint<Permission[]>());\n    }\n\n\n    updateRole(role: Role) {\n        if (role.id) {\n            return this.accountEndpoint.getUpdateRoleEndpoint(role, role.id).pipe(\n                tap(data => this.onRolesChanged([role], AccountService.roleModifiedOperation)));\n        } else {\n            return this.accountEndpoint.getRoleByRoleNameEndpoint<Role>(role.name).pipe(\n                mergeMap(foundRole => {\n                    role.id = foundRole.id;\n                    return this.accountEndpoint.getUpdateRoleEndpoint(role, role.id);\n                }),\n                tap(data => this.onRolesChanged([role], AccountService.roleModifiedOperation)));\n        }\n    }\n\n\n    newRole(role: Role) {\n        return this.accountEndpoint.getNewRoleEndpoint<Role>(role).pipe<Role>(\n            tap(data => this.onRolesChanged([role], AccountService.roleAddedOperation)));\n    }\n\n\n    deleteRole(roleOrRoleId: string | Role): Observable<Role> {\n\n        if (typeof roleOrRoleId === 'string' || roleOrRoleId instanceof String) {\n            return this.accountEndpoint.getDeleteRoleEndpoint<Role>(roleOrRoleId as string).pipe<Role>(\n                tap(data => this.onRolesChanged([data], AccountService.roleDeletedOperation)));\n        } else {\n\n            if (roleOrRoleId.id) {\n                return this.deleteRole(roleOrRoleId.id);\n            } else {\n                return this.accountEndpoint.getRoleByRoleNameEndpoint<Role>(roleOrRoleId.name).pipe<Role>(\n                    mergeMap(role => this.deleteRole(role.id)));\n            }\n        }\n    }\n\n    getPermissions() {\n\n        return this.accountEndpoint.getPermissionsEndpoint<Permission[]>();\n    }\n\n\n    private onRolesChanged(roles: Role[] | string[], op: RolesChangedOperation) {\n        this._rolesChanged.next({ roles, operation: op });\n    }\n\n\n    onRolesUserCountChanged(roles: Role[] | string[]) {\n        return this.onRolesChanged(roles, AccountService.roleModifiedOperation);\n    }\n\n\n    getRolesChangedEvent(): Observable<RolesChangedEventArg> {\n        return this._rolesChanged.asObservable();\n    }\n\n\n\n    get permissions(): PermissionValues[] {\n        return this.authService.userPermissions;\n    }\n\n    get currentUser() {\n        return this.authService.currentUser;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n\n\n\n@Injectable()\nexport class NotificationEndpoint {\n\n    private demoNotifications = [\n        {\n            id: 1,\n            header: 'Welcome',\n            body: 'You are ...',\n            isRead: true,\n            isPinned: true,\n            date: '2019-05-28T16:29:13.5877958'\n        }\n    ];\n\n\n\n    getNotificationEndpoint<T>(notificationId: number): Observable<T> {\n\n        const notification = this.demoNotifications.find(val => val.id == notificationId);\n        let response: HttpResponse<T>;\n\n        if (notification) {\n            response = this.createResponse<T>(notification, 200);\n        } else {\n            response = this.createResponse<T>(null, 404);\n        }\n\n        return of(response.body);\n    }\n\n\n\n    getNotificationsEndpoint<T>(page: number, pageSize: number): Observable<T> {\n\n        const notifications = this.demoNotifications;\n        const response = this.createResponse<T>(this.demoNotifications, 200);\n\n        return of(response.body);\n    }\n\n\n\n    getUnreadNotificationsEndpoint<T>(userId?: string): Observable<T> {\n\n        const unreadNotifications = this.demoNotifications.filter(val => !val.isRead);\n        const response = this.createResponse<T>(unreadNotifications, 200);\n\n        return of(response.body);\n    }\n\n\n\n    getNewNotificationsEndpoint<T>(lastNotificationDate?: Date): Observable<T> {\n\n        const unreadNotifications = this.demoNotifications;\n        const response = this.createResponse<T>(unreadNotifications, 200);\n\n        return of(response.body);\n    }\n\n\n\n    getPinUnpinNotificationEndpoint<T>(notificationId: number, isPinned?: boolean, ): Observable<T> {\n\n        const notification = this.demoNotifications.find(val => val.id == notificationId);\n        let response: HttpResponse<T>;\n\n        if (notification) {\n            response = this.createResponse<T>(null, 204);\n\n            if (isPinned == null) {\n                isPinned = !notification.isPinned;\n            }\n\n            notification.isPinned = isPinned;\n            notification.isRead = true;\n        } else {\n            response = this.createResponse<T>(null, 404);\n        }\n\n\n        return of(response.body);\n    }\n\n\n\n    getReadUnreadNotificationEndpoint<T>(notificationIds: number[], isRead: boolean, ): Observable<T> {\n\n        for (const notificationId of notificationIds) {\n\n            const notification = this.demoNotifications.find(val => val.id == notificationId);\n\n            if (notification) {\n                notification.isRead = isRead;\n            }\n        }\n\n        const response = this.createResponse<T>(null, 204);\n        return of(response.body);\n    }\n\n\n\n    getDeleteNotificationEndpoint<T>(notificationId: number): Observable<T> {\n\n        const notification = this.demoNotifications.find(val => val.id == notificationId);\n        let response: HttpResponse<T>;\n\n        if (notification) {\n            this.demoNotifications = this.demoNotifications.filter(val => val.id != notificationId);\n            response = this.createResponse<T>(notification, 200);\n        } else {\n            response = this.createResponse<T>(null, 404);\n        }\n\n        return of(response.body);\n    }\n\n\n\n    private createResponse<T>(body, status: number) {\n        return new HttpResponse<T>({ body, status });\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Observable, interval } from 'rxjs';\nimport { map, flatMap, startWith } from 'rxjs/operators';\n\nimport { AuthService, User } from '@polpware/ngx-oauth2';\nimport { NotificationEndpoint } from './notification-endpoint.service';\nimport { Notification } from '../models/notification.model';\n\n@Injectable()\nexport class NotificationService {\n\n    private lastNotificationDate: Date;\n    private _recentNotifications: Notification[];\n\n    get currentUser(): User {\n        return this.authService.currentUser;\n    }\n\n    get recentNotifications() {\n        return this._recentNotifications;\n    }\n\n    set recentNotifications(notifications: Notification[]) {\n        this._recentNotifications = notifications;\n    }\n\n\n\n    constructor(private notificationEndpoint: NotificationEndpoint, private authService: AuthService) {\n\n    }\n\n\n    getNotification(notificationId?: number) {\n\n        return this.notificationEndpoint.getNotificationEndpoint(notificationId).pipe(\n            map(response => Notification.Create(response)));\n    }\n\n\n    getNotifications(page: number, pageSize: number) {\n\n        return this.notificationEndpoint.getNotificationsEndpoint(page, pageSize).pipe(\n            map(response => {\n                return this.getNotificationsFromResponse(response);\n            }));\n    }\n\n\n    getUnreadNotifications(userId?: string) {\n\n        return this.notificationEndpoint.getUnreadNotificationsEndpoint(userId).pipe(\n            map(response => this.getNotificationsFromResponse(response)));\n    }\n\n\n    getNewNotifications() {\n        return this.notificationEndpoint.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(\n            map(response => this.processNewNotificationsFromResponse(response)));\n    }\n\n\n    getNewNotificationsPeriodically() {\n        return interval(10000).pipe(\n            startWith(0),\n            flatMap(() => {\n                return this.notificationEndpoint.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(\n                    map(response => this.processNewNotificationsFromResponse(response)));\n            }));\n    }\n\n\n\n\n    pinUnpinNotification(notificationOrNotificationId: number | Notification, isPinned?: boolean): Observable<any> {\n\n        if (typeof notificationOrNotificationId === 'number' || notificationOrNotificationId instanceof Number) {\n            return this.notificationEndpoint.getPinUnpinNotificationEndpoint(notificationOrNotificationId as number, isPinned);\n        } else {\n            return this.pinUnpinNotification(notificationOrNotificationId.id);\n        }\n    }\n\n\n    readUnreadNotification(notificationIds: number[], isRead: boolean): Observable<any> {\n\n        return this.notificationEndpoint.getReadUnreadNotificationEndpoint(notificationIds, isRead);\n    }\n\n\n\n\n    deleteNotification(notificationOrNotificationId: number | Notification): Observable<Notification> {\n\n        if (typeof notificationOrNotificationId === 'number' || notificationOrNotificationId instanceof Number) { // Todo: Test me if its check is valid\n            return this.notificationEndpoint.getDeleteNotificationEndpoint(notificationOrNotificationId as number).pipe(\n                map(response => {\n                    this.recentNotifications = this.recentNotifications.filter(n => n.id != notificationOrNotificationId);\n                    return Notification.Create(response);\n                }));\n        } else {\n            return this.deleteNotification(notificationOrNotificationId.id);\n        }\n    }\n\n\n\n\n    private processNewNotificationsFromResponse(response) {\n        const notifications = this.getNotificationsFromResponse(response);\n\n        for (const n of notifications) {\n            if (n.date > this.lastNotificationDate) {\n                this.lastNotificationDate = n.date;\n            }\n        }\n\n        return notifications;\n    }\n\n\n    private getNotificationsFromResponse(response) {\n        const notifications: Notification[] = [];\n\n        for (const i in response) {\n            notifications[i] = Notification.Create(response[i]);\n        }\n\n        notifications.sort((a, b) => b.date.valueOf() - a.date.valueOf());\n        notifications.sort((a, b) => (a.isPinned === b.isPinned) ? 0 : a.isPinned ? -1 : 1);\n\n        this.recentNotifications = notifications;\n\n        return notifications;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    TranslationServiceAbstractProvider,\n    ITranslationServiceContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AppTranslationService\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class TranslationServiceProvider extends TranslationServiceAbstractProvider {\n\n    constructor(private readonly impl: AppTranslationService) {\n        super();\n    }\n\n    get(): ITranslationServiceContract {\n        return this.impl;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationEnd, PRIMARY_OUTLET } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter, map, flatMap } from 'rxjs/operators';\nimport { Title } from '@angular/platform-browser';\n\nimport { Utilities } from '@polpware/ngx-appkit-contracts-alpha';\n\n\n@Injectable()\nexport class AppTitleService {\n\n    sub: Subscription;\n    appName: string;\n\n    constructor(private titleService: Title, private router: Router) {\n        this.sub = this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd),\n            map(_ => this.router.routerState.root),\n            map(route => {\n                while (route.firstChild) {\n                    route = route.firstChild;\n                }\n\n                return route;\n            }),\n            flatMap(route => route.data))\n            .subscribe(data => {\n                let title = data.title;\n\n                if (title) {\n                    const fragment = this.router.url.split('#')[1];\n\n                    if (fragment) {\n                        title += ' | ' + Utilities.toTitleCase(fragment);\n                    }\n                }\n\n                if (title && this.appName) {\n                    title += ' - ' + this.appName;\n                } else if (this.appName) {\n                    title = this.appName;\n                }\n\n                if (title) {\n                    this.titleService.setTitle(title);\n                }\n            });\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    AlertServiceAbstractProvider,\n    IAlertServiceContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class AlertServiceProvider extends AlertServiceAbstractProvider {\n\n    constructor(private readonly alertService: AlertService) {\n        super();\n    }\n\n    get(): IAlertServiceContract {\n        return this.alertService;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    LocalStoreManagerServiceAbstractProvider,\n    ILocalStoreManagerContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    LocalStoreManager\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class LocalStoreManagerProvider extends LocalStoreManagerServiceAbstractProvider {\n\n    constructor(private readonly impl: LocalStoreManager) {\n        super();\n    }\n\n    get(): ILocalStoreManagerContract {\n        return this.impl;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n\n\n@Pipe({ name: 'groupBy' })\nexport class GroupByPipe implements PipeTransform {\n\n    transform(value: Array<any>, field: string): Array<any> {\n\n        if (!value) {\n            return value;\n        }\n\n        const groupedObj = value.reduce((prev, cur) => {\n            if (!prev[cur[field]]) {\n                prev[cur[field]] = [cur];\n            } else {\n                prev[cur[field]].push(cur);\n            }\n\n            return prev;\n        }, {});\n\n        return Object.keys(groupedObj).map(key => ({ key, value: groupedObj[key] }));\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, OnInit } from '@angular/core';\n\n\n@Directive({\n    selector: '[autofocus]'\n})\nexport class AutofocusDirective implements OnInit {\n    constructor(public elementRef: ElementRef) { }\n\n    ngOnInit() {\n        setTimeout(() => this.elementRef.nativeElement.focus(), 500);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\n@Directive({\n    selector: '[bootstrapDatepicker]',\n    exportAs: 'bootstrap-datepicker'\n})\nexport class BootstrapDatepickerDirective implements OnInit, OnDestroy {\n\n    private _isShown = false;\n    private updateTimeout;\n    private changedSubscription: Subscription;\n    private shownSubscription: Subscription;\n    private hiddenSubscription: Subscription;\n\n    get isShown() {\n        return this._isShown;\n    }\n\n    @Input()\n    options = {};\n\n    @Input()\n    set ngModel(value) {\n        this.tryUpdate(value);\n    }\n\n\n    @Output()\n    ngModelChange = new EventEmitter();\n\n\n    constructor(private el: ElementRef) {\n        this.changedSubscription = fromEvent($(this.el.nativeElement), 'change').subscribe((e: any) => setTimeout(() => this.ngModelChange.emit(e.target.value)));\n        this.shownSubscription = fromEvent($(this.el.nativeElement), 'show').subscribe((e: any) => this._isShown = true);\n        this.hiddenSubscription = fromEvent($(this.el.nativeElement), 'hide').subscribe((e: any) => this._isShown = false);\n    }\n\n\n\n    ngOnInit() {\n        this.initialize(this.options);\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n\n\n\n    initialize(options?: any) {\n        $(this.el.nativeElement).datepicker(options);\n    }\n\n    destroy() {\n        if (this.changedSubscription) {\n            this.changedSubscription.unsubscribe();\n            this.shownSubscription.unsubscribe();\n            this.hiddenSubscription.unsubscribe();\n        }\n\n        $(this.el.nativeElement).datepicker('destroy');\n    }\n\n\n\n    show() {\n        $(this.el.nativeElement).datepicker('show');\n    }\n\n\n    hide() {\n        $(this.el.nativeElement).datepicker('hide');\n    }\n\n\n    toggle() {\n        this.isShown ? this.hide() : this.show();\n    }\n\n\n    private tryUpdate(value) {\n\n        clearTimeout(this.updateTimeout);\n\n        if (!$(this.el.nativeElement).is(':focus')) {\n            this.update(value);\n        } else {\n            this.updateTimeout = setTimeout(() => {\n                this.updateTimeout = null;\n                this.tryUpdate(value);\n            }, 100);\n        }\n    }\n\n    update(value) {\n        setTimeout(() => $(this.el.nativeElement).datepicker('update', value));\n    }\n\n\n    setDate(value) {\n        setTimeout(() => $(this.el.nativeElement).datepicker('setDate', value));\n    }\n\n\n    setUTCDate(value) {\n        setTimeout(() => $(this.el.nativeElement).datepicker('setUTCDate', value));\n    }\n\n\n    clearDates() {\n        setTimeout(() => $(this.el.nativeElement).datepicker('clearDates'));\n    }\n\n\n    getDate() {\n        $(this.el.nativeElement).datepicker('getDate');\n    }\n\n\n    getUTCDate() {\n        $(this.el.nativeElement).datepicker('getUTCDate');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, Attribute, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\n@Directive({\n    selector: '[bootstrapSelect]',\n    exportAs: 'bootstrap-select'\n})\nexport class BootstrapSelectDirective implements OnInit, OnDestroy {\n\n    private oldValues: string | string[] = '';\n\n    private changedSubscription: Subscription;\n    private shownSubscription: Subscription;\n    private hiddenSubscription: Subscription;\n\n    @Input()\n    required: string;\n\n    @Input()\n    set ngModel(values: string | string[]) {\n        setTimeout(() => this.selected = values);\n    }\n\n\n    @Output()\n    ngModelChange = new EventEmitter();\n\n    @Output()\n    shown = new EventEmitter();\n\n    @Output()\n    hidden = new EventEmitter();\n\n\n    constructor(private el: ElementRef) {\n        this.changedSubscription = fromEvent($(this.el.nativeElement), 'changed.bs.select').subscribe((e: any) => setTimeout(() => {\n            if (this.checkIsValuesChanged(this.selected)) {\n                this.ngModelChange.emit(this.selected);\n            }\n        }));\n        this.shownSubscription = fromEvent($(this.el.nativeElement), 'shown.bs.select').subscribe((e: any) => setTimeout(() => this.shown.emit()));\n        this.hiddenSubscription = fromEvent($(this.el.nativeElement), 'hidden.bs.select').subscribe((e: any) => setTimeout(() => this.hidden.emit()));\n    }\n\n\n    ngOnInit() {\n        $(this.el.nativeElement).selectpicker();\n\n        if (this.requiredAttribute) {\n            $(this.el.nativeElement).selectpicker('setStyle', 'required', 'add');\n        }\n\n        setTimeout(() => {\n            this.refresh();\n            this.doValidation();\n        });\n\n    }\n\n    ngOnDestroy() {\n        if (this.changedSubscription) {\n            this.changedSubscription.unsubscribe();\n        }\n\n        if (this.shownSubscription) {\n            this.shownSubscription.unsubscribe();\n        }\n\n        if (this.hiddenSubscription) {\n            this.hiddenSubscription.unsubscribe();\n        }\n\n        $(this.el.nativeElement).selectpicker('destroy');\n    }\n\n    private checkIsValuesChanged(newValue: string | string[]) {\n        return !(newValue == this.oldValues ||\n            (newValue instanceof Array && newValue.length === this.oldValues.length && newValue.every((v, i) => v === this.oldValues[i])));\n    }\n\n    private doValidation() {\n        if (this.requiredAttribute) {\n            $(this.el.nativeElement).selectpicker('setStyle', !this.valid ? 'ng-valid' : 'ng-invalid', 'remove');\n            $(this.el.nativeElement).selectpicker('setStyle', this.valid ? 'ng-valid' : 'ng-invalid', 'add');\n        }\n    }\n\n    private get requiredAttribute() {\n        return this.required === '' || this.required == 'true';\n    }\n\n\n    refresh() {\n        setTimeout(() => {\n            $(this.el.nativeElement).selectpicker('refresh');\n        });\n    }\n\n    render() {\n        setTimeout(() => {\n            $(this.el.nativeElement).selectpicker('render');\n        });\n    }\n\n\n    get valid(): boolean {\n        return this.requiredAttribute ? this.selected && this.selected.length > 0 : true;\n    }\n\n\n    set selected(values: string | string[]) {\n\n        if (!this.checkIsValuesChanged(values)) {\n            return;\n        }\n\n        this.oldValues = this.selected;\n        $(this.el.nativeElement).selectpicker('val', values);\n        this.doValidation();\n    }\n\n\n    get selected(): string | string[] {\n        return $(this.el.nativeElement).selectpicker('val');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, Output, EventEmitter, OnDestroy, NgZone } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\ninterface eventArg { type: string; target: Element; relatedTarget: Element; }\n\n@Directive({\n    selector: '[bootstrapTab]',\n    exportAs: 'bootstrap-tab'\n})\nexport class BootstrapTabDirective implements OnDestroy {\n\n\n    @Output()\n    showBSTab = new EventEmitter<eventArg>();\n\n    @Output()\n    hideBSTab = new EventEmitter<eventArg>();\n\n    private tabShownSubscription: Subscription;\n    private tabHiddenSubscription: Subscription;\n\n\n    constructor(private el: ElementRef, private zone: NgZone) {\n\n        this.tabShownSubscription = fromEvent($(this.el.nativeElement), 'show.bs.tab')\n            .subscribe((e: any) => {\n                this.runInZone(() => this.showBSTab.emit({ type: e.type, target: e.target, relatedTarget: e.relatedTarget }));\n            });\n\n        this.tabHiddenSubscription = fromEvent($(this.el.nativeElement), 'hidden.bs.tab')\n            .subscribe((e: any) => {\n                this.runInZone(() => this.hideBSTab.emit({ type: e.type, target: e.target, relatedTarget: e.relatedTarget }));\n            });\n    }\n\n\n    ngOnDestroy() {\n        this.tabShownSubscription.unsubscribe();\n        this.tabHiddenSubscription.unsubscribe();\n    }\n\n\n    private runInZone(delegate: () => any) {\n        this.zone.run(() => {\n            delegate();\n        });\n    }\n\n\n    show(selector: string) {\n        $(selector).tab('show');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\n@Directive({\n    selector: '[bootstrapToggle]',\n    exportAs: 'bootstrap-toggle'\n})\nexport class BootstrapToggleDirective implements OnInit, OnDestroy {\n\n    private checkedSubscription: Subscription;\n\n    @Input()\n    set ngModel(value) {\n        this.toggle(value);\n    }\n\n    @Output()\n    ngModelChange = new EventEmitter();\n\n\n    constructor(private el: ElementRef) {\n        this.checkedSubscription = fromEvent($(this.el.nativeElement), 'change')\n            .subscribe((e: any) => this.ngModelChange.emit(e.target.checked));\n    }\n\n\n    ngOnInit() {\n        this.initialize();\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n\n    initialize(options?: any) {\n        $(this.el.nativeElement).bootstrapToggle(options);\n    }\n\n    destroy() {\n        if (this.checkedSubscription) {\n            this.checkedSubscription.unsubscribe();\n        }\n\n        $(this.el.nativeElement).bootstrapToggle('destroy');\n    }\n\n    toggleOn() {\n        $(this.el.nativeElement).bootstrapToggle('on');\n    }\n\n    toggleOff() {\n        $(this.el.nativeElement).bootstrapToggle('off');\n    }\n\n    toggle(value?: boolean) {\n        if (value == null) {\n            $(this.el.nativeElement).bootstrapToggle('toggle');\n        } else {\n            $(this.el.nativeElement).prop('checked', value).change();\n        }\n    }\n\n    enable() {\n        $(this.el.nativeElement).bootstrapToggle('enable');\n    }\n\n    disable() {\n        $(this.el.nativeElement).bootstrapToggle('disable');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, forwardRef, Attribute } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n\n\n@Directive({\n    selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\n    providers: [\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidator), multi: true }\n    ]\n})\nexport class EqualValidator implements Validator {\n    constructor( @Attribute('validateEqual') public validateEqual: string,\n                 @Attribute('reverse') public reverse: string) {\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        const other = c.root.get(this.validateEqual);\n\n        if (!other) {\n            return null;\n        }\n\n        return this.reverse === 'true' ? this.validateReverse(c, other) : this.validateNoReverse(c, other);\n    }\n\n    private validateNoReverse(c: AbstractControl, other: AbstractControl): { [key: string]: any } {\n        return other.value === c.value ? null : { validateEqual: true };\n    }\n\n    private validateReverse(c: AbstractControl, other: AbstractControl): { [key: string]: any } {\n        if (c.value === other.value) {\n            if (other.errors) {\n                delete other.errors.validateEqual;\n\n                if (Object.keys(other.errors).length == 0) {\n                    other.setErrors(null);\n                }\n            }\n        } else {\n            other.setErrors({ validateEqual: true });\n        }\n\n        return null;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Directive({\n    selector: '[lastElement]'\n})\nexport class LastElementDirective {\n    @Input()\n    set lastElement(isLastElement: boolean) {\n\n        if (isLastElement) {\n            setTimeout(() => {\n                this.lastFunction.emit();\n            });\n        }\n    }\n\n    @Output()\n    lastFunction = new EventEmitter();\n}\n","<div>\n    <ngx-datatable class=\"material colored-header sm table-hover\"\n                   [loadingIndicator]=\"loadingIndicator\"\n                   [rows]=\"rows\"\n                   [rowHeight]=\"35\"\n                   [headerHeight]=\"isViewOnly ? 0 : 35\"\n                   [footerHeight]=\"35\"\n                   [limit]=\"10\"\n                   [columns]=\"columns\"\n                   [scrollbarV]=\"verticalScrollbar\"\n                   [columnMode]=\"'force'\">\n    </ngx-datatable>\n\n    <ng-template #statusHeaderTemplate>\n        <i class=\"fa fa-bullhorn\"></i>\n    </ng-template>\n\n    <ng-template #statusTemplate>\n        <span></span>\n    </ng-template>\n\n    <ng-template #dateTemplate let-row=\"row\" let-value=\"value\">\n        <span [class.unread]=\"!row.isRead\" attr.title=\"{{getPrintedDate(value)}}\">\n            {{getPrintedDate(value)}}\n        </span>\n    </ng-template>\n\n    <ng-template #contentHeaderTemplate let-row=\"row\" let-value=\"value\">\n        <span [class.unread]=\"!row.isRead\" attr.title=\"{{row.body}}\">\n            {{value}}\n        </span>\n    </ng-template>\n\n    <ng-template #contenBodytTemplate let-row=\"row\" let-value=\"value\">\n        <span [class.unread]=\"!row.isRead\" attr.title=\"{{row.header}}\">\n            {{value}}\n        </span>\n    </ng-template>\n\n\n    <ng-template #actionsTemplate let-row=\"row\">\n        <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" tooltip=\"{{'notifications.Delete' | translate}}\" container=\"body\" (click)=\"deleteNotification(row)\"><i class=\"fa fa-times\"></i></a>\n        <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" tooltip=\"{{'notifications.Pin' | translate}}\" co container=\"body\" (click)=\"togglePin(row)\">\n            <i *ngIf=\"row.isPinned\" class=\"fa fa-thumb-tack\"></i>\n            <i *ngIf=\"!row.isPinned\" class=\"fa fa-thumb-tack fa-rotate-90\"></i>\n        </a>\n    </ng-template>\n</div>","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, TemplateRef, ViewChild, Input } from '@angular/core';\n\nimport {\n    DialogType, AlertCommand, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission\n} from '@polpware/ngx-oauth2';\n\n\nimport { NotificationService } from '../../services/notification.service';\nimport { AccountService } from '../../services/account.service';\nimport { Notification } from '../../models/notification.model';\n\n\n@Component({\n    selector: 'notifications-viewer',\n    templateUrl: './notifications-viewer.component.html',\n    styleUrls: ['./notifications-viewer.component.scss']\n})\nexport class NotificationsViewerComponent implements OnInit, OnDestroy {\n    columns: any[] = [];\n    rows: Notification[] = [];\n    loadingIndicator: boolean;\n\n    dataLoadingConsecutiveFailurs = 0;\n    dataLoadingSubscription: any;\n\n\n    @Input()\n    isViewOnly: boolean;\n\n    @Input()\n    verticalScrollbar = false;\n\n\n    @ViewChild('statusHeaderTemplate', { static: true })\n    statusHeaderTemplate: TemplateRef<any>;\n\n    @ViewChild('statusTemplate', { static: true })\n    statusTemplate: TemplateRef<any>;\n\n    @ViewChild('dateTemplate', { static: true })\n    dateTemplate: TemplateRef<any>;\n\n    @ViewChild('contentHeaderTemplate', { static: true })\n    contentHeaderTemplate: TemplateRef<any>;\n\n    @ViewChild('contenBodytTemplate', { static: true })\n    contenBodytTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService, private notificationService: NotificationService) {\n    }\n\n\n    ngOnInit() {\n\n        if (this.isViewOnly) {\n            this.columns = [\n                { prop: 'date', cellTemplate: this.dateTemplate, width: 100, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\n                { prop: 'header', cellTemplate: this.contentHeaderTemplate, width: 200, resizeable: false, sortable: false, draggable: false },\n            ];\n        } else {\n            const gT = (key: string) => this.translationService.getTranslation(key);\n\n            this.columns = [\n                { prop: '', name: '', width: 10, headerTemplate: this.statusHeaderTemplate, cellTemplate: this.statusTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\n                { prop: 'date', name: gT('notifications.Date'), cellTemplate: this.dateTemplate, width: 30 },\n                { prop: 'body', name: gT('notifications.Notification'), cellTemplate: this.contenBodytTemplate, width: 500 },\n                { name: '', width: 80, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\n            ];\n        }\n\n\n        this.initDataLoading();\n    }\n\n\n    ngOnDestroy() {\n        if (this.dataLoadingSubscription) {\n            this.dataLoadingSubscription.unsubscribe();\n        }\n    }\n\n\n\n    initDataLoading() {\n\n        if (this.isViewOnly && this.notificationService.recentNotifications) {\n            this.rows = this.processResults(this.notificationService.recentNotifications);\n            return;\n        }\n\n        this.loadingIndicator = true;\n\n        const dataLoadTask = this.isViewOnly ? this.notificationService.getNewNotifications() : this.notificationService.getNewNotificationsPeriodically();\n\n        this.dataLoadingSubscription = dataLoadTask\n            .subscribe(notifications => {\n                this.loadingIndicator = false;\n                this.dataLoadingConsecutiveFailurs = 0;\n\n                this.rows = this.processResults(notifications);\n            },\n                error => {\n                    this.loadingIndicator = false;\n\n                    this.alertService.showMessage('Load Error', 'Loading new notifications from the server failed!', MessageSeverity.warn);\n                    this.alertService.logError(error);\n\n                    if (this.dataLoadingConsecutiveFailurs++ < 5) {\n                        setTimeout(() => this.initDataLoading(), 5000);\n                    } else {\n                        this.alertService.showStickyMessage('Load Error', 'Loading new notifications from the server failed!', MessageSeverity.error);\n                    }\n\n                });\n\n\n        if (this.isViewOnly) {\n            this.dataLoadingSubscription = null;\n        }\n    }\n\n\n    private processResults(notifications: Notification[]) {\n\n        if (this.isViewOnly) {\n            notifications.sort((a, b) => {\n                return b.date.valueOf() - a.date.valueOf();\n            });\n        }\n\n        return notifications;\n    }\n\n\n\n    getPrintedDate(value: Date) {\n        if (value) {\n            return Utilities.printTimeOnly(value) + ' on ' + Utilities.printDateOnly(value);\n        }\n    }\n\n\n    deleteNotification(row: Notification) {\n        this.alertService.showDialog('Are you sure you want to delete the notification \\\"' + row.header + '\\\"?', DialogType.confirm, () => this.deleteNotificationHelper(row));\n    }\n\n\n    deleteNotificationHelper(row: Notification) {\n\n        this.alertService.startLoadingMessage('Deleting...');\n        this.loadingIndicator = true;\n\n        this.notificationService.deleteNotification(row)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                this.rows = this.rows.filter(item => item.id != row.id);\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the notification.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    togglePin(row: Notification) {\n\n        const pin = !row.isPinned;\n        const opText = pin ? 'Pinning' : 'Unpinning';\n\n        this.alertService.startLoadingMessage(opText + '...');\n        this.loadingIndicator = true;\n\n        this.notificationService.pinUnpinNotification(row, pin)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                row.isPinned = pin;\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage(opText + ' Error', `An error occured whilst ${opText} the notification.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    get canManageNotifications() {\n        return this.accountService.userHasPermission(Permission.manageRolesPermission); // Todo: Consider creating separate permission for notifications\n    }\n\n}\n","<div class=\"icon-addon addon-sm\">\n    <label for=\"searchInput\" title=\"Search\"><i class=\"fa fa-search left-icon search-icon\"></i></label>\n    <input id=\"searchInput\" #searchInput type=\"search\" ngModel=\"\" (ngModelChange)=\"onValueChange($event)\" [attr.placeholder]=\"placeholder\" class=\"form-control left-icon right-icon\">\n    <a *ngIf=\"searchInput.value\" href=\"javascript:;\" title=\"Clear\" (click)=\"clear()\" class=\"fa fa-times-circle clear-input right-icon\"></a>\n</div>","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, ViewChild, ElementRef, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'search-box',\n    templateUrl: './search-box.component.html',\n    styleUrls: ['./search-box.component.scss']\n})\nexport class SearchBoxComponent {\n\n    @Input()\n    placeholder = 'Search...';\n\n    @Output()\n    searchChange = new EventEmitter<string>();\n\n    @ViewChild('searchInput', { static: true })\n    searchInput: ElementRef;\n\n\n    onValueChange(value: string) {\n        setTimeout(() => this.searchChange.emit(value));\n    }\n\n\n    clear() {\n        this.searchInput.nativeElement.value = '';\n        this.onValueChange(this.searchInput.nativeElement.value);\n    }\n}\n","<div>\n  <form *ngIf=\"formResetToggle\" [attr.autocomplete]=\"isGeneralEditor ? 'NaN' : null\" name=\"userInfoForm\" #f=\"ngForm\" novalidate\n        (ngSubmit)=\"f.form.valid ? save() :\n\n          (!userName.valid && showErrorAlert('User name is required', 'Please enter a user name (minimum of 2 and maximum of 200 characters)'));\n\n          (userPassword && !userPassword.valid && showErrorAlert('Password is required', 'Please enter the current password'));\n\n          (email.errors?.required && showErrorAlert('Email is required', 'Please enter an email address (maximum of 200 characters)'));\n          (email.errors?.pattern && showErrorAlert('Invalid Email', 'Please enter a valid email address'));\n\n          (isChangePassword && isEditingSelf && !currentPassword.valid && showErrorAlert('Current password is required', 'Please enter the current password'));\n\n          ((isChangePassword || isNewUser) && !newPassword.valid && showErrorAlert('New password is required', 'Please enter the new password (minimum of 6 characters)'));\n\n          ((isChangePassword || isNewUser) && newPassword.valid && confirmPassword.errors?.required && showErrorAlert('Confirmation password is required', 'Please enter the confirmation password'));\n          ((isChangePassword || isNewUser) && newPassword.valid && confirmPassword.errors?.validateEqual && showErrorAlert('Passwword mismatch', 'New password and confirmation password do not match'));\n\n          (canAssignRoles && !isEditingSelf && !roles.valid && showErrorAlert('Roles is required', 'Please select a minimum of 1 role'));\">\n\n    <div class=\"form-group row\">\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"jobTitle-{{uniqueId}}\">{{'users.editor.JobTitle' | translate}}</label>\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <p class=\"form-control-plaintext\">{{user.jobTitle}}</p>\n      </div>\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <input autofocus type=\"text\" attr.id=\"jobTitle-{{uniqueId}}\" name=\"jobTitle\" placeholder=\"Enter Job Title\" class=\"form-control\" [(ngModel)]=\"userEdit.jobTitle\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div class=\"form-group row has-feedback-icon\">\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"userName-{{uniqueId}}\">{{'users.editor.UserName' | translate}}</label>\n      <div *ngIf=\"!isEditMode || isEditingSelf\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <p class=\"form-control-plaintext\">{{user.userName}}</p>\n      </div>\n      <div *ngIf=\"isEditMode && !isEditingSelf\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <input type=\"text\" attr.id=\"userName-{{uniqueId}}\" name=\"userName\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Enter user name\"\n               class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && userName.valid, 'is-invalid' : f.submitted && !userName.valid}\"\n               [(ngModel)]=\"userEdit.userName\" #userName=\"ngModel\" required minlength=\"2\" maxlength=\"200\" />\n        <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': userName.valid, 'fa-times' : !userName.valid}\" aria-hidden=\"true\"></i>\n        <span *ngIf=\"showValidationErrors && f.submitted && !userName.valid\" class=\"invalid-feedback\">\n          {{'users.editor.UserNameRequired' | translate}}\n        </span>\n      </div>\n    </div>\n\n    <div *ngIf=\"isEditMode && isEditingSelf && !isChangePassword && user.userName != userEdit.userName\" class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr class=\"password-separator-hr\" />\n      </div>\n    </div>\n    <div *ngIf=\"isEditMode && isEditingSelf && !isChangePassword && user.userName != userEdit.userName\" class=\"form-group row has-feedback-icon\">\n      <label class=\"col-form-label col-lg-2\" for=\"userPassword-{{uniqueId}}\">{{'users.editor.Password' | translate}}</label>\n      <div class=\"col-lg-10\">\n        <input type=\"password\" attr.id=\"userPassword-{{uniqueId}}\" name=\"userPassword\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Enter password\"\n               class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && userPassword.valid, 'is-invalid' : f.submitted && !userPassword.valid}\"\n               [(ngModel)]=\"userEdit.currentPassword\" #userPassword=\"ngModel\" required />\n        <small class=\"hint-sm\">{{'users.editor.PasswordHint' | translate}}</small>\n        <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': userPassword.valid, 'fa-times' : !userPassword.valid}\" aria-hidden=\"true\"></i>\n        <span *ngIf=\"showValidationErrors && f.submitted && !userPassword.valid\" class=\"invalid-feedback\">\n          {{'users.editor.CurrentPasswordRequired' | translate}}\n        </span>\n      </div>\n    </div>\n\n\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div class=\"form-group row has-feedback-icon\">\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"email-{{uniqueId}}\">{{'users.editor.Email' | translate}}</label>\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <p class=\"form-control-plaintext\">{{user.email}}</p>\n      </div>\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <input type=\"text\" attr.id=\"email-{{uniqueId}}\" name=\"email\" placeholder=\"Enter email address\" class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && email.valid, 'is-invalid' : f.submitted && !email.valid}\"\n               [(ngModel)]=\"userEdit.email\" #email=\"ngModel\" required maxlength=\"200\" pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\" />\n        <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': email.valid, 'fa-times' : !email.valid}\" aria-hidden=\"true\"></i>\n        <span *ngIf=\"showValidationErrors && f.submitted && email.errors?.required\" class=\"invalid-feedback\">\n          {{'users.editor.EmailRequired' | translate}}\n        </span>\n        <span *ngIf=\"showValidationErrors && f.submitted && email.errors?.pattern\" class=\"invalid-feedback\">\n          {{'users.editor.InvalidEmail' | translate}}\n        </span>\n      </div>\n    </div>\n\n    <div *ngIf=\"isEditMode\" class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div *ngIf=\"isEditMode\" class=\"form-group row\">\n      <label for=\"newPassword-{{uniqueId}}\" class=\"col-form-label col-lg-2\">{{'users.editor.Password' | translate}}</label>\n      <div *ngIf=\"!isChangePassword && !isNewUser\" class=\"col-lg-10\">\n        <button type=\"button\" (click)=\"changePassword()\" class=\"btn btn-link\">{{'users.editor.ChangePassword' | translate}}</button>\n      </div>\n\n      <div *ngIf=\"isChangePassword || isNewUser\" class=\"col-lg-10\">\n        <div class=\"password-well card card-body bg-light\">\n          <div *ngIf=\"isEditingSelf\" class=\"form-group row has-feedback-icon\">\n            <label class=\"col-form-label col-lg-3\" for=\"currentPassword-{{uniqueId}}\">{{'users.editor.CurrentPassword' | translate}}</label>\n            <div class=\"col-lg-9\">\n              <input type=\"password\" attr.id=\"currentPassword-{{uniqueId}}\" name=\"currentPassword\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Enter current password\" class=\"form-control\"\n                     [ngClass]=\"{'is-valid': f.submitted && currentPassword.valid, 'is-invalid' : f.submitted && !currentPassword.valid}\" [(ngModel)]=\"userEdit.currentPassword\" #currentPassword=\"ngModel\" required />\n              <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': currentPassword.valid, 'fa-times' : !currentPassword.valid}\" aria-hidden=\"true\"></i>\n              <span *ngIf=\"showValidationErrors && f.submitted && !currentPassword.valid\" class=\"invalid-feedback\">\n                {{'users.editor.CurrentPasswordRequired' | translate}}\n              </span>\n            </div>\n          </div>\n\n          <div *ngIf=\"!isNewUser\" class=\"row\">\n            <div class=\"col-lg-12\">\n              <hr class=\"password-separator-hr\" />\n            </div>\n          </div>\n\n          <div class=\"form-group row has-feedback-icon\">\n            <label class=\"col-form-label col-lg-3\" for=\"newPassword-{{uniqueId}}\">{{'users.editor.NewPassword' | translate}}</label>\n            <div class=\"col-lg-9\">\n              <input type=\"password\" attr.id=\"newPassword-{{uniqueId}}\" name=\"newPassword\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Enter new password\" class=\"form-control\"\n                     [ngClass]=\"{'is-valid': f.submitted && newPassword.valid, 'is-invalid' : f.submitted && !newPassword.valid}\" [(ngModel)]=\"userEdit.newPassword\" #newPassword=\"ngModel\"\n                     required minlength=\"6\" validateEqual=\"confirmPassword\" reverse=\"true\" />\n              <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': newPassword.valid, 'fa-times' : !newPassword.valid}\" aria-hidden=\"true\"></i>\n              <span *ngIf=\"showValidationErrors && f.submitted && !newPassword.valid\" class=\"invalid-feedback\">\n                {{'users.editor.NewPasswordRequired' | translate}}\n              </span>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <hr class=\"password-separator-hr\" />\n            </div>\n          </div>\n\n          <div class=\"form-group row has-feedback-icon\">\n            <label class=\"col-form-label col-lg-3\" for=\"confirmPassword-{{uniqueId}}\">{{'users.editor.ConfirmPassword' | translate}}</label>\n            <div class=\"col-lg-9\">\n              <input type=\"password\" attr.id=\"confirmPassword-{{uniqueId}}\" name=\"confirmPassword\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Confirm new password\" class=\"form-control\"\n                     [ngClass]=\"{'is-valid': f.submitted && confirmPassword.valid, 'is-invalid' : f.submitted && !confirmPassword.valid}\" [(ngModel)]=\"userEdit.confirmPassword\" #confirmPassword=\"ngModel\"\n                     required validateEqual=\"newPassword\" />\n              <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': confirmPassword.valid, 'fa-times' : !confirmPassword.valid}\" aria-hidden=\"true\"></i>\n              <span *ngIf=\"showValidationErrors && f.submitted && confirmPassword.errors?.required\" class=\"invalid-feedback\">\n                {{'users.editor.ConfirmationPasswordRequired' | translate}}\n              </span>\n              <span *ngIf=\"showValidationErrors && f.submitted && confirmPassword.errors?.validateEqual && !confirmPassword.errors?.required\" class=\"invalid-feedback\">\n                {{'users.editor.PasswordMismatch' | translate}}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!--******************************************************************************************************-->\n\n    <div *ngIf=\"!isEditMode || canAssignRoles || isEditingSelf\" class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div *ngIf=\"!isEditMode || canAssignRoles || isEditingSelf\" class=\"form-group row has-feedback-icon\">\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"roles-user-info\">{{'users.editor.Roles' | translate}}</label>\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <p ngPreserveWhitespaces class=\"form-control-plaintext\">\n          <span *ngFor=\"let role of user.roles\">\n            <span title='{{getRoleByName(role)?.description}}' class=\"badge badge-pill badge-secondary\">{{role}}</span>\n          </span>\n        </p>\n      </div>\n      <div *ngIf=\"isEditMode && canAssignRoles && !isEditingSelf\" [ngClass]=\"{'is-valid': f.submitted && roles.valid, 'is-invalid' : f.submitted && !roles.valid}\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <select id=\"roles-user-info\" name=\"roles\" [(ngModel)]=\"userEdit.roles\" #roles=\"ngModel\" #rolesSelector=\"bootstrap-select\"\n                class=\"selectpicker form-control left-status\" bootstrapSelect required multiple data-live-search=\"true\" data-actions-box=\"false\" data-live-search-placeholder=\"Search...\" title=\"Select Roles\">\n          <option *ngFor=\"let role of allRoles\" attr.data-content=\"<span title='{{role.description}}' class='badge badge-pill badge-secondary'>{{role.name}}</span>\" attr.value=\"{{role.name}}\">\n            {{role.name}}\n          </option>\n        </select>\n        <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': roles.valid, 'fa-times' : !roles.valid}\" aria-hidden=\"true\"></i>\n        <span *ngIf=\"showValidationErrors && f.submitted && !roles.valid\" class=\"invalid-feedback\">\n          {{'users.editor.RoleRequired' | translate}}\n        </span>\n      </div>\n    </div>\n\n    <!--******************************************************************************************************-->\n\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"fullName-{{uniqueId}}\">{{'users.editor.FullName' | translate}}</label>\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <p class=\"form-control-plaintext\">{{user.fullName}}</p>\n      </div>\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <input type=\"text\" attr.id=\"fullName-{{uniqueId}}\" name=\"fullName\" placeholder=\"Enter full name\" class=\"form-control\" [(ngModel)]=\"userEdit.fullName\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"phoneNumber-{{uniqueId}}\">{{'users.editor.PhoneNumber' | translate}}</label>\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <p class=\"form-control-plaintext\">{{user.phoneNumber}}</p>\n      </div>\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <input type=\"text\" attr.id=\"phoneNumber-{{uniqueId}}\" name=\"phoneNumber\" placeholder=\"Enter phone number\" class=\"form-control\" [(ngModel)]=\"userEdit.phoneNumber\" />\n      </div>\n    </div>\n\n    <div *ngIf=\"!isViewOnly\" class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.last-separator-hr]=\"!isEditMode\" [class.edit-last-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div *ngIf=\"!isViewOnly\" class=\"form-group row\">\n      <div class=\"col-sm-5\">\n        <div *ngIf=\"isGeneralEditor && isEditMode\" class=\"float-left\">\n          <div class=\"form-check user-enabled\">\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"idEnabled\" name=\"isEnabled\" [(ngModel)]=\"userEdit.isEnabled\">\n            <label for=\"idEnabled\" class=\"form-check-label\">{{'users.editor.Enabled' | translate}}</label>\n          </div>\n          <button *ngIf=\"userEdit.isLockedOut\" type=\"button\" (click)=\"unlockUser()\" class=\"btn btn-warning unblock-user\" [disabled]=\"isSaving\"><i class='fa fa-unlock-alt'></i> {{'users.editor.Unblock' | translate}}</button>\n        </div>\n      </div>\n      <div class=\"col-sm-7\">\n        <div ngPreserveWhitespaces class=\"float-right\">\n          <button *ngIf=\"!isEditMode && isGeneralEditor\" type=\"button\" (click)=\"close()\" class=\"btn btn-outline-secondary\"><i class='fa fa-close'></i> {{'users.editor.Close' | translate}}</button>\n          <button *ngIf=\"!isEditMode && !isGeneralEditor\" type=\"button\" (click)=\"edit()\" class=\"btn btn-outline-secondary\"><i class='fa fa-edit'></i> {{'users.editor.Edit' | translate}}</button>\n          <button *ngIf=\"isEditMode\" type=\"button\" (click)=\"cancel()\" class=\"btn btn-danger\" [disabled]=\"isSaving\"><i class='fa fa-times'></i> {{'users.editor.Cancel' | translate}}</button>\n          <button *ngIf=\"isEditMode\" type=\"submit\" class=\"btn btn-primary\" [disabled]=\"isSaving\">\n            <i *ngIf=\"!isSaving\" class='fa fa-save'></i><i *ngIf=\"isSaving\" class='fa fa-circle-o-notch fa-spin'></i> {{isSaving ? ('users.editor.Saving' | translate) : ('users.editor.Save' | translate)}}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"clearfix\"></div>\n  </form>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\n\nimport {\n    MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission,\n    User\n} from '@polpware/ngx-oauth2';\n\n\nimport { AccountService } from '../../services/account.service';\nimport { UserEdit } from '../../models/user-edit.model';\nimport { Role } from '../../models/role.model';\n\n\n@Component({\n    selector: 'user-info',\n    templateUrl: './user-info.component.html',\n    styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n\n    public isEditMode = false;\n    public isNewUser = false;\n    public isSaving = false;\n    public isChangePassword = false;\n    public isEditingSelf = false;\n    public showValidationErrors = false;\n    public uniqueId: string = Utilities.uniqueId();\n    public user: User = new User();\n    public userEdit: UserEdit;\n    public allRoles: Role[] = [];\n\n    public formResetToggle = true;\n\n    public changesSavedCallback: () => void;\n    public changesFailedCallback: () => void;\n    public changesCancelledCallback: () => void;\n\n    @Input()\n    isViewOnly: boolean;\n\n    @Input()\n    isGeneralEditor = false;\n\n\n\n\n\n    @ViewChild('f', { static: false })\n    public form;\n\n    // ViewChilds Required because ngIf hides template variables from global scope\n    @ViewChild('userName', { static: false })\n    public userName;\n\n    @ViewChild('userPassword', { static: false })\n    public userPassword;\n\n    @ViewChild('email', { static: false })\n    public email;\n\n    @ViewChild('currentPassword', { static: false })\n    public currentPassword;\n\n    @ViewChild('newPassword', { static: false })\n    public newPassword;\n\n    @ViewChild('confirmPassword', { static: false })\n    public confirmPassword;\n\n    @ViewChild('roles', { static: false })\n    public roles;\n\n    @ViewChild('rolesSelector', { static: false })\n    public rolesSelector;\n\n\n    constructor(private alertService: AlertService, private accountService: AccountService) {\n    }\n\n    ngOnInit() {\n        if (!this.isGeneralEditor) {\n            this.loadCurrentUserData();\n        }\n    }\n\n\n\n    private loadCurrentUserData() {\n        this.alertService.startLoadingMessage();\n\n        if (this.canViewAllRoles) {\n            this.accountService.getUserAndRoles().subscribe(results => this.onCurrentUserDataLoadSuccessful(results[0], results[1]), error => this.onCurrentUserDataLoadFailed(error));\n        } else {\n            this.accountService.getUser().subscribe(user => this.onCurrentUserDataLoadSuccessful(user, user.roles.map(x => new Role(x))), error => this.onCurrentUserDataLoadFailed(error));\n        }\n    }\n\n\n    private onCurrentUserDataLoadSuccessful(user: User, roles: Role[]) {\n        this.alertService.stopLoadingMessage();\n        this.user = user;\n        this.allRoles = roles;\n    }\n\n    private onCurrentUserDataLoadFailed(error: any) {\n        this.alertService.stopLoadingMessage();\n        this.alertService.showStickyMessage('Load Error', `Unable to retrieve user data from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n            MessageSeverity.error, error);\n\n        this.user = new User();\n    }\n\n\n\n    getRoleByName(name: string) {\n        return this.allRoles.find((r) => r.name == name);\n    }\n\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n\n    deletePasswordFromUser(user: UserEdit | User) {\n        const userEdit = user as UserEdit;\n\n        delete userEdit.currentPassword;\n        delete userEdit.newPassword;\n        delete userEdit.confirmPassword;\n    }\n\n\n    edit() {\n        if (!this.isGeneralEditor) {\n            this.isEditingSelf = true;\n            this.userEdit = new UserEdit();\n            Object.assign(this.userEdit, this.user);\n        } else {\n            if (!this.userEdit) {\n                this.userEdit = new UserEdit();\n            }\n\n            this.isEditingSelf = this.accountService.currentUser ? this.userEdit.id == this.accountService.currentUser.id : false;\n        }\n\n        this.isEditMode = true;\n        this.showValidationErrors = true;\n        this.isChangePassword = false;\n    }\n\n\n    save() {\n        this.isSaving = true;\n        this.alertService.startLoadingMessage('Saving changes...');\n\n        if (this.isNewUser) {\n            this.accountService.newUser(this.userEdit).subscribe(user => this.saveSuccessHelper(user), error => this.saveFailedHelper(error));\n        } else {\n            this.accountService.updateUser(this.userEdit).subscribe(response => this.saveSuccessHelper(), error => this.saveFailedHelper(error));\n        }\n    }\n\n\n    private saveSuccessHelper(user?: User) {\n        this.testIsRoleUserCountChanged(this.user, this.userEdit);\n\n        if (user) {\n            Object.assign(this.userEdit, user);\n        }\n\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.isChangePassword = false;\n        this.showValidationErrors = false;\n\n        this.deletePasswordFromUser(this.userEdit);\n        Object.assign(this.user, this.userEdit);\n        this.userEdit = new UserEdit();\n        this.resetForm();\n\n\n        if (this.isGeneralEditor) {\n            if (this.isNewUser) {\n                this.alertService.showMessage('Success', `User \\\"${this.user.userName}\\\" was created successfully`, MessageSeverity.success);\n            } else if (!this.isEditingSelf) {\n                this.alertService.showMessage('Success', `Changes to user \\\"${this.user.userName}\\\" was saved successfully`, MessageSeverity.success);\n            }\n        }\n\n        if (this.isEditingSelf) {\n            this.alertService.showMessage('Success', 'Changes to your User Profile was saved successfully', MessageSeverity.success);\n            this.refreshLoggedInUser();\n        }\n\n        this.isEditMode = false;\n\n\n        if (this.changesSavedCallback) {\n            this.changesSavedCallback();\n        }\n    }\n\n\n    private saveFailedHelper(error: any) {\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.alertService.showStickyMessage('Save Error', 'The below errors occured whilst saving your changes:', MessageSeverity.error, error);\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\n\n        if (this.changesFailedCallback) {\n            this.changesFailedCallback();\n        }\n    }\n\n\n\n    private testIsRoleUserCountChanged(currentUser: User, editedUser: User) {\n\n        const rolesAdded = this.isNewUser ? editedUser.roles : editedUser.roles.filter(role => currentUser.roles.indexOf(role) == -1);\n        const rolesRemoved = this.isNewUser ? [] : currentUser.roles.filter(role => editedUser.roles.indexOf(role) == -1);\n\n        const modifiedRoles = rolesAdded.concat(rolesRemoved);\n\n        if (modifiedRoles.length) {\n            setTimeout(() => this.accountService.onRolesUserCountChanged(modifiedRoles));\n        }\n    }\n\n\n\n    cancel() {\n        if (this.isGeneralEditor) {\n            this.userEdit = this.user = new UserEdit();\n        } else {\n            this.userEdit = new UserEdit();\n        }\n\n        this.showValidationErrors = false;\n        this.resetForm();\n\n        this.alertService.showMessage('Cancelled', 'Operation cancelled by user', MessageSeverity.default);\n        this.alertService.resetStickyMessage();\n\n        if (!this.isGeneralEditor) {\n            this.isEditMode = false;\n        }\n\n        if (this.changesCancelledCallback) {\n            this.changesCancelledCallback();\n        }\n    }\n\n\n    close() {\n        this.userEdit = this.user = new UserEdit();\n        this.showValidationErrors = false;\n        this.resetForm();\n        this.isEditMode = false;\n\n        if (this.changesSavedCallback) {\n            this.changesSavedCallback();\n        }\n    }\n\n\n\n    private refreshLoggedInUser() {\n        this.accountService.refreshLoggedInUser()\n            .subscribe(user => {\n                this.loadCurrentUserData();\n            },\n                error => {\n                    this.alertService.resetStickyMessage();\n                    this.alertService.showStickyMessage('Refresh failed', 'An error occured whilst refreshing logged in user information from the server', MessageSeverity.error, error);\n                });\n    }\n\n\n    changePassword() {\n        this.isChangePassword = true;\n    }\n\n\n    unlockUser() {\n        this.isSaving = true;\n        this.alertService.startLoadingMessage('Unblocking user...');\n\n\n        this.accountService.unblockUser(this.userEdit.id)\n            .subscribe(() => {\n                this.isSaving = false;\n                this.userEdit.isLockedOut = false;\n                this.alertService.stopLoadingMessage();\n                this.alertService.showMessage('Success', 'User has been successfully unblocked', MessageSeverity.success);\n            },\n                error => {\n                    this.isSaving = false;\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Unblock Error', 'The below errors occured whilst unblocking the user:', MessageSeverity.error, error);\n                    this.alertService.showStickyMessage(error, null, MessageSeverity.error);\n                });\n    }\n\n\n    resetForm(replace = false) {\n        this.isChangePassword = false;\n\n        if (!replace) {\n            this.form.reset();\n        } else {\n            this.formResetToggle = false;\n\n            setTimeout(() => {\n                this.formResetToggle = true;\n            });\n        }\n    }\n\n\n    newUser(allRoles: Role[]) {\n        this.isGeneralEditor = true;\n        this.isNewUser = true;\n\n        this.allRoles = [...allRoles];\n        this.user = this.userEdit = new UserEdit();\n        this.userEdit.isEnabled = true;\n        this.edit();\n\n        return this.userEdit;\n    }\n\n    editUser(user: User, allRoles: Role[]) {\n        if (user) {\n            this.isGeneralEditor = true;\n            this.isNewUser = false;\n\n            this.setRoles(user, allRoles);\n            this.user = new User();\n            this.userEdit = new UserEdit();\n            Object.assign(this.user, user);\n            Object.assign(this.userEdit, user);\n            this.edit();\n\n            return this.userEdit;\n        } else {\n            return this.newUser(allRoles);\n        }\n    }\n\n\n    displayUser(user: User, allRoles?: Role[]) {\n\n        this.user = new User();\n        Object.assign(this.user, user);\n        this.deletePasswordFromUser(this.user);\n        this.setRoles(user, allRoles);\n\n        this.isEditMode = false;\n    }\n\n\n\n    private setRoles(user: User, allRoles?: Role[]) {\n\n        this.allRoles = allRoles ? [...allRoles] : [];\n\n        if (user.roles) {\n            for (const ur of user.roles) {\n                if (!this.allRoles.some(r => r.name == ur)) {\n                    this.allRoles.unshift(new Role(ur));\n                }\n            }\n        }\n\n        if (allRoles == null || this.allRoles.length != allRoles.length) {\n            setTimeout(() => {\n                if (this.rolesSelector) {\n                    this.rolesSelector.refresh();\n                }\n            });\n        }\n    }\n\n\n\n    get canViewAllRoles() {\n        return this.accountService.userHasPermission(Permission.viewRolesPermission);\n    }\n\n    get canAssignRoles() {\n        return this.accountService.userHasPermission(Permission.assignRolesPermission);\n    }\n}\n","<div>\n  <div class=\"row control-box\">\n    <div class=\"col-lg-8\">\n      <div class=\"form-group search-box\">\n        <search-box (searchChange)=\"onSearchChanged($event)\" placeholder=\"{{'users.management.Search' | translate}}\">></search-box>\n      </div>\n    </div>\n    <div class=\"col-lg-4 pr-lg-5\">\n      <ul class=\"nav flex-column flex-lg-row justify-content-end\">\n        <li *ngIf=\"canManageUsers && canAssignRoles\" class=\"nav-item toolbaritem\">\n          <a class=\"nav-link\" href=\"javascript:;\" (click)=\"newUser()\">\n            <i class=\"fa fa-plus-circle\"></i> {{'users.management.NewUser' | translate}}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <ngx-datatable class=\"material colored-header sm table table-striped table-hover\"\n                 [loadingIndicator]=\"loadingIndicator\"\n                 [rows]=\"rows\"\n                 [rowHeight]=\"35\"\n                 [headerHeight]=\"35\"\n                 [footerHeight]=\"35\"\n                 [columns]=\"columns\"\n                 [scrollbarV]=\"true\"\n                 [columnMode]=\"'force'\">\n  </ngx-datatable>\n\n  <ng-template #indexTemplate let-value=\"value\">\n    <strong>{{value}}</strong>\n  </ng-template>\n\n  <ng-template #userNameTemplate let-row=\"row\" let-value=\"value\">\n    <span [class.locked-out]=\"row.isLockedOut\" [class.user-disabled]=\"!row.isEnabled\">\n      <i *ngIf=\"row.isLockedOut\" class=\"fa fa-exclamation-triangle\"> </i>\n      <i *ngIf=\"!row.isEnabled\" class=\"fa fa-exclamation\"> </i>\n      {{value}}\n    </span>\n  </ng-template>\n\n  <ng-template #rolesTemplate let-row=\"row\" let-value=\"value\" let-i=\"index\">\n    <span class=\"user-role badge badge-pill badge-secondary\" *ngFor=\"let role of value\">{{role}}</span>\n  </ng-template>\n\n  <ng-template #actionsTemplate let-row=\"row\" let-value=\"value\" let-i=\"index\">\n    <div *ngIf=\"canManageUsers\">\n      <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"editUser(row)\"><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'users.management.Edit' | translate}}</a>|\n      <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"deleteUser(row)\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i> {{'users.management.Delete' | translate}}</a>\n    </div>\n  </ng-template>\n\n\n  <div class=\"modal fade\" bsModal #editorModal=\"bs-modal\" (onHidden)=\"onEditorModalHidden()\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h4 *ngIf=\"!editingUserName\" class=\"modal-title float-left\"><i class=\"fa fa-user-plus\"></i> {{'users.management.NewUser' | translate}}</h4>\n          <h4 *ngIf=\"editingUserName\" class=\"modal-title float-left\"><i class=\"fa fa-user-circle-o\"></i> {{'users.management.EditUser' | translate:editingUserName}}</h4>\n          <button type=\"button\" class=\"close float-right\" title=\"Close\" (click)=\"editorModal.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <user-info #userEditor [isGeneralEditor]=\"true\"></user-info>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, AfterViewInit, TemplateRef, ViewChild, Input } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission,\n    User\n} from '@polpware/ngx-oauth2';\n\nimport { AccountService } from '../../services/account.service';\nimport { Role } from '../../models/role.model';\nimport { UserEdit } from '../../models/user-edit.model';\nimport { UserInfoComponent } from '../user-info/user-info.component';\n\n\n@Component({\n    selector: 'users-management',\n    templateUrl: './users-management.component.html',\n    styleUrls: ['./users-management.component.scss']\n})\nexport class UsersManagementComponent implements OnInit, AfterViewInit {\n    columns: any[] = [];\n    rows: User[] = [];\n    rowsCache: User[] = [];\n    editedUser: UserEdit;\n    sourceUser: UserEdit;\n    editingUserName: { name: string };\n    loadingIndicator: boolean;\n\n    allRoles: Role[] = [];\n\n\n    @ViewChild('indexTemplate', { static: true })\n    indexTemplate: TemplateRef<any>;\n\n    @ViewChild('userNameTemplate', { static: true })\n    userNameTemplate: TemplateRef<any>;\n\n    @ViewChild('rolesTemplate', { static: true })\n    rolesTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    @ViewChild('editorModal', { static: true })\n    editorModal: ModalDirective;\n\n    @ViewChild('userEditor', { static: true })\n    userEditor: UserInfoComponent;\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService) {\n    }\n\n\n    ngOnInit() {\n\n        const gT = (key: string) => this.translationService.getTranslation(key);\n\n        this.columns = [\n            { prop: 'index', name: '#', width: 40, cellTemplate: this.indexTemplate, canAutoResize: false },\n            { prop: 'jobTitle', name: gT('users.management.Title'), width: 50 },\n            { prop: 'userName', name: gT('users.management.UserName'), width: 90, cellTemplate: this.userNameTemplate },\n            { prop: 'fullName', name: gT('users.management.FullName'), width: 120 },\n            { prop: 'email', name: gT('users.management.Email'), width: 140 },\n            { prop: 'roles', name: gT('users.management.Roles'), width: 120, cellTemplate: this.rolesTemplate },\n            { prop: 'phoneNumber', name: gT('users.management.PhoneNumber'), width: 100 }\n        ];\n\n        if (this.canManageUsers) {\n            this.columns.push({ name: '', width: 160, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false });\n        }\n\n        this.loadData();\n    }\n\n\n    ngAfterViewInit() {\n\n        this.userEditor.changesSavedCallback = () => {\n            this.addNewUserToList();\n            this.editorModal.hide();\n        };\n\n        this.userEditor.changesCancelledCallback = () => {\n            this.editedUser = null;\n            this.sourceUser = null;\n            this.editorModal.hide();\n        };\n    }\n\n\n    addNewUserToList() {\n        if (this.sourceUser) {\n            Object.assign(this.sourceUser, this.editedUser);\n\n            let sourceIndex = this.rowsCache.indexOf(this.sourceUser, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rowsCache, sourceIndex, 0);\n            }\n\n            sourceIndex = this.rows.indexOf(this.sourceUser, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rows, sourceIndex, 0);\n            }\n\n            this.editedUser = null;\n            this.sourceUser = null;\n        } else {\n            const user = new User();\n            Object.assign(user, this.editedUser);\n            this.editedUser = null;\n\n            let maxIndex = 0;\n            for (const u of this.rowsCache) {\n                if ((u as any).index > maxIndex) {\n                    maxIndex = (u as any).index;\n                }\n            }\n\n            (user as any).index = maxIndex + 1;\n\n            this.rowsCache.splice(0, 0, user);\n            this.rows.splice(0, 0, user);\n            this.rows = [...this.rows];\n        }\n    }\n\n\n    loadData() {\n        this.alertService.startLoadingMessage();\n        this.loadingIndicator = true;\n\n        if (this.canViewRoles) {\n            this.accountService.getUsersAndRoles().subscribe(results => this.onDataLoadSuccessful(results[0], results[1]), error => this.onDataLoadFailed(error));\n        } else {\n            this.accountService.getUsers().subscribe(users => this.onDataLoadSuccessful(users, this.accountService.currentUser.roles.map(x => new Role(x))), error => this.onDataLoadFailed(error));\n        }\n    }\n\n\n    onDataLoadSuccessful(users: User[], roles: Role[]) {\n        this.alertService.stopLoadingMessage();\n        this.loadingIndicator = false;\n\n        users.forEach((user, index, users) => {\n            (user as any).index = index + 1;\n        });\n\n        this.rowsCache = [...users];\n        this.rows = users;\n\n        this.allRoles = roles;\n    }\n\n\n    onDataLoadFailed(error: any) {\n        this.alertService.stopLoadingMessage();\n        this.loadingIndicator = false;\n\n        this.alertService.showStickyMessage('Load Error', `Unable to retrieve users from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n            MessageSeverity.error, error);\n    }\n\n\n    onSearchChanged(value: string) {\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.userName, r.fullName, r.email, r.phoneNumber, r.jobTitle, r.roles));\n    }\n\n    onEditorModalHidden() {\n        this.editingUserName = null;\n        this.userEditor.resetForm(true);\n    }\n\n\n    newUser() {\n        this.editingUserName = null;\n        this.sourceUser = null;\n        this.editedUser = this.userEditor.newUser(this.allRoles);\n        this.editorModal.show();\n    }\n\n\n    editUser(row: UserEdit) {\n        this.editingUserName = { name: row.userName };\n        this.sourceUser = row;\n        this.editedUser = this.userEditor.editUser(row, this.allRoles);\n        this.editorModal.show();\n    }\n\n\n    deleteUser(row: UserEdit) {\n        this.alertService.showDialog('Are you sure you want to delete \\\"' + row.userName + '\\\"?', DialogType.confirm, () => this.deleteUserHelper(row));\n    }\n\n\n    deleteUserHelper(row: UserEdit) {\n\n        this.alertService.startLoadingMessage('Deleting...');\n        this.loadingIndicator = true;\n\n        this.accountService.deleteUser(row)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                this.rowsCache = this.rowsCache.filter(item => item !== row);\n                this.rows = this.rows.filter(item => item !== row);\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the user.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n\n    get canAssignRoles() {\n        return this.accountService.userHasPermission(Permission.assignRolesPermission);\n    }\n\n    get canViewRoles() {\n        return this.accountService.userHasPermission(Permission.viewRolesPermission);\n    }\n\n    get canManageUsers() {\n        return this.accountService.userHasPermission(Permission.manageUsersPermission);\n    }\n}\n","<div>\n    <div class=\"form-group row\">\n        <label for=\"refreshButton\" class=\"col-sm-3 col-form-label\">{{'preferences.ReloadPreferences' | translate}} </label>\n        <div class=\"col-sm-4\">\n            <button id=\"refreshButton\" class=\"btn btn-outline-secondary\" (click)=\"reloadFromServer()\">\n                <i class=\"fa fa-refresh\"></i>\n            </button>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.ReloadPreferencesHint' | translate}}</p>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"separator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"language\" class=\"col-sm-3 col-form-label\">{{'preferences.Language' | translate}} </label>\n        <div class=\"col-sm-4\">\n            <select id=\"language\" [(ngModel)]=\"configurations.language\" #languageSelector=\"bootstrap-select\" bootstrapSelect class=\"selectpicker form-control\">\n                <option data-subtext=\"(Default)\" value=\"en\">{{'preferences.English' | translate}}</option>\n                <option value=\"fr\">{{'preferences.French' | translate}}</option>\n                <option value=\"de\">{{'preferences.German' | translate}}</option>\n                <option value=\"pt\">{{'preferences.Portuguese' | translate}}</option>\n                <option value=\"ar\">{{'preferences.Arabic' | translate}}</option>\n                <option value=\"ko\">{{'preferences.Korean' | translate}}</option>\n            </select>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.LanguageHint' | translate}}</p>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"separator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"homePage\" class=\"col-sm-3 col-form-label\">{{'preferences.HomePage' | translate}} </label>\n        <div class=\"col-sm-4\">\n            <select id=\"homePage\" [(ngModel)]=\"configurations.homeUrl\" #homePageSelector=\"bootstrap-select\" bootstrapSelect class=\"selectpicker form-control\">\n                <option data-icon=\"fa fa-tachometer\" data-subtext=\"(Default)\" value=\"/\">{{'preferences.Dashboard' | translate}}</option>\n                <option *ngIf=\"canViewCustomers\" data-icon=\"fa fa-handshake-o\" value=\"/customers\">{{'preferences.Customers' | translate}}</option>\n                <option *ngIf=\"canViewProducts\" data-icon=\"fa fa-truck\" value=\"/products\">{{'preferences.Products' | translate}}</option>\n                <option *ngIf=\"canViewOrders\" data-icon=\"fa fa-shopping-cart\" value=\"/orders\">{{'preferences.Orders' | translate}}</option>\n                <option data-icon=\"fa fa-info-circle\" value=\"/about\">{{'preferences.About' | translate}}</option>\n                <option data-icon=\"fa fa-cog\" value=\"/settings\">{{'preferences.Settings' | translate}}</option>\n            </select>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.HomePageHint' | translate}}</p>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"separator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"defaultTheme\" class=\"col-sm-3 col-form-label\">{{'preferences.Theme' | translate}} </label>\n        <div *ngIf=\"themeSelectorToggle\" class=\"col-sm-4\">\n            <select id=\"defaultTheme\" [(ngModel)]=\"configurations.themeId\" bootstrapSelect class=\"selectpicker theme-picker form-control\">\n                <option *ngFor=\"let theme of themeManager.themes\"\n                attr.data-content=\"<div class='theme-item' style='background-color: {{theme.background}}; color: {{theme.color}}'>{{'preferences.' + theme.name + 'Theme' | translate}}\n                <span class='small'>{{theme.isDark ? '(Dark)' : ''}}</span></div>\">\n                {{theme.id}}\n                </option>\n            </select>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.ThemeHint' | translate}}</p>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"separator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-3 col-form-label\" for=\"dashboardStatistics\">{{'preferences.DashboardStatistics' | translate}} </label>\n        <div class=\"col-sm-4\">\n            <div class=\"checkbox\">\n                <input name=\"dashboardStatistics\" [(ngModel)]=\"configurations.showDashboardStatistics\" class=\"form-control\" type=\"checkbox\" bootstrapToggle data-size=\"small\">\n            </div>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.DashboardStatisticsHint' | translate}}</p>\n        </div>\n    </div>\n    <!--  -->\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"subseparator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-3 col-form-label\" for=\"dashboardTodo\">{{'preferences.DashboardNotifications' | translate}} </label>\n        <div class=\"col-sm-4\">\n            <div class=\"checkbox\">\n                <input name=\"dashboardNotifications\" [(ngModel)]=\"configurations.showDashboardNotifications\" class=\"form-control\" type=\"checkbox\" bootstrapToggle data-size=\"small\">\n            </div>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.DashboardNotificationsHint' | translate}}</p>\n        </div>\n    </div>\n    <!--  -->\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"subseparator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-3 col-form-label\" for=\"dashboardTodo\">{{'preferences.DashboardTodo' | translate}} </label>\n        <div class=\"col-sm-4\">\n            <div class=\"checkbox\">\n                <input name=\"dashboardTodo\" [(ngModel)]=\"configurations.showDashboardTodo\" class=\"form-control\" type=\"checkbox\" bootstrapToggle data-size=\"small\">\n            </div>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.DashboardTodoHint' | translate}}</p>\n        </div>\n    </div>\n    <!--  -->\n\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"subseparator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-3 col-form-label\" for=\"dashboardBanner\">{{'preferences.DashboardBanner' | translate}}</label>\n        <div class=\"col-sm-4\">\n            <div class=\"checkbox\">\n                <input name=\"dashboardBanner\" [(ngModel)]=\"configurations.showDashboardBanner\" class=\"form-control\" type=\"checkbox\" bootstrapToggle data-size=\"small\">\n            </div>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.DashboardBannerHint' | translate}}</p>\n        </div>\n    </div>\n    <!--  -->\n\n\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"last-separator-hr\" />\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <div class=\"col-sm-3\">\n\n        </div>\n        <div class=\"col-sm-9\">\n            <div class=\"row float-left\">\n                <div class=\"col-sm-6 col-reset-default\">\n                    <button type=\"button\" (click)=\"resetDefault()\" class=\"btn btn-success\">\n                        <i class='fa fa-circle-o-notch'></i> {{'preferences.ResetDefault' | translate}}\n                    </button>\n                </div>\n                <div class=\"col-sm-6 col-set-default\">\n                    <button type=\"button\" (click)=\"setAsDefault()\" class=\"btn btn-primary\">\n                        <i class='fa fa-hdd-o'></i> {{'preferences.SetDefault' | translate}}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService,\n    LocalStoreManager,\n    ConfigurationService,\n    ThemeManager\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    AuthService,\n    Permission\n} from '@polpware/ngx-oauth2';\n\nimport { BootstrapSelectDirective } from '../../directives/bootstrap-select.directive';\nimport { AccountService } from '../../services/account.service';\n\n@Component({\n    selector: 'user-preferences',\n    templateUrl: './user-preferences.component.html',\n    styleUrls: ['./user-preferences.component.scss']\n})\nexport class UserPreferencesComponent implements OnInit, OnDestroy {\n\n    themeSelectorToggle = true;\n\n    languageChangedSubscription: any;\n\n    @ViewChild('languageSelector', { static: true })\n    languageSelector: BootstrapSelectDirective;\n\n    @ViewChild('homePageSelector', { static: true })\n    homePageSelector: BootstrapSelectDirective;\n\n    constructor(\n        private alertService: AlertService,\n        private translationService: AppTranslationService,\n        private accountService: AccountService,\n        public themeManager: ThemeManager,\n        public configurations: ConfigurationService) {\n    }\n\n    ngOnInit() {\n        this.languageChangedSubscription = this.translationService.languageChanged$.subscribe(data => {\n            this.themeSelectorToggle = false;\n\n            setTimeout(() => {\n                this.languageSelector.refresh();\n                this.homePageSelector.refresh();\n                this.themeSelectorToggle = true;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.languageChangedSubscription.unsubscribe();\n    }\n\n\n\n    reloadFromServer() {\n        this.alertService.startLoadingMessage();\n\n        this.accountService.getUserPreferences()\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n\n                this.configurations.import(results);\n\n                this.alertService.showMessage('Defaults loaded!', '', MessageSeverity.info);\n\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Load Error', `Unable to retrieve user preferences from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n    setAsDefault() {\n        this.alertService.showDialog('Are you sure you want to set the current configuration as your new defaults?', DialogType.confirm,\n            () => this.setAsDefaultHelper(),\n            () => this.alertService.showMessage('Operation Cancelled!', '', MessageSeverity.default));\n    }\n\n    setAsDefaultHelper() {\n        this.alertService.startLoadingMessage('', 'Saving new defaults');\n\n        this.accountService.updateUserPreferences(this.configurations.export())\n            .subscribe(response => {\n                this.alertService.stopLoadingMessage();\n                this.alertService.showMessage('New Defaults', 'Account defaults updated successfully', MessageSeverity.success);\n\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Save Error', `An error occured whilst saving configuration defaults.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n\n    resetDefault() {\n        this.alertService.showDialog('Are you sure you want to reset your defaults?', DialogType.confirm,\n            () => this.resetDefaultHelper(),\n            () => this.alertService.showMessage('Operation Cancelled!', '', MessageSeverity.default));\n    }\n\n    resetDefaultHelper() {\n        this.alertService.startLoadingMessage('', 'Resetting defaults');\n\n        this.accountService.updateUserPreferences(null)\n            .subscribe(response => {\n                this.alertService.stopLoadingMessage();\n                this.configurations.import(null);\n                this.alertService.showMessage('Defaults Reset', 'Account defaults reset completed successfully', MessageSeverity.success);\n\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Save Error', `An error occured whilst resetting configuration defaults.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    get canViewCustomers() {\n        return this.accountService.userHasPermission(Permission.viewUsersPermission); // eg. viewCustomersPermission\n    }\n\n    get canViewProducts() {\n        return this.accountService.userHasPermission(Permission.viewUsersPermission); // eg. viewProductsPermission\n    }\n\n    get canViewOrders() {\n        return true; // eg. viewOrdersPermission\n    }\n}\n","<div>\n  <form *ngIf=\"formResetToggle\" name=\"roleEditorForm\" #f=\"ngForm\" novalidate\n        (ngSubmit)=\"f.form.valid ? save() :\n          (!roleName.valid && showErrorAlert('Role name is required', 'Please enter a role name (minimum of 2 and maximum of 200 characters)'));\">\n\n    <div class=\"row\">\n      <div class=\"col-sm-5\">\n        <div class=\"form-group row has-feedback-icon\">\n          <label class=\"col-form-label col-md-3\" for=\"roleName\">{{'roles.editor.Name' | translate}}</label>\n          <div class=\"col-md-9\">\n            <input [disabled]=\"!canManageRoles\" type=\"text\" id=\"roleName\" name=\"roleName\" placeholder=\"Enter role name\" class=\"form-control\"\n                   [ngClass]=\"{'is-valid': f.submitted && roleName.valid, 'is-invalid' : f.submitted && !roleName.valid}\" [(ngModel)]=\"roleEdit.name\" #roleName=\"ngModel\" required minlength=\"2\" maxlength=\"200\" />\n            <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': roleName.valid, 'fa-times' : !roleName.valid}\" aria-hidden=\"true\"></i>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-sm-7\">\n        <div class=\"form-group row\">\n          <label class=\"col-form-label col-md-3\" for=\"roleDescription\">{{'roles.editor.Description' | translate}}</label>\n          <div class=\"col-md-9\">\n            <input [disabled]=\"!canManageRoles\" type=\"text\" id=\"roleDescription\" name=\"roleDescription\" placeholder=\"Enter role description\" class=\"form-control\" [(ngModel)]=\"roleEdit.description\" />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <span *ngIf=\"showValidationErrors && f.submitted && !roleName.valid\" class=\"invalid-feedback\">\n          {{'roles.editor.RoleNameRequired' | translate}}\n        </span>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <hr class=\"edit-separator-hr\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-sm-12 card card-body bg-light well-sm permissionsRow\">\n        <div class=\"row\">\n\n          <ng-template ngFor let-permissionGroup [ngForOf]=\"allPermissions | groupBy: 'groupName'\" let-i=\"index\">\n            <div class=\"form-group row col-sm-6 permissionsColumn\">\n              <label class=\"col-md-5 col-form-label group-name\" for=\"checkboxes\" (click)=\"toggleGroup(permissionGroup.key)\">{{permissionGroup.key}}</label>\n              <div class=\"col-md-7\">\n                <div class=\"form-check\" *ngFor=\"let permission of permissionGroup.value\">\n                  <input [disabled]=\"!canManageRoles\" name=\"checkboxes-{{permission.value}}\" id=\"checkboxes-{{permission.value}}\" type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"selectedValues[permission.value]\">\n                  <label class=\"form-check-label\" tooltip=\"{{permission.description}}\" for=\"checkboxes-{{permission.value}}\">{{permission.name}}</label>\n                </div>\n              </div>\n            </div>\n            <div *ngIf=\"(i + 1) % 2 === 0\" class=\"clearfix\"></div>\n          </ng-template>\n\n        </div>\n      </div>\n\n    </div>\n\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <hr class=\"edit-last-separator-hr\" />\n      </div>\n    </div>\n\n\n    <div class=\"form-group row\">\n      <div class=\"col-sm-5\">\n        <div *ngIf=\"canManageRoles\" class=\"float-left\">\n          <a (click)=\"selectAll()\" href=\"javascript:;\" class=\"btn btn-link\">{{'roles.editor.SelectAll' | translate}}</a>|<a (click)=\"selectNone()\" href=\"javascript:;\" class=\"btn btn-link\">{{'roles.editor.SelectNone' | translate}}</a>\n        </div>\n      </div>\n\n      <div class=\"col-sm-7\">\n        <div ngPreserveWhitespaces class=\"float-right\">\n          <button *ngIf=\"!canManageRoles\" type=\"button\" (click)=\"cancel()\" class=\"btn btn-outline-secondary\">{{'roles.editor.Close' | translate}}</button>\n          <button *ngIf=\"canManageRoles\" type=\"button\" (click)=\"cancel()\" class=\"btn btn-danger\" [disabled]=\"isSaving\"><i class='fa fa-times'></i> {{'roles.editor.Cancel' | translate}}</button>\n          <button *ngIf=\"canManageRoles\" type=\"submit\" class=\"btn btn-primary\" [disabled]=\"isSaving\">\n            <i *ngIf=\"!isSaving\" class='fa fa-save'></i><i *ngIf=\"isSaving\" class='fa fa-circle-o-notch fa-spin'></i> {{isSaving ? ('roles.editor.Saving' | translate) : ('roles.editor.Save' | translate)}}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"clearfix\"></div>\n  </form>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, ViewChild } from '@angular/core';\n\nimport {\n    MessageSeverity\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission\n} from '@polpware/ngx-oauth2';\n\n\nimport { AccountService } from '../../services/account.service';\nimport { Role } from '../../models/role.model';\n\n@Component({\n    selector: 'role-editor',\n    templateUrl: './role-editor.component.html',\n    styleUrls: ['./role-editor.component.scss']\n})\nexport class RoleEditorComponent {\n\n    private isNewRole = false;\n    public isSaving: boolean;\n    public showValidationErrors = true;\n    public roleEdit: Role = new Role();\n    public allPermissions: Permission[] = [];\n    public selectedValues: { [key: string]: boolean; } = {};\n    private editingRoleName: string;\n\n    public formResetToggle = true;\n\n    public changesSavedCallback: () => void;\n    public changesFailedCallback: () => void;\n    public changesCancelledCallback: () => void;\n\n\n    @ViewChild('f', { static: false })\n    private form;\n\n\n\n    constructor(private alertService: AlertService, private accountService: AccountService) {\n    }\n\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n\n    save() {\n        this.isSaving = true;\n        this.alertService.startLoadingMessage('Saving changes...');\n\n        this.roleEdit.permissions = this.getSelectedPermissions();\n\n        if (this.isNewRole) {\n            this.accountService.newRole(this.roleEdit).subscribe(role => this.saveSuccessHelper(role), error => this.saveFailedHelper(error));\n        } else {\n            this.accountService.updateRole(this.roleEdit).subscribe(response => this.saveSuccessHelper(), error => this.saveFailedHelper(error));\n        }\n    }\n\n\n\n\n    private saveSuccessHelper(role?: Role) {\n        if (role) {\n            Object.assign(this.roleEdit, role);\n        }\n\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.showValidationErrors = false;\n\n        if (this.isNewRole) {\n            this.alertService.showMessage('Success', `Role \\\"${this.roleEdit.name}\\\" was created successfully`, MessageSeverity.success);\n        } else {\n            this.alertService.showMessage('Success', `Changes to role \\\"${this.roleEdit.name}\\\" was saved successfully`, MessageSeverity.success);\n        }\n\n\n        this.roleEdit = new Role();\n        this.resetForm();\n\n\n        if (!this.isNewRole && this.accountService.currentUser.roles.some(r => r == this.editingRoleName)) {\n            this.refreshLoggedInUser();\n        }\n\n        if (this.changesSavedCallback) {\n            this.changesSavedCallback();\n        }\n    }\n\n\n    private refreshLoggedInUser() {\n        this.accountService.refreshLoggedInUser()\n            .subscribe(user => { },\n                error => {\n                    this.alertService.resetStickyMessage();\n                    this.alertService.showStickyMessage('Refresh failed', 'An error occured whilst refreshing logged in user information from the server', MessageSeverity.error, error);\n                });\n    }\n\n\n\n    private saveFailedHelper(error: any) {\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.alertService.showStickyMessage('Save Error', 'The below errors occured whilst saving your changes:', MessageSeverity.error, error);\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\n\n        if (this.changesFailedCallback) {\n            this.changesFailedCallback();\n        }\n    }\n\n\n    cancel() {\n        this.roleEdit = new Role();\n\n        this.showValidationErrors = false;\n        this.resetForm();\n\n        this.alertService.showMessage('Cancelled', 'Operation cancelled by user', MessageSeverity.default);\n        this.alertService.resetStickyMessage();\n\n        if (this.changesCancelledCallback) {\n            this.changesCancelledCallback();\n        }\n    }\n\n\n\n    selectAll() {\n        this.allPermissions.forEach(p => this.selectedValues[p.value] = true);\n    }\n\n\n    selectNone() {\n        this.allPermissions.forEach(p => this.selectedValues[p.value] = false);\n    }\n\n\n    toggleGroup(groupName: string) {\n        let firstMemberValue: boolean;\n\n        this.allPermissions.forEach(p => {\n            if (p.groupName != groupName) {\n                return;\n            }\n\n            if (firstMemberValue == null) {\n                firstMemberValue = this.selectedValues[p.value] == true;\n            }\n\n            this.selectedValues[p.value] = !firstMemberValue;\n        });\n    }\n\n\n    private getSelectedPermissions() {\n        return this.allPermissions.filter(p => this.selectedValues[p.value] == true);\n    }\n\n\n    resetForm(replace = false) {\n\n        if (!replace) {\n            this.form.reset();\n        } else {\n            this.formResetToggle = false;\n\n            setTimeout(() => {\n                this.formResetToggle = true;\n            });\n        }\n    }\n\n\n    newRole(allPermissions: Permission[]) {\n        this.isNewRole = true;\n        this.showValidationErrors = true;\n\n        this.editingRoleName = null;\n        this.allPermissions = allPermissions;\n        this.selectedValues = {};\n        this.roleEdit = new Role();\n\n        return this.roleEdit;\n    }\n\n    editRole(role: Role, allPermissions: Permission[]) {\n        if (role) {\n            this.isNewRole = false;\n            this.showValidationErrors = true;\n\n            this.editingRoleName = role.name;\n            this.allPermissions = allPermissions;\n            this.selectedValues = {};\n            role.permissions.forEach(p => this.selectedValues[p.value] = true);\n            this.roleEdit = new Role();\n            Object.assign(this.roleEdit, role);\n\n            return this.roleEdit;\n        } else {\n            return this.newRole(allPermissions);\n        }\n    }\n\n\n\n    get canManageRoles() {\n        return this.accountService.userHasPermission(Permission.manageRolesPermission);\n    }\n}\n","<div>\n  <div class=\"row control-box\">\n    <div class=\"col-lg-8\">\n      <div class=\"form-group search-box\">\n        <search-box (searchChange)=\"onSearchChanged($event)\" placeholder=\"{{'roles.management.Search' | translate}}\">></search-box>\n      </div>\n    </div>\n    <div class=\"col-lg-4 pr-lg-5\">\n      <ul class=\"nav flex-column flex-lg-row justify-content-end\">\n        <li *ngIf=\"canManageRoles\" class=\"nav-item toolbaritem\">\n          <a class=\"nav-link\" href=\"javascript:;\" (click)=\"newRole()\">\n            <i class=\"fa fa-plus-circle\"></i> {{'roles.management.NewRole' | translate}}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <ngx-datatable class=\"material colored-header sm table table-striped table-hover\"\n                 [loadingIndicator]=\"loadingIndicator\"\n                 [rows]=\"rows\"\n                 [rowHeight]=\"35\"\n                 [headerHeight]=\"35\"\n                 [footerHeight]=\"35\"\n                 [columns]=\"columns\"\n                 [scrollbarV]=\"true\"\n                 [columnMode]=\"'force'\">\n  </ngx-datatable>\n\n  <ng-template #indexTemplate let-value=\"value\">\n    <strong>{{value}}</strong>\n  </ng-template>\n\n\n  <ng-template #actionsTemplate let-row=\"row\" let-value=\"value\" let-i=\"index\">\n    <a *ngIf=\"canManageRoles\" class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"editRole(row)\"><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'roles.management.Edit' | translate}}</a>\n    <a *ngIf=\"!canManageRoles\" class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"editRole(row)\"><i class=\"fa fa-eye\" aria-hidden=\"true\"></i> {{'roles.management.Details' | translate}}</a>\n    {{canManageRoles ? '|' : ''}}\n    <a *ngIf=\"canManageRoles\" class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"deleteRole(row)\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i> {{'roles.management.Delete' | translate}}</a>\n  </ng-template>\n\n\n  <div class=\"modal fade\" bsModal #editorModal=\"bs-modal\" (onHidden)=\"onEditorModalHidden()\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h4 *ngIf=\"!canManageRoles\" class=\"modal-title float-left\"><i class=\"fa fa-shield\"></i> {{'roles.management.RoleDetails' | translate:editingRoleName}}</h4>\n          <h4 *ngIf=\"canManageRoles\" class=\"modal-title float-left\"><i class=\"fa fa-shield\"></i> {{editingRoleName ? ('roles.management.EditRole' | translate:editingRoleName) : ('roles.management.NewRole' | translate)}}</h4>\n          <button type=\"button\" class=\"close float-right\" title=\"Close\" (click)=\"editorModal.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <role-editor #roleEditor></role-editor>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, AfterViewInit, TemplateRef, ViewChild, Input } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\n\nimport {\n    AlertService,\n    AppTranslationService,\n    LocalStoreManager,\n    ConfigurationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission\n} from '@polpware/ngx-oauth2';\n\nimport { AccountService } from '../../services/account.service';\nimport { Role } from '../../models/role.model';\nimport { RoleEditorComponent } from '../role-editor/role-editor.component';\n\n\n@Component({\n    selector: 'roles-management',\n    templateUrl: './roles-management.component.html',\n    styleUrls: ['./roles-management.component.scss']\n})\nexport class RolesManagementComponent implements OnInit, AfterViewInit {\n    columns: any[] = [];\n    rows: Role[] = [];\n    rowsCache: Role[] = [];\n    allPermissions: Permission[] = [];\n    editedRole: Role;\n    sourceRole: Role;\n    editingRoleName: { name: string };\n    loadingIndicator: boolean;\n\n\n\n    @ViewChild('indexTemplate', { static: true })\n    indexTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    @ViewChild('editorModal', { static: true })\n    editorModal: ModalDirective;\n\n    @ViewChild('roleEditor', { static: true })\n    roleEditor: RoleEditorComponent;\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService) {\n    }\n\n\n    ngOnInit() {\n\n        const gT = (key: string) => this.translationService.getTranslation(key);\n\n        this.columns = [\n            { prop: 'index', name: '#', width: 50, cellTemplate: this.indexTemplate, canAutoResize: false },\n            { prop: 'name', name: gT('roles.management.Name'), width: 180 },\n            { prop: 'description', name: gT('roles.management.Description'), width: 320 },\n            { prop: 'usersCount', name: gT('roles.management.Users'), width: 50 },\n            { name: '', width: 160, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\n        ];\n\n        this.loadData();\n    }\n\n\n\n\n\n    ngAfterViewInit() {\n\n        this.roleEditor.changesSavedCallback = () => {\n            this.addNewRoleToList();\n            this.editorModal.hide();\n        };\n\n        this.roleEditor.changesCancelledCallback = () => {\n            this.editedRole = null;\n            this.sourceRole = null;\n            this.editorModal.hide();\n        };\n    }\n\n\n    addNewRoleToList() {\n        if (this.sourceRole) {\n            Object.assign(this.sourceRole, this.editedRole);\n\n            let sourceIndex = this.rowsCache.indexOf(this.sourceRole, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rowsCache, sourceIndex, 0);\n            }\n\n            sourceIndex = this.rows.indexOf(this.sourceRole, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rows, sourceIndex, 0);\n            }\n\n            this.editedRole = null;\n            this.sourceRole = null;\n        } else {\n            const role = new Role();\n            Object.assign(role, this.editedRole);\n            this.editedRole = null;\n\n            let maxIndex = 0;\n            for (const r of this.rowsCache) {\n                if ((r as any).index > maxIndex) {\n                    maxIndex = (r as any).index;\n                }\n            }\n\n            (role as any).index = maxIndex + 1;\n\n            this.rowsCache.splice(0, 0, role);\n            this.rows.splice(0, 0, role);\n            this.rows = [...this.rows];\n        }\n    }\n\n\n\n\n    loadData() {\n        this.alertService.startLoadingMessage();\n        this.loadingIndicator = true;\n\n        this.accountService.getRolesAndPermissions()\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                const roles = results[0];\n                const permissions = results[1];\n\n                roles.forEach((role, index, roles) => {\n                    (role as any).index = index + 1;\n                });\n\n\n                this.rowsCache = [...roles];\n                this.rows = roles;\n\n                this.allPermissions = permissions;\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Load Error', `Unable to retrieve roles from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    onSearchChanged(value: string) {\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.name, r.description));\n    }\n\n\n    onEditorModalHidden() {\n        this.editingRoleName = null;\n        this.roleEditor.resetForm(true);\n    }\n\n\n    newRole() {\n        this.editingRoleName = null;\n        this.sourceRole = null;\n        this.editedRole = this.roleEditor.newRole(this.allPermissions);\n        this.editorModal.show();\n    }\n\n\n    editRole(row: Role) {\n        this.editingRoleName = { name: row.name };\n        this.sourceRole = row;\n        this.editedRole = this.roleEditor.editRole(row, this.allPermissions);\n        this.editorModal.show();\n    }\n\n    deleteRole(row: Role) {\n        this.alertService.showDialog('Are you sure you want to delete the \\\"' + row.name + '\\\" role?', DialogType.confirm, () => this.deleteRoleHelper(row));\n    }\n\n\n    deleteRoleHelper(row: Role) {\n\n        this.alertService.startLoadingMessage('Deleting...');\n        this.loadingIndicator = true;\n\n        this.accountService.deleteRole(row)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                this.rowsCache = this.rowsCache.filter(item => item !== row);\n                this.rows = this.rows.filter(item => item !== row);\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the role.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    get canManageRoles() {\n        return this.accountService.userHasPermission(Permission.manageRolesPermission);\n    }\n\n}\n","<div>\n    <div class=\"row control-box\">\n        <div class=\"col-lg-8\">\n            <div class=\"form-group search-box\">\n                <search-box (searchChange)=\"onSearchChanged($event)\" placeholder=\"{{'todoDemo.management.Search' | translate}}\"></search-box>\n            </div>\n        </div>\n        <div class=\"col-lg-4\">\n            <ul class=\"nav flex-column flex-lg-row\">\n                <li [class.active]=\"hideCompletedTasks\" class=\"nav-item toolbaritem\">\n                    <a class=\"nav-link\" href=\"javascript:;\" (click)=\"hideCompletedTasks = !hideCompletedTasks\"><i class=\"fa fa-eye-slash\"></i> {{'todoDemo.management.HideCompleted' | translate}}</a>\n                </li>\n                <li class=\"nav-item toolbaritem\">\n                    <a class=\"nav-link\" href=\"javascript:;\" (click)=\"addTask()\"><i class=\"fa fa-plus\"></i> {{'todoDemo.management.AddTask' | translate}}</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <ngx-datatable class=\"material colored-header sm table-hover\"\n                   [loadingIndicator]=\"loadingIndicator\"\n                   [rows]=\"rows\"\n                   [rowHeight]=\"35\"\n                   [headerHeight]=\"35\"\n                   [footerHeight]=\"35\"\n                   [columns]=\"columns\"\n                   [scrollbarV]=\"verticalScrollbar\"\n                   [columnMode]=\"'force'\">\n    </ngx-datatable>\n\n    <ng-template #statusHeaderTemplate>\n        <i class=\"fa fa-check-square-o\"></i>\n    </ng-template>\n\n    <ng-template #statusTemplate let-row=\"row\" let-value=\"value\">\n        <div class=\"form-check\">\n            <input class=\"form-check-input\" attr.name=\"checkboxes-{{value}}\" type=\"checkbox\" [(ngModel)]=\"row.completed\">\n            <label class=\"form-check-label\"></label>\n        </div>\n    </ng-template>\n\n    <ng-template #nameTemplate let-row=\"row\" let-value=\"value\">\n        <span *ngIf=\"!editing[row.$$index + '-name']\" class=\"inline-label\" [class.completed]=\"row.completed\" attr.title=\"Double click to edit - {{value}}\" (dblclick)=\"editing[row.$$index + '-name'] = true\">\n            {{value}}\n        </span>\n        <input *ngIf=\"editing[row.$$index + '-name']\" class=\"inline-editor\" autofocus (blur)=\"updateValue($event, 'name', value, row)\" type=\"text\" [value]=\"value\" />\n    </ng-template>\n\n    <ng-template #descriptionTemplate let-row=\"row\" let-value=\"value\">\n        <span *ngIf=\"!editing[row.$$index + '-description']\" class=\"inline-label\" [class.completed]=\"row.completed\" attr.title=\"Double click to edit - {{value}}\" (dblclick)=\"editing[row.$$index + '-description'] = true\">\n            {{value}}\n        </span>\n        <input *ngIf=\"editing[row.$$index + '-description']\" class=\"inline-editor\" autofocus (blur)=\"updateValue($event, 'description', value, row)\" type=\"text\" [value]=\"value\" />\n    </ng-template>\n\n\n    <ng-template #actionsTemplate let-row=\"row\">\n        <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" tooltip=\"{{'todoDemo.management.Delete' | translate}}\" container=\"body\" (click)=\"delete(row)\"><i class=\"fa fa-times\"></i></a>\n        <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" tooltip=\"{{'todoDemo.management.Important' | translate}}\" container=\"body\" (click)=\"row.important = !row.important\" (mouseover)=\"row.isMouseOver=true\" (mouseout)=\"row.isMouseOver=false\">\n            <i *ngIf=\"row.important || row.isMouseOver\" class=\"fa fa-bookmark\"></i>\n            <i *ngIf=\"!row.important && !row.isMouseOver\" class=\"fa fa-bookmark-o\"></i>\n        </a>\n    </ng-template>\n\n\n\n\n\n    <div class=\"modal fade\" bsModal #editorModal=\"bs-modal\" tabindex=\"-1\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title float-left\"><i class=\"fa fa-tasks\"></i> {{'todoDemo.editor.NewTask' | translate}}</h4>\n                    <button type=\"button\" class=\"close\" title=\"Close\" (click)=\"editorModal.hide()\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <form *ngIf=\"formResetToggle\" name=\"taskEditorForm\" #f=\"ngForm\" novalidate\n                          (ngSubmit)=\"f.form.valid ? save() :\n                      (!taskName.valid && showErrorAlert('Task name is required', 'Please enter a name for the task'));\">\n\n\n                        <div class=\"form-group row has-feedback-icon\">\n                            <label class=\"col-form-label col-md-3\" for=\"taskName\">{{'todoDemo.editor.Name' | translate}}:</label>\n                            <div class=\"col-md-9\">\n                                <input autofocus type=\"text\" id=\"taskName\" name=\"taskName\" placeholder=\"Enter task name\" class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && taskName.valid, 'is-invalid' : f.submitted && !taskName.valid}\"\n                                       [(ngModel)]=\"taskEdit.name\" #taskName=\"ngModel\" required />\n                                <i *ngIf=\"f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': taskName.valid, 'fa-times' : !taskName.valid}\" aria-hidden=\"true\"></i>\n                                <span *ngIf=\"f.submitted && !taskName.valid\" class=\"invalid-feedback\">\n                                    {{'todoDemo.editor.TaskNameRequired' | translate}}\n                                </span>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row description-form-group\">\n                            <label class=\"col-form-label col-md-3\" for=\"taskDescription\">{{'todoDemo.editor.Description' | translate}}:</label>\n                            <div class=\"col-md-9\">\n                                <input type=\"text\" id=\"taskDescription\" name=\"taskDescription\" placeholder=\"Enter task description\" class=\"form-control\" [(ngModel)]=\"taskEdit.description\" />\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <label class=\"col-form-label col-md-3\"> </label>\n                            <div class=\"col-md-9\">\n                                <div class=\"form-check\">\n                                    <input class=\"form-check-input\" id=\"isImportant\" name=\"isImportant\" type=\"checkbox\" [(ngModel)]=\"taskEdit.important\">\n                                    <label for=\"isImportant\" class=\"form-check-label\">{{'todoDemo.editor.Important' | translate}}</label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <hr class=\"edit-last-separator-hr\" />\n                            </div>\n                        </div>\n\n\n                        <div class=\"form-group actionBtn-form-group\">\n                            <div class=\"float-right\">\n                                <button type=\"submit\" class=\"btn btn-primary\">{{'todoDemo.editor.AddTask' | translate}}</button>\n                            </div>\n                        </div>\n                        <div class=\"clearfix\"></div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService,\n    LocalStoreManager\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    AuthService,\n    Permission,\n} from '@polpware/ngx-oauth2';\n\n\n@Component({\n    selector: 'todo-demo',\n    templateUrl: './todo-demo.component.html',\n    styleUrls: ['./todo-demo.component.scss']\n})\nexport class TodoDemoComponent implements OnInit, OnDestroy {\n    public static readonly DBKeyTodoDemo = 'todo-demo.todo_list';\n\n    rows = [];\n    rowsCache = [];\n    columns = [];\n    editing = {};\n    taskEdit: any = {};\n    isDataLoaded = false;\n    loadingIndicator = true;\n    formResetToggle = true;\n    _currentUserId: string;\n    _hideCompletedTasks = false;\n\n\n    get currentUserId() {\n        if (this.authService.currentUser) {\n            this._currentUserId = this.authService.currentUser.id;\n        }\n\n        return this._currentUserId;\n    }\n\n\n    set hideCompletedTasks(value: boolean) {\n\n        if (value) {\n            this.rows = this.rowsCache.filter(r => !r.completed);\n        } else {\n            this.rows = [...this.rowsCache];\n        }\n\n\n        this._hideCompletedTasks = value;\n    }\n\n    get hideCompletedTasks() {\n        return this._hideCompletedTasks;\n    }\n\n\n    @Input()\n    verticalScrollbar = false;\n\n\n    @ViewChild('statusHeaderTemplate', { static: true })\n    statusHeaderTemplate: TemplateRef<any>;\n\n    @ViewChild('statusTemplate', { static: true })\n    statusTemplate: TemplateRef<any>;\n\n    @ViewChild('nameTemplate', { static: true })\n    nameTemplate: TemplateRef<any>;\n\n    @ViewChild('descriptionTemplate', { static: true })\n    descriptionTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    @ViewChild('editorModal', { static: true })\n    editorModal: ModalDirective;\n\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private localStorage: LocalStoreManager, private authService: AuthService) {\n    }\n\n\n\n    ngOnInit() {\n        this.loadingIndicator = true;\n\n        this.fetch((data) => {\n            this.refreshDataIndexes(data);\n            this.rows = data;\n            this.rowsCache = [...data];\n            this.isDataLoaded = true;\n\n            setTimeout(() => { this.loadingIndicator = false; }, 1500);\n        });\n\n\n        const gT = (key: string) => this.translationService.getTranslation(key);\n\n        this.columns = [\n            { prop: 'completed', name: '', width: 30, headerTemplate: this.statusHeaderTemplate, cellTemplate: this.statusTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\n            { prop: 'name', name: gT('todoDemo.management.Task'), cellTemplate: this.nameTemplate, width: 200 },\n            { prop: 'description', name: gT('todoDemo.management.Description'), cellTemplate: this.descriptionTemplate, width: 500 },\n            { name: '', width: 80, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\n        ];\n    }\n\n    ngOnDestroy() {\n        this.saveToDisk();\n    }\n\n\n\n    fetch(cb) {\n        let data = this.getFromDisk();\n\n        if (data == null) {\n            setTimeout(() => {\n\n                data = this.getFromDisk();\n\n                if (data == null) {\n                    data = [\n                        { completed: true, important: true, name: 'Create visual studio extension', description: 'Create a visual studio VSIX extension package that will add this project as an aspnet-core project template' },\n                        { completed: false, important: true, name: 'Do a quick how-to writeup', description: '' },\n                        {\n                            completed: false, important: false, name: 'Create aspnet-core/Angular8 tutorials based on this project', description: 'Create tutorials (blog/video/youtube) on how to build applications (full stack)' +\n                                ' using aspnet-core/Angular8. The tutorial will focus on getting productive with the technology right away rather than the details on how and why they work so audience can get onboard quickly.'\n                        },\n                    ];\n                }\n\n                cb(data);\n            }, 1000);\n        } else {\n            cb(data);\n        }\n    }\n\n\n    refreshDataIndexes(data) {\n        let index = 0;\n\n        for (const i of data) {\n            i.$$index = index++;\n        }\n    }\n\n\n    onSearchChanged(value: string) {\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.name, r.description) || value == 'important' && r.important || value == 'not important' && !r.important);\n    }\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n\n    addTask() {\n        this.formResetToggle = false;\n\n        setTimeout(() => {\n            this.formResetToggle = true;\n\n            this.taskEdit = {};\n            this.editorModal.show();\n        });\n    }\n\n    save() {\n        this.rowsCache.splice(0, 0, this.taskEdit);\n        this.rows.splice(0, 0, this.taskEdit);\n        this.refreshDataIndexes(this.rowsCache);\n        this.rows = [...this.rows];\n\n        this.saveToDisk();\n        this.editorModal.hide();\n    }\n\n\n    updateValue(event, cell, cellValue, row) {\n        this.editing[row.$$index + '-' + cell] = false;\n        this.rows[row.$$index][cell] = event.target.value;\n        this.rows = [...this.rows];\n\n        this.saveToDisk();\n    }\n\n\n    delete(row) {\n        this.alertService.showDialog('Are you sure you want to delete the task?', DialogType.confirm, () => this.deleteHelper(row));\n    }\n\n\n    deleteHelper(row) {\n        this.rowsCache = this.rowsCache.filter(item => item !== row);\n        this.rows = this.rows.filter(item => item !== row);\n\n        this.saveToDisk();\n    }\n\n    getFromDisk() {\n        return this.localStorage.getDataObject(`${TodoDemoComponent.DBKeyTodoDemo}:${this.currentUserId}`);\n    }\n\n    saveToDisk() {\n        if (this.isDataLoaded) {\n            this.localStorage.saveSyncedSessionData(this.rowsCache, `${TodoDemoComponent.DBKeyTodoDemo}:${this.currentUserId}`);\n        }\n    }\n}\n","<div class=\"row statistics-container\">\n  <div class=\"col-md-6\">\n    <div class=\"chart-container\">\n      <canvas baseChart width=\"600\" height=\"250\"\n              [datasets]=\"chartData\"\n              [labels]=\"chartLabels\"\n              [options]=\"chartOptions\"\n              [colors]=\"chartColors\"\n              [legend]=\"chartLegend\"\n              [chartType]=\"chartType\"\n              (chartHover)=\"chartHovered($event)\"\n              (chartClick)=\"chartClicked($event)\"></canvas>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <div class=\"d-none d-sm-block table-responsive\">\n      <table class=\"table table-sm\">\n        <thead>\n          <tr>\n            <th class=\"border-top-0\"></th>\n            <th class=\"border-top-0\" *ngFor=\"let label of chartLabels\">{{label}}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let d of chartData\">\n            <th>{{d && d.label.split(' ').pop()}}</th>\n            <td *ngFor=\"let label of chartLabels; let j=index\">{{d && d.data[j]}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <button class=\"refresh-btn\" (click)=\"randomize();showMessage('Manual refresh!');\">REFSH</button>\n    <div class=\"chart-type-container\" dropdown>\n      <button id=\"chartType\" type=\"button\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-bar-chart\"></i></button>\n      <ul class=\"dropdown-menu\">\n        <li [class.active]=\"chartType == 'bar'\">\n          <a class=\"dropdown-item\" (click)=\"changeChartType('bar')\" href=\"javascript:;\">Bar Chart</a>\n        </li>\n        <li [class.active]=\"chartType == 'pie'\">\n          <a class=\"dropdown-item\" (click)=\"changeChartType('pie')\" href=\"javascript:;\">Pie Chart</a>\n        </li>\n        <li [class.active]=\"chartType == 'doughnut'\">\n          <a class=\"dropdown-item\" (click)=\"changeChartType('doughnut')\" href=\"javascript:;\">Doughnut Chart</a>\n        </li>\n        <li [class.active]=\"chartType == 'polarArea'\">\n          <a class=\"dropdown-item\" (click)=\"changeChartType('polarArea')\" href=\"javascript:;\">Polar Area Chart</a>\n        </li>\n        <li [class.active]=\"chartType == 'radar'\">\n          <a class=\"dropdown-item\" (click)=\"changeChartType('radar')\" href=\"javascript:;\">Radar Chart</a>\n        </li>\n        <li class=\"dropdown-divider\"></li>\n        <li [class.active]=\"chartType == 'line'\">\n          <a class=\"dropdown-item\" (click)=\"changeChartType('line')\" href=\"javascript:;\">Line Chart</a>\n        </li>\n      </ul>\n    </div>\n    <button (click)=\"showMessage('You\\'ve clicked on the menu')\"><i class=\"fa fa-bars\"></i></button>\n    <button (click)=\"showDialog('Enter some value to do serious configuration...')\"><i class=\"fa fa-cogs\"></i></button>\n  </div>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription, Observable, fromEvent, of, merge } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nimport {\n    DialogType, MessageSeverity\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\n\nrequire('chart.js');\n\n\n\n@Component({\n    selector: 'statistics-demo',\n    templateUrl: './statistics-demo.component.html',\n    styleUrls: ['./statistics-demo.component.scss']\n})\nexport class StatisticsDemoComponent implements OnInit, OnDestroy {\n\n    chartData = [\n        { data: [65, 59, 80, 81, 56, 55], label: 'Series A' },\n        { data: [28, 48, 40, 19, 86, 27], label: 'Series B' },\n        { data: [18, 48, 77, 9, 100, 27], label: 'Series C' }\n    ];\n    chartLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n    chartOptions = {\n        responsive: true,\n        title: {\n            display: false,\n            fontSize: 16,\n            text: 'Important Stuff'\n        }\n    };\n    chartColors = [\n        { // grey\n            backgroundColor: 'rgba(148,159,177,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        },\n        { // dark grey\n            backgroundColor: 'rgba(77,83,96,0.2)',\n            borderColor: 'rgba(77,83,96,1)',\n            pointBackgroundColor: 'rgba(77,83,96,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(77,83,96,1)'\n        },\n        { // something else\n            backgroundColor: 'rgba(128,128,128,0.2)',\n            borderColor: 'rgba(128,128,128,1)',\n            pointBackgroundColor: 'rgba(128,128,128,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(128,128,128,0.8)'\n        }\n    ];\n    chartLegend = true;\n    chartType = 'line';\n\n    timerReference: any;\n    windowWidth$: Observable<number>;\n    windowWidthSub: Subscription;\n\n\n    constructor(private alertService: AlertService) {\n\n    }\n\n\n    ngOnInit() {\n        this.timerReference = setInterval(() => this.randomize(), 5000);\n\n        const initialWidth$ = of(window.innerWidth);\n        const resizedWidth$ = fromEvent(window, 'resize').pipe(map((event: any) => event.target.innerWidth as number));\n        this.windowWidth$ = merge(initialWidth$, resizedWidth$).pipe(distinctUntilChanged());\n\n        this.windowWidthSub = this.windowWidth$.subscribe(width => this.chartLegend = width < 600 ? false : true);\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.timerReference);\n        this.windowWidthSub.unsubscribe();\n    }\n\n\n\n    randomize(): void {\n        const _chartData = new Array(this.chartData.length);\n        for (let i = 0; i < this.chartData.length; i++) {\n            _chartData[i] = { data: new Array(this.chartData[i].data.length), label: this.chartData[i].label };\n\n            for (let j = 0; j < this.chartData[i].data.length; j++) {\n                _chartData[i].data[j] = Math.floor((Math.random() * 100) + 1);\n            }\n        }\n\n        this.chartData = _chartData;\n    }\n\n    changeChartType(type: string) {\n        this.chartType = type;\n    }\n\n    showMessage(msg: string): void {\n        this.alertService.showMessage('Demo', msg, MessageSeverity.info);\n    }\n\n    showDialog(msg: string): void {\n        this.alertService.showDialog(msg, DialogType.prompt, (val) => this.configure(true, val), () => this.configure(false));\n    }\n\n    configure(response: boolean, value?: string) {\n\n        if (response) {\n\n            this.alertService.showStickyMessage('Simulating...', '', MessageSeverity.wait);\n\n            setTimeout(() => {\n\n                this.alertService.resetStickyMessage();\n                this.alertService.showMessage('Demo', `Your settings was successfully configured to \\\"${value}\\\"`, MessageSeverity.success);\n            }, 2000);\n        } else {\n            this.alertService.showMessage('Demo', 'Operation cancelled by user', MessageSeverity.default);\n        }\n    }\n\n    chartClicked(e): void {\n        console.log(e);\n    }\n\n    chartHovered(e): void {\n        console.log(e);\n    }\n}\n","<div class=\"container settings-page\">\n    <header class=\"pageHeader\">\n        <h3><i class=\"fa fa-cog fa-lg page-caption\" aria-hidden=\"true\"></i> {{'pageHeader.Settings' | translate}}</h3>\n    </header>\n\n    <div [@fadeInOut]>\n        <div class=\"d-sm-flex flex-row\">\n            <ul bootstrapTab #tab=\"bootstrap-tab\" (showBSTab)=\"onShowTab($event)\" class=\"nav nav-tabs nav-tabs--vertical nav-tabs--left\" role=\"navigation\">\n                <li class=\"nav-item\">\n                    <a id=\"profileTab\" [routerLink]=\"[]\" fragment=\"profile\" data-target=\"#profile\" href=\"#profile\" class=\"nav-link active\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"profile\">\n                        <i class=\"fa fa-user-circle-o fa-fw\" aria-hidden=\"true\"></i> {{'settings.tab.Profile' | translate}}\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a id=\"preferencesTab\" [routerLink]=\"[]\" fragment=\"preferences\" data-target=\"#preferences\" href=\"#preferences\" class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"preferences\">\n                        <i class=\"fa fa-sliders fa-fw\" aria-hidden=\"true\"></i> {{'settings.tab.Preferences' | translate}}\n                    </a>\n                </li>\n            </ul>\n            <div class=\"tab-content w-100\">\n                <div class=\"tab-pane show active\" id=\"profile\" role=\"tabpanel\">\n                    <h4>{{'settings.header.UserProfile' | translate}}</h4>\n                    <hr class=\"separator-hr\" />\n                    <div [@fadeInOut] *ngIf=\"isProfileActivated\" class=\"content-container pl-lg-2\">\n                        <user-info></user-info>\n                    </div>\n\n                </div>\n                <div class=\"tab-pane\" id=\"preferences\" role=\"tabpanel\">\n                    <h4>{{'settings.header.UserPreferences' | translate}}</h4>\n                    <hr class=\"separator-hr\" />\n                    <div [@fadeInOut] *ngIf=\"isPreferencesActivated\" class=\"content-container pl-lg-2\">\n                        <user-preferences></user-preferences>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\n\nimport { Permission } from '@polpware/ngx-oauth2';\n\nimport { fadeInOut } from '../../services/animations';\nimport { BootstrapTabDirective } from '../../directives/bootstrap-tab.directive';\nimport { AccountService } from '../../services/account.service';\n\n\n@Component({\n    selector: 'settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.scss'],\n    animations: [fadeInOut]\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n\n    isProfileActivated = true;\n    isPreferencesActivated = false;\n    isUsersActivated = false;\n    isRolesActivated = false;\n\n    fragmentSubscription: any;\n\n    readonly profileTab = 'profile';\n    readonly preferencesTab = 'preferences';\n    readonly usersTab = 'users';\n    readonly rolesTab = 'roles';\n\n\n    @ViewChild('tab', { static: true })\n    tab: BootstrapTabDirective;\n\n\n    constructor(private router: Router, private route: ActivatedRoute, private accountService: AccountService) {\n    }\n\n\n    ngOnInit() {\n        this.fragmentSubscription = this.route.fragment.subscribe(anchor => this.showContent(anchor));\n    }\n\n\n    ngOnDestroy() {\n        this.fragmentSubscription.unsubscribe();\n    }\n\n    showContent(anchor: string) {\n        if (anchor) {\n            anchor = anchor.toLowerCase();\n        }\n\n        if ((this.isFragmentEquals(anchor, this.usersTab) && !this.canViewUsers) ||\n            (this.isFragmentEquals(anchor, this.rolesTab) && !this.canViewRoles)) {\n            return;\n        }\n\n        this.tab.show(`#${anchor || this.profileTab}Tab`);\n    }\n\n\n    isFragmentEquals(fragment1: string, fragment2: string) {\n\n        if (fragment1 == null) {\n            fragment1 = '';\n        }\n\n        if (fragment2 == null) {\n            fragment2 = '';\n        }\n\n        return fragment1.toLowerCase() == fragment2.toLowerCase();\n    }\n\n\n    onShowTab(event) {\n        const activeTab = event.target.hash.split('#', 2).pop();\n\n        this.isProfileActivated = activeTab == this.profileTab;\n        this.isPreferencesActivated = activeTab == this.preferencesTab;\n        this.isUsersActivated = activeTab == this.usersTab;\n        this.isRolesActivated = activeTab == this.rolesTab;\n\n        this.router.navigate([], { fragment: activeTab });\n    }\n\n\n    get canViewUsers() {\n        return this.accountService.userHasPermission(Permission.viewUsersPermission);\n    }\n\n    get canViewRoles() {\n        return this.accountService.userHasPermission(Permission.viewRolesPermission);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component } from '@angular/core';\nimport { fadeInOut } from '../../services/animations';\n\n@Component({\n    selector: 'not-found',\n    templateUrl: './not-found.component.html',\n    styleUrls: ['./not-found.component.scss'],\n    animations: [fadeInOut]\n})\nexport class NotFoundComponent {\n}\n","<header class=\"pageHeader\">\n    <h3><i class=\"fa fa-exclamation-circle fa-lg page-caption\" aria-hidden=\"true\"></i> {{'pageHeader.NotFound' | translate}}</h3>\n</header>\n\n<div [@fadeInOut] class=\"d-flex h-75\">\n    <div class=\"m-auto\">\n        <div class=\"icon-container\"><i class='fa fa-exclamation-circle'></i> {{'notFound.404' | translate}}</div>\n        <div class=\"text-muted error-description\">{{'notFound.pageNotFound' | translate}}</div>\n        <div><a class=\"btn btn-primary\" routerLink=\"/\"><i class='fa fa-home'></i> {{'notFound.backToHome' | translate}}</a></div>\n    </div>\n</div>\n","<div class=\"d-flex h-90\">\n  <div class=\"login-container m-auto\">\n    <div class=\"card boxshadow\">\n      <div class=\"card-header bg-primary dark text-white clearfix\">\n        <i class=\"fa fa-lock\" aria-hidden=\"true\"></i> Login\n        <button *ngIf=\"isModal\" type=\"button\" class=\"close float-right text-light\" aria-label=\"Close\" (click)=\"closeModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"col-md-8 offset-md-2\">\n          <form *ngIf=\"formResetToggle\" class=\"login\" name=\"loginForm\" #f=\"ngForm\" novalidate\n                (ngSubmit)=\"f.form.valid ? login() :\n                          (!username.valid && showErrorAlert('Username is required', 'Please enter a valid username'));\n                          (!password.valid && showErrorAlert('Password is required', 'Please enter a valid password'))\">\n            <div class=\"form-group row has-feedback-icon\">\n              <label class=\"col-form-label col-md-3\" for=\"login-username\">Username:</label>\n              <div class=\"col-md-9\">\n                <input type=\"text\" id=\"login-username\" name=\"username\" placeholder=\"Enter username\" autocomplete=\"username\" class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && username.valid, 'is-invalid' : f.submitted && !username.valid}\"\n                       [(ngModel)]=\"userLogin.userName\" #username=\"ngModel\" required />\n                <i *ngIf=\"f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': username.valid, 'fa-times' : !username.valid}\" aria-hidden=\"true\"></i>\n                <span class=\"invalid-feedback\" *ngIf=\"f.submitted && !username.valid\">\n                  Username is required\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group row has-feedback-icon\">\n              <label class=\"col-form-label col-md-3\" for=\"login-password\">Password:</label>\n              <div class=\"col-md-9\">\n                <input type=\"password\" id=\"login-password\" name=\"password\" placeholder=\"Enter password\" autocomplete=\"current-password\" class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && password.valid, 'is-invalid' : f.submitted && !password.valid}\"\n                       [(ngModel)]=\"userLogin.password\" #password=\"ngModel\" required />\n                <i *ngIf=\"f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': password.valid, 'fa-times' : !password.valid}\" aria-hidden=\"true\"></i>\n                <span class=\"invalid-feedback\" *ngIf=\"f.submitted && !password.valid\">\n                  Password is required\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <div class=\"offset-md-3 col-md-9\">\n                <div class=\"form-check\">\n                  <input type=\"checkbox\" class=\"form-check-input\" id=\"login-rememberme\" name=\"rememberMe\" [(ngModel)]=\"userLogin.rememberMe\">\n                  <label class=\"form-check-label\" for=\"login-rememberme\">Remember me</label>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <div class=\"offset-md-3 col-md-9\">\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"isLoading\">\n                  <i *ngIf=\"isLoading\" class='fa fa-circle-o-notch fa-spin'></i> {{isLoading ? 'Logging in...' : 'Login'}}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    ConfigurationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    AuthService,\n    Permission\n} from '@polpware/ngx-oauth2';\n\nimport { UserLogin } from '../../models/user-login.model';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit, OnDestroy {\n\n    userLogin = new UserLogin();\n    isLoading = false;\n    formResetToggle = true;\n    modalClosedCallback: () => void;\n    loginStatusSubscription: any;\n\n    @Input()\n    isModal = false;\n\n\n    constructor(private alertService: AlertService, private authService: AuthService, private configurations: ConfigurationService) {\n\n    }\n\n\n    ngOnInit() {\n\n        this.userLogin.rememberMe = this.authService.rememberMe;\n\n        if (this.getShouldRedirect()) {\n            this.authService.redirectLoginUser();\n        } else {\n            this.loginStatusSubscription = this.authService.getLoginStatusEvent().subscribe(isLoggedIn => {\n                if (this.getShouldRedirect()) {\n                    this.authService.redirectLoginUser();\n                }\n            });\n        }\n    }\n\n\n    ngOnDestroy() {\n        if (this.loginStatusSubscription) {\n            this.loginStatusSubscription.unsubscribe();\n        }\n    }\n\n\n    getShouldRedirect() {\n        return !this.isModal && this.authService.isLoggedIn && !this.authService.isSessionExpired;\n    }\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n    closeModal() {\n        if (this.modalClosedCallback) {\n            this.modalClosedCallback();\n        }\n    }\n\n\n    login() {\n        this.isLoading = true;\n        this.alertService.startLoadingMessage('', 'Attempting login...');\n\n        this.authService.loginWithPassword(this.userLogin.userName, this.userLogin.password, this.userLogin.rememberMe)\n            .subscribe(\n                user => {\n                    setTimeout(() => {\n                        this.alertService.stopLoadingMessage();\n                        this.isLoading = false;\n                        this.reset();\n\n                        if (!this.isModal) {\n                            this.alertService.showMessage('Login', `Welcome ${user.userName}!`, MessageSeverity.success);\n                        } else {\n                            this.alertService.showMessage('Login', `Session for ${user.userName} restored!`, MessageSeverity.success);\n                            setTimeout(() => {\n                                this.alertService.showStickyMessage('Session Restored', 'Please try your last operation again', MessageSeverity.default);\n                            }, 500);\n\n                            this.closeModal();\n                        }\n                    }, 500);\n                },\n                error => {\n\n                    this.alertService.stopLoadingMessage();\n\n                    if (Utilities.checkNoNetwork(error)) {\n                        this.alertService.showStickyMessage(Utilities.noNetworkMessageCaption, Utilities.noNetworkMessageDetail, MessageSeverity.error, error);\n                        this.offerAlternateHost();\n                    } else {\n                        const errorMessage = Utilities.getHttpResponseMessage(error);\n\n                        if (errorMessage) {\n                            this.alertService.showStickyMessage('Unable to login', this.mapLoginErrorMessage(errorMessage), MessageSeverity.error, error);\n                        } else {\n                            this.alertService.showStickyMessage('Unable to login', 'An error occured whilst logging in, please try again later.\\nError: ' + Utilities.getResponseBody(error), MessageSeverity.error, error);\n                        }\n                    }\n\n                    setTimeout(() => {\n                        this.isLoading = false;\n                    }, 500);\n                });\n    }\n\n\n    offerAlternateHost() {\n\n        if (Utilities.checkIsLocalHost(location.origin) && Utilities.checkIsLocalHost(this.configurations.baseUrl)) {\n            this.alertService.showDialog('Dear Developer!\\nIt appears your backend Web API service is not running...\\n' +\n                'Would you want to temporarily switch to the online Demo API below?(Or specify another)',\n                DialogType.prompt,\n                (value: string) => {\n                    this.configurations.baseUrl = value;\n                    this.configurations.tokenUrl = value;\n                    this.alertService.showStickyMessage('API Changed!', 'The target Web API has been changed to: ' + value, MessageSeverity.warn);\n                },\n                null,\n                null,\n                null,\n                this.configurations.fallbackBaseUrl);\n        }\n    }\n\n\n    mapLoginErrorMessage(error: string) {\n\n        if (error == 'invalid_username_or_password') {\n            return 'Invalid username or password';\n        }\n\n        if (error == 'invalid_grant') {\n            return 'This account has been disabled';\n        }\n\n        return error;\n    }\n\n\n    reset() {\n        this.formResetToggle = false;\n\n        setTimeout(() => {\n            this.formResetToggle = true;\n        });\n    }\n}\n","import {\n    NgModule,\n} from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n// Bootstrap\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { AlertModule } from 'ngx-bootstrap/alert';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ChartsModule } from 'ng2-charts';\n\n@NgModule({\n    imports: [\n    ],\n    declarations: [\n    ],\n    exports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        // Bootstrap, Note that we have imported them in the\n        // core modules (and they are only imported once)\n        BsDropdownModule,\n        TabsModule,\n        PaginationModule,\n        ModalModule,\n        AccordionModule,\n        PopoverModule,\n        TooltipModule,\n        CarouselModule,\n        AlertModule,\n\n        TranslateModule,\n        NgxDatatableModule,\n        ChartsModule\n    ],\n    providers: [\n    ],\n    entryComponents: [\n    ]\n})\nexport class DependencyModule {\n}\n","import {\n    ModuleWithProviders, NgModule,\n    Optional, SkipSelf\n} from '@angular/core';\n\nimport {\n    AlertServiceAbstractProvider,\n    ThemeManagerAbstractProvider,\n    ConfigurationServiceAbstractProvider,\n    LocalStoreManagerServiceAbstractProvider,\n    TranslationServiceAbstractProvider\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport { DependencyModule } from './dependency.module';\n\nimport { AlertServiceProvider } from './services/alert.service-provider';\nimport { ThemeManagerProvider } from './services/theme-manager.provider';\nimport { ConfigurationServiceProvider } from './services/configuration.service-provider';\nimport { AppTitleService } from './services/app-title.service';\nimport { TranslationServiceProvider } from './services/translation.service-provider';\nimport { NotificationService } from './services/notification.service';\nimport { NotificationEndpoint } from './services/notification-endpoint.service';\nimport { AccountService } from './services/account.service';\nimport { AccountEndpoint } from './services/account-endpoint.service';\nimport { LocalStoreManagerProvider } from './services/local-storage-manager.service-provider';\n\nimport { EqualValidator } from './directives/equal-validator.directive';\nimport { LastElementDirective } from './directives/last-element.directive';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { BootstrapTabDirective } from './directives/bootstrap-tab.directive';\nimport { BootstrapToggleDirective } from './directives/bootstrap-toggle.directive';\nimport { BootstrapSelectDirective } from './directives/bootstrap-select.directive';\nimport { BootstrapDatepickerDirective } from './directives/bootstrap-datepicker.directive';\n\nimport { GroupByPipe } from './pipes/group-by.pipe';\n\nimport { TodoDemoComponent } from './components/todo-demo/todo-demo.component';\nimport { StatisticsDemoComponent } from './components/statistics-demo/statistics-demo.component';\nimport { NotificationsViewerComponent } from './components/notifications-viewer/notifications-viewer.component';\nimport { SearchBoxComponent } from './components/search-box/search-box.component';\nimport { UserInfoComponent } from './components/user-info/user-info.component';\nimport { UserPreferencesComponent } from './components/user-preferences/user-preferences.component';\nimport { UsersManagementComponent } from './components/users-management/users-management.component';\nimport { RolesManagementComponent } from './components/roles-management/roles-management.component';\nimport { RoleEditorComponent } from './components/role-editor/role-editor.component';\n\nimport { LoginComponent } from './pages/login/login.component';\nimport { SettingsComponent } from './pages/settings/settings.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\n\n@NgModule({\n    declarations: [\n\n        EqualValidator,\n        LastElementDirective,\n        AutofocusDirective,\n        BootstrapTabDirective,\n        BootstrapToggleDirective,\n        BootstrapSelectDirective,\n        BootstrapDatepickerDirective,\n\n        GroupByPipe,\n\n        UsersManagementComponent,\n        UserInfoComponent,\n        UserPreferencesComponent,\n        RolesManagementComponent,\n        RoleEditorComponent,\n        NotificationsViewerComponent,\n        SearchBoxComponent,\n        StatisticsDemoComponent,\n        TodoDemoComponent,\n\n        LoginComponent,\n        SettingsComponent,\n        NotFoundComponent\n    ],\n    imports: [\n        DependencyModule\n    ],\n    exports: [\n        EqualValidator,\n        LastElementDirective,\n        AutofocusDirective,\n        BootstrapTabDirective,\n        BootstrapToggleDirective,\n        BootstrapSelectDirective,\n        BootstrapDatepickerDirective,\n\n        GroupByPipe,\n\n        UsersManagementComponent,\n        UserInfoComponent,\n        UserPreferencesComponent,\n        RolesManagementComponent,\n        RoleEditorComponent,\n        NotificationsViewerComponent,\n        SearchBoxComponent,\n        StatisticsDemoComponent,\n        TodoDemoComponent,\n\n        LoginComponent,\n        SettingsComponent,\n        NotFoundComponent\n    ],\n    providers: [\n        // Services\n        AppTitleService,\n        NotificationService,\n        NotificationEndpoint,\n        AccountService,\n        AccountEndpoint,\n\n        AlertServiceProvider,\n        ThemeManagerProvider,\n        ConfigurationServiceProvider,\n        LocalStoreManagerProvider,\n        TranslationServiceProvider,\n\n        { provide: AlertServiceAbstractProvider, useClass: AlertServiceProvider },\n        { provide: ThemeManagerAbstractProvider, useClass: ThemeManagerProvider },\n        { provide: ConfigurationServiceAbstractProvider, useClass: ConfigurationServiceProvider },\n        { provide: LocalStoreManagerServiceAbstractProvider, useClass: LocalStoreManagerProvider },\n        { provide: TranslationServiceAbstractProvider, useClass: TranslationServiceProvider }\n    ],\n    entryComponents: [\n        LoginComponent\n    ]\n})\nexport class NgxAppkitStarterAlphaModule {\n    constructor(@Optional() @SkipSelf() parentModule: NgxAppkitStarterAlphaModule) {\n        if (parentModule) {\n            throw new Error(\n                'NgxAppkitStarterAlphaModule is already loaded. Import it in the AppModule only');\n        }\n    }\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: NgxAppkitStarterAlphaModule,\n            providers: []\n        };\n    }\n}\n"]}