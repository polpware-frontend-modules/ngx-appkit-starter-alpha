{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@polpware/ngx-appkit-starter-alpha/lib/models/notification.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/role.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/user-edit.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/enums.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/user-login.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/animations.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/configuration.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/theme-manager.provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/account-endpoint.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/account.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/notification-endpoint.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/notification.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/translation.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/app-title.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/alert.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/local-storage-manager.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pipes/group-by.pipe.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/notifications-viewer/notifications-viewer.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/user-info/user-info.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/users-management/users-management.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-select.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/user-preferences/user-preferences.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/role-editor/role-editor.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/roles-management/roles-management.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/todo-demo/todo-demo.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/search-box/search-box.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/statistics-demo/statistics-demo.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-tab.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/settings/settings.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/not-found/not-found.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/login/login.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/dependency.module.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/equal-validator.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/last-element.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/autofocus.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-toggle.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-datepicker.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/ngx-appkit-starter-alpha.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","Notification","Create","data","assign","date","Utilities","parseDate","Role","name","description","permissions","UserEdit","currentPassword","newPassword","confirmPassword","_this","_super","tslib_1.__extends","User","Gender","None","Female","Male","UserLogin","userName","password","rememberMe","fadeInOut","trigger","transition","style","opacity","animate","ConfigurationServiceProvider","impl","get","Injectable","ConfigurationService","ConfigurationServiceAbstractProvider","ThemeManagerProvider","ThemeManager","ThemeManagerAbstractProvider","AccountEndpoint","configurations","http","authService","_usersUrl","_userByUserNameUrl","_currentUserUrl","_currentUserPreferencesUrl","_unblockUserUrl","_rolesUrl","_roleByRoleNameUrl","_permissionsUrl","defineProperty","baseUrl","getUserEndpoint","userId","endpointUrl","usersUrl","currentUserUrl","requestHeaders","pipe","catchError","handleError","getUserByUserNameEndpoint","userByUserNameUrl","getUsersEndpoint","page","pageSize","getNewUserEndpoint","userObject","post","JSON","stringify","getUpdateUserEndpoint","put","getPatchUpdateUserEndpoint","valueOrPatch","opOrUserId","path","from","patchDocument","op","patch","getUserPreferencesEndpoint","currentUserPreferencesUrl","getUpdateUserPreferencesEndpoint","configuration","getUnblockUserEndpoint","unblockUserUrl","getDeleteUserEndpoint","delete","getRoleEndpoint","roleId","rolesUrl","getRoleByRoleNameEndpoint","roleName","roleByRoleNameUrl","getRolesEndpoint","getNewRoleEndpoint","roleObject","getUpdateRoleEndpoint","getDeleteRoleEndpoint","getPermissionsEndpoint","permissionsUrl","HttpClient","AuthService","EndpointBase","AccountService","accountEndpoint","_rolesChanged","Subject","getUser","getUserAndRoles","forkJoin","getUsers","getUsersAndRoles","updateUser","user","id","mergeMap","foundUser","newUser","getUserPreferences","updateUserPreferences","deleteUser","userOrUserId","String","tap","onRolesUserCountChanged","roles","unblockUser","userHasPermission","permissionValue","some","refreshLoggedInUser","refreshLogin","getRoles","getRolesAndPermissions","updateRole","role","onRolesChanged","roleModifiedOperation","foundRole","newRole","roleAddedOperation","deleteRole","roleOrRoleId","roleDeletedOperation","getPermissions","operation","getRolesChangedEvent","asObservable","userPermissions","currentUser","NotificationEndpoint","demoNotifications","header","body","isRead","isPinned","getNotificationEndpoint","notificationId","response","notification","find","val","createResponse","of","getNotificationsEndpoint","getUnreadNotificationsEndpoint","unreadNotifications","filter","getNewNotificationsEndpoint","lastNotificationDate","getPinUnpinNotificationEndpoint","getReadUnreadNotificationEndpoint","notificationIds","this_1","notificationIds_1","tslib_1.__values","notificationIds_1_1","getDeleteNotificationEndpoint","status","HttpResponse","NotificationService","notificationEndpoint","_recentNotifications","notifications","getNotification","map","getNotifications","getNotificationsFromResponse","getUnreadNotifications","getNewNotifications","processNewNotificationsFromResponse","getNewNotificationsPeriodically","interval","startWith","flatMap","pinUnpinNotification","notificationOrNotificationId","Number","readUnreadNotification","deleteNotification","recentNotifications","notifications_1","notifications_1_1","sort","a","valueOf","TranslationServiceProvider","AppTranslationService","TranslationServiceAbstractProvider","AppTitleService","titleService","router","sub","events","event","NavigationEnd","_","routerState","root","route","firstChild","subscribe","title","fragment","url","split","toTitleCase","appName","setTitle","Title","Router","AlertServiceProvider","alertService","AlertService","AlertServiceAbstractProvider","LocalStoreManagerProvider","LocalStoreManager","LocalStoreManagerServiceAbstractProvider","GroupByPipe","transform","field","groupedObj","reduce","prev","cur","keys","key","Pipe","args","NotificationsViewerComponent","translationService","accountService","notificationService","columns","rows","dataLoadingConsecutiveFailurs","verticalScrollbar","ngOnInit","isViewOnly","prop","cellTemplate","dateTemplate","width","resizeable","canAutoResize","sortable","draggable","contentHeaderTemplate","gT","getTranslation","headerTemplate","statusHeaderTemplate","statusTemplate","contenBodytTemplate","actionsTemplate","initDataLoading","ngOnDestroy","dataLoadingSubscription","unsubscribe","processResults","loadingIndicator","dataLoadTask","showMessage","MessageSeverity","warn","logError","setTimeout","showStickyMessage","getPrintedDate","printTimeOnly","printDateOnly","row","showDialog","DialogType","confirm","deleteNotificationHelper","startLoadingMessage","results","stopLoadingMessage","item","getHttpResponseMessages","togglePin","pin","opText","Permission","manageRolesPermission","Component","selector","template","Input","ViewChild","static","UserInfoComponent","isEditMode","isNewUser","isSaving","isChangePassword","isEditingSelf","showValidationErrors","uniqueId","allRoles","formResetToggle","isGeneralEditor","loadCurrentUserData","canViewAllRoles","onCurrentUserDataLoadSuccessful","onCurrentUserDataLoadFailed","x","getRoleByName","showErrorAlert","caption","message","deletePasswordFromUser","userEdit","edit","save","saveSuccessHelper","saveFailedHelper","testIsRoleUserCountChanged","resetForm","success","changesSavedCallback","changesFailedCallback","editedUser","rolesAdded","indexOf","rolesRemoved","modifiedRoles","cancel","default","resetStickyMessage","changesCancelledCallback","close","changePassword","unlockUser","isLockedOut","replace","form","reset","isEnabled","editUser","setRoles","displayUser","ur","unshift","_b","_c","rolesSelector","refresh","viewRolesPermission","assignRolesPermission","UsersManagementComponent","rowsCache","indexTemplate","userNameTemplate","rolesTemplate","canManageUsers","loadData","ngAfterViewInit","userEditor","addNewUserToList","editorModal","hide","sourceUser","sourceIndex","moveArrayItem","maxIndex","u","index","splice","canViewRoles","onDataLoadSuccessful","onDataLoadFailed","users","forEach","onSearchChanged","searchArray","fullName","email","phoneNumber","jobTitle","onEditorModalHidden","editingUserName","show","deleteUserHelper","manageUsersPermission","BootstrapSelectDirective","el","oldValues","ngModelChange","EventEmitter","shown","hidden","changedSubscription","fromEvent","$","nativeElement","checkIsValuesChanged","selected","emit","shownSubscription","hiddenSubscription","values","selectpicker","requiredAttribute","doValidation","newValue","every","v","valid","required","render","Directive","exportAs","ElementRef","Output","UserPreferencesComponent","themeManager","themeSelectorToggle","languageChangedSubscription","languageChanged$","languageSelector","homePageSelector","reloadFromServer","import","info","setAsDefault","setAsDefaultHelper","export","resetDefault","resetDefaultHelper","viewUsersPermission","RoleEditorComponent","isNewRole","roleEdit","allPermissions","selectedValues","getSelectedPermissions","editingRoleName","selectAll","selectNone","toggleGroup","groupName","firstMemberValue","editRole","RolesManagementComponent","roleEditor","addNewRoleToList","editedRole","sourceRole","deleteRoleHelper","TodoDemoComponent","localStorage","editing","taskEdit","isDataLoaded","_hideCompletedTasks","_currentUserId","completed","fetch","refreshDataIndexes","nameTemplate","descriptionTemplate","saveToDisk","cb","getFromDisk","important","data_1","data_1_1","$$index","addTask","updateValue","cell","cellValue","target","deleteHelper","getDataObject","DBKeyTodoDemo","currentUserId","saveSyncedSessionData","SearchBoxComponent","placeholder","searchChange","onValueChange","clear","searchInput","require","StatisticsDemoComponent","chartData","label","chartLabels","chartOptions","responsive","display","fontSize","text","chartColors","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","chartLegend","chartType","timerReference","setInterval","randomize","initialWidth$","window","innerWidth","resizedWidth$","windowWidth$","merge","distinctUntilChanged","windowWidthSub","clearInterval","_chartData","j","Math","floor","random","changeChartType","type","msg","prompt","configure","wait","chartClicked","console","log","chartHovered","BootstrapTabDirective","zone","showBSTab","hideBSTab","tabShownSubscription","runInZone","relatedTarget","tabHiddenSubscription","delegate","run","tab","NgZone","SettingsComponent","isProfileActivated","isPreferencesActivated","isUsersActivated","isRolesActivated","profileTab","preferencesTab","usersTab","rolesTab","fragmentSubscription","anchor","showContent","toLowerCase","isFragmentEquals","canViewUsers","fragment1","fragment2","onShowTab","activeTab","hash","pop","navigate","animations","ActivatedRoute","NotFoundComponent","LoginComponent","userLogin","isLoading","isModal","getShouldRedirect","redirectLoginUser","loginStatusSubscription","getLoginStatusEvent","isLoggedIn","isSessionExpired","closeModal","modalClosedCallback","login","loginWithPassword","checkNoNetwork","noNetworkMessageCaption","noNetworkMessageDetail","offerAlternateHost","errorMessage","getHttpResponseMessage","mapLoginErrorMessage","getResponseBody","checkIsLocalHost","location","origin","tokenUrl","fallbackBaseUrl","DependencyModule","NgModule","imports","declarations","exports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","BsDropdownModule","TabsModule","PaginationModule","ModalModule","AccordionModule","PopoverModule","TooltipModule","CarouselModule","AlertModule","TranslateModule","NgxDatatableModule","ChartsModule","providers","entryComponents","EqualValidator","validateEqual","reverse","validate","c","other","validateReverse","validateNoReverse","errors","setErrors","provide","NG_VALIDATORS","useExisting","forwardRef","multi","Attribute","LastElementDirective","lastFunction","isLastElement","AutofocusDirective","elementRef","focus","BootstrapToggleDirective","checkedSubscription","checked","toggle","initialize","destroy","options","bootstrapToggle","toggleOn","toggleOff","change","enable","disable","BootstrapDatepickerDirective","_isShown","tryUpdate","datepicker","isShown","clearTimeout","updateTimeout","is","update","setDate","setUTCDate","clearDates","getDate","getUTCDate","NgxAppkitStarterAlphaModule","parentModule","Error","forRoot","ngModule","useClass","decorators","Optional","SkipSelf","duration","state"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Utilities } from '@polpware/ngx-appkit-contracts-alpha';\n\n\nexport class Notification {\n\n\n    public id: number;\n    public header: string;\n    public body: string;\n    public isRead: boolean;\n    public isPinned: boolean;\n    public date: Date;\n\n    public static Create(data: {}) {\n        const n = new Notification();\n        Object.assign(n, data);\n\n        if (n.date) {\n            n.date = Utilities.parseDate(n.date);\n        }\n\n        return n;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Permission } from '@polpware/ngx-oauth2';\n\n\nexport class Role {\n\n    constructor(name?: string, description?: string, permissions?: Permission[]) {\n\n        this.name = name;\n        this.description = description;\n        this.permissions = permissions;\n    }\n\n    public id: string;\n    public name: string;\n    public description: string;\n    public usersCount: number;\n    public permissions: Permission[];\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { User } from '@polpware/ngx-oauth2';\n\n\nexport class UserEdit extends User {\n    constructor(currentPassword?: string, newPassword?: string, confirmPassword?: string) {\n        super();\n\n        this.currentPassword = currentPassword;\n        this.newPassword = newPassword;\n        this.confirmPassword = confirmPassword;\n    }\n\n    public currentPassword: string;\n    public newPassword: string;\n    public confirmPassword: string;\n\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport enum Gender {\n    None,\n    Female,\n    Male\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport class UserLogin {\n    constructor(userName?: string, password?: string, rememberMe?: boolean) {\n        this.userName = userName;\n        this.password = password;\n        this.rememberMe = rememberMe;\n    }\n\n    userName: string;\n    password: string;\n    rememberMe: boolean;\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n\n\nexport const fadeInOut = trigger('fadeInOut', [\n    transition(':enter', [style({ opacity: 0 }), animate('0.4s ease-in', style({ opacity: 1 }))]),\n    transition(':leave', [animate('0.4s 10ms ease-out', style({ opacity: 0 }))])\n]);\n\n\n\nexport function flyInOut(duration: number = 0.2) {\n    return trigger('flyInOut', [\n        state('in', style({ opacity: 1, transform: 'translateX(0)' })),\n        transition('void => *', [style({ opacity: 0, transform: 'translateX(-100%)' }), animate(`${duration}s ease-in`)]),\n        transition('* => void', [animate(`${duration}s 10ms ease-out`, style({ opacity: 0, transform: 'translateX(100%)' }))])\n    ]);\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    ConfigurationServiceAbstractProvider,\n    IConfigurationServiceContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    ConfigurationService\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class ConfigurationServiceProvider extends ConfigurationServiceAbstractProvider {\n\n    constructor(private readonly impl: ConfigurationService) {\n        super();\n    }\n\n    get(): IConfigurationServiceContract {\n        return this.impl;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    ThemeManagerAbstractProvider,\n    IThemeManagerContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    ThemeManager\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class ThemeManagerProvider extends ThemeManagerAbstractProvider {\n\n    constructor(private readonly impl: ThemeManager) {\n        super();\n    }\n\n    get(): IThemeManagerContract {\n        return this.impl;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport {\n    AuthService,\n    EndpointBase\n} from '@polpware/ngx-oauth2';\nimport { ConfigurationService } from '@polpware/ngx-appkit-services-alpha';\n\n\n@Injectable()\nexport class AccountEndpoint extends EndpointBase {\n\n    private readonly _usersUrl: string = '/api/account/users';\n    private readonly _userByUserNameUrl: string = '/api/account/users/username';\n    private readonly _currentUserUrl: string = '/api/account/users/me';\n    private readonly _currentUserPreferencesUrl: string = '/api/account/users/me/preferences';\n    private readonly _unblockUserUrl: string = '/api/account/users/unblock';\n    private readonly _rolesUrl: string = '/api/account/roles';\n    private readonly _roleByRoleNameUrl: string = '/api/account/roles/name';\n    private readonly _permissionsUrl: string = '/api/account/permissions';\n\n    get usersUrl() { return this.configurations.baseUrl + this._usersUrl; }\n    get userByUserNameUrl() { return this.configurations.baseUrl + this._userByUserNameUrl; }\n    get currentUserUrl() { return this.configurations.baseUrl + this._currentUserUrl; }\n    get currentUserPreferencesUrl() { return this.configurations.baseUrl + this._currentUserPreferencesUrl; }\n    get unblockUserUrl() { return this.configurations.baseUrl + this._unblockUserUrl; }\n    get rolesUrl() { return this.configurations.baseUrl + this._rolesUrl; }\n    get roleByRoleNameUrl() { return this.configurations.baseUrl + this._roleByRoleNameUrl; }\n    get permissionsUrl() { return this.configurations.baseUrl + this._permissionsUrl; }\n\n\n    constructor(private configurations: ConfigurationService, http: HttpClient, authService: AuthService) {\n        super(http, authService);\n    }\n\n\n    getUserEndpoint<T>(userId?: string): Observable<T> {\n        const endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUserEndpoint(userId));\n            }));\n    }\n\n\n    getUserByUserNameEndpoint<T>(userName: string): Observable<T> {\n        const endpointUrl = `${this.userByUserNameUrl}/${userName}`;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUserByUserNameEndpoint(userName));\n            }));\n    }\n\n\n    getUsersEndpoint<T>(page?: number, pageSize?: number): Observable<T> {\n        const endpointUrl = page && pageSize ? `${this.usersUrl}/${page}/${pageSize}` : this.usersUrl;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUsersEndpoint(page, pageSize));\n            }));\n    }\n\n\n    getNewUserEndpoint<T>(userObject: any): Observable<T> {\n\n        return this.http.post<T>(this.usersUrl, JSON.stringify(userObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getNewUserEndpoint(userObject));\n            }));\n    }\n\n    getUpdateUserEndpoint<T>(userObject: any, userId?: string): Observable<T> {\n        const endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\n\n        return this.http.put<T>(endpointUrl, JSON.stringify(userObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUpdateUserEndpoint(userObject, userId));\n            }));\n    }\n\n    getPatchUpdateUserEndpoint<T>(patch: {}, userId?: string): Observable<T>;\n    getPatchUpdateUserEndpoint<T>(value: any, op: string, path: string, from?: any, userId?: string): Observable<T>;\n    getPatchUpdateUserEndpoint<T>(valueOrPatch: any, opOrUserId?: string, path?: string, from?: any, userId?: string): Observable<T> {\n        let endpointUrl: string;\n        let patchDocument: {};\n\n        if (path) {\n            endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\n            patchDocument = from ?\n                [{ value: valueOrPatch, path, op: opOrUserId, from }] :\n                [{ value: valueOrPatch, path, op: opOrUserId }];\n        } else {\n            endpointUrl = opOrUserId ? `${this.usersUrl}/${opOrUserId}` : this.currentUserUrl;\n            patchDocument = valueOrPatch;\n        }\n\n        return this.http.patch<T>(endpointUrl, JSON.stringify(patchDocument), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getPatchUpdateUserEndpoint(valueOrPatch, opOrUserId, path, from, userId));\n            }));\n    }\n\n\n    getUserPreferencesEndpoint<T>(): Observable<T> {\n\n        return this.http.get<T>(this.currentUserPreferencesUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUserPreferencesEndpoint());\n            }));\n    }\n\n    getUpdateUserPreferencesEndpoint<T>(configuration: string): Observable<T> {\n        return this.http.put<T>(this.currentUserPreferencesUrl, JSON.stringify(configuration), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUpdateUserPreferencesEndpoint(configuration));\n            }));\n    }\n\n    getUnblockUserEndpoint<T>(userId: string): Observable<T> {\n        const endpointUrl = `${this.unblockUserUrl}/${userId}`;\n\n        return this.http.put<T>(endpointUrl, null, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUnblockUserEndpoint(userId));\n            }));\n    }\n\n    getDeleteUserEndpoint<T>(userId: string): Observable<T> {\n        const endpointUrl = `${this.usersUrl}/${userId}`;\n\n        return this.http.delete<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getDeleteUserEndpoint(userId));\n            }));\n    }\n\n\n\n\n\n    getRoleEndpoint<T>(roleId: string): Observable<T> {\n        const endpointUrl = `${this.rolesUrl}/${roleId}`;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getRoleEndpoint(roleId));\n            }));\n    }\n\n\n    getRoleByRoleNameEndpoint<T>(roleName: string): Observable<T> {\n        const endpointUrl = `${this.roleByRoleNameUrl}/${roleName}`;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getRoleByRoleNameEndpoint(roleName));\n            }));\n    }\n\n\n\n    getRolesEndpoint<T>(page?: number, pageSize?: number): Observable<T> {\n        const endpointUrl = page && pageSize ? `${this.rolesUrl}/${page}/${pageSize}` : this.rolesUrl;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getRolesEndpoint(page, pageSize));\n            }));\n    }\n\n    getNewRoleEndpoint<T>(roleObject: any): Observable<T> {\n\n        return this.http.post<T>(this.rolesUrl, JSON.stringify(roleObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getNewRoleEndpoint(roleObject));\n            }));\n    }\n\n    getUpdateRoleEndpoint<T>(roleObject: any, roleId: string): Observable<T> {\n        const endpointUrl = `${this.rolesUrl}/${roleId}`;\n\n        return this.http.put<T>(endpointUrl, JSON.stringify(roleObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUpdateRoleEndpoint(roleObject, roleId));\n            }));\n    }\n\n    getDeleteRoleEndpoint<T>(roleId: string): Observable<T> {\n        const endpointUrl = `${this.rolesUrl}/${roleId}`;\n\n        return this.http.delete<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getDeleteRoleEndpoint(roleId));\n            }));\n    }\n\n\n    getPermissionsEndpoint<T>(): Observable<T> {\n\n        return this.http.get<T>(this.permissionsUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getPermissionsEndpoint());\n            }));\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, forkJoin } from 'rxjs';\nimport { mergeMap, tap } from 'rxjs/operators';\n\nimport {\n    AuthService, User,\n    Permission,\n    PermissionValues\n} from '@polpware/ngx-oauth2';\n\nimport { AccountEndpoint } from './account-endpoint.service';\n\nimport { Role } from '../models/role.model';\nimport { UserEdit } from '../models/user-edit.model';\n\nexport type RolesChangedOperation = 'add' | 'delete' | 'modify';\nexport interface RolesChangedEventArg { roles: Role[] | string[]; operation: RolesChangedOperation; }\n\n@Injectable()\nexport class AccountService {\n    public static readonly roleAddedOperation: RolesChangedOperation = 'add';\n    public static readonly roleDeletedOperation: RolesChangedOperation = 'delete';\n    public static readonly roleModifiedOperation: RolesChangedOperation = 'modify';\n\n    private _rolesChanged = new Subject<RolesChangedEventArg>();\n\n    constructor(\n        private authService: AuthService,\n        private accountEndpoint: AccountEndpoint) {\n\n    }\n\n    getUser(userId?: string) {\n        return this.accountEndpoint.getUserEndpoint<User>(userId);\n    }\n\n    getUserAndRoles(userId?: string) {\n\n        return forkJoin(\n            this.accountEndpoint.getUserEndpoint<User>(userId),\n            this.accountEndpoint.getRolesEndpoint<Role[]>());\n    }\n\n    getUsers(page?: number, pageSize?: number) {\n\n        return this.accountEndpoint.getUsersEndpoint<User[]>(page, pageSize);\n    }\n\n    getUsersAndRoles(page?: number, pageSize?: number) {\n\n        return forkJoin(\n            this.accountEndpoint.getUsersEndpoint<User[]>(page, pageSize),\n            this.accountEndpoint.getRolesEndpoint<Role[]>());\n    }\n\n\n    updateUser(user: UserEdit) {\n        if (user.id) {\n            return this.accountEndpoint.getUpdateUserEndpoint(user, user.id);\n        } else {\n            return this.accountEndpoint.getUserByUserNameEndpoint<User>(user.userName).pipe(\n                mergeMap(foundUser => {\n                    user.id = foundUser.id;\n                    return this.accountEndpoint.getUpdateUserEndpoint(user, user.id);\n                }));\n        }\n    }\n\n    newUser(user: UserEdit) {\n        return this.accountEndpoint.getNewUserEndpoint<User>(user);\n    }\n\n\n    getUserPreferences() {\n        return this.accountEndpoint.getUserPreferencesEndpoint<string>();\n    }\n\n    updateUserPreferences(configuration: string) {\n        return this.accountEndpoint.getUpdateUserPreferencesEndpoint(configuration);\n    }\n\n\n    deleteUser(userOrUserId: string | User): Observable<User> {\n\n        if (typeof userOrUserId === 'string' || userOrUserId instanceof String) {\n            return this.accountEndpoint.getDeleteUserEndpoint<User>(userOrUserId as string).pipe<User>(\n                tap(data => this.onRolesUserCountChanged(data.roles)));\n        } else {\n\n            if (userOrUserId.id) {\n                return this.deleteUser(userOrUserId.id);\n            } else {\n                return this.accountEndpoint.getUserByUserNameEndpoint<User>(userOrUserId.userName).pipe<User>(\n                    mergeMap(user => this.deleteUser(user.id)));\n            }\n        }\n    }\n\n\n    unblockUser(userId: string) {\n        return this.accountEndpoint.getUnblockUserEndpoint(userId);\n    }\n\n\n    userHasPermission(permissionValue: PermissionValues): boolean {\n        return this.permissions.some(p => p == permissionValue);\n    }\n\n\n    refreshLoggedInUser() {\n        return this.accountEndpoint.refreshLogin();\n    }\n\n    getRoles(page?: number, pageSize?: number) {\n\n        return this.accountEndpoint.getRolesEndpoint<Role[]>(page, pageSize);\n    }\n\n\n    getRolesAndPermissions(page?: number, pageSize?: number) {\n\n        return forkJoin(\n            this.accountEndpoint.getRolesEndpoint<Role[]>(page, pageSize),\n            this.accountEndpoint.getPermissionsEndpoint<Permission[]>());\n    }\n\n\n    updateRole(role: Role) {\n        if (role.id) {\n            return this.accountEndpoint.getUpdateRoleEndpoint(role, role.id).pipe(\n                tap(data => this.onRolesChanged([role], AccountService.roleModifiedOperation)));\n        } else {\n            return this.accountEndpoint.getRoleByRoleNameEndpoint<Role>(role.name).pipe(\n                mergeMap(foundRole => {\n                    role.id = foundRole.id;\n                    return this.accountEndpoint.getUpdateRoleEndpoint(role, role.id);\n                }),\n                tap(data => this.onRolesChanged([role], AccountService.roleModifiedOperation)));\n        }\n    }\n\n\n    newRole(role: Role) {\n        return this.accountEndpoint.getNewRoleEndpoint<Role>(role).pipe<Role>(\n            tap(data => this.onRolesChanged([role], AccountService.roleAddedOperation)));\n    }\n\n\n    deleteRole(roleOrRoleId: string | Role): Observable<Role> {\n\n        if (typeof roleOrRoleId === 'string' || roleOrRoleId instanceof String) {\n            return this.accountEndpoint.getDeleteRoleEndpoint<Role>(roleOrRoleId as string).pipe<Role>(\n                tap(data => this.onRolesChanged([data], AccountService.roleDeletedOperation)));\n        } else {\n\n            if (roleOrRoleId.id) {\n                return this.deleteRole(roleOrRoleId.id);\n            } else {\n                return this.accountEndpoint.getRoleByRoleNameEndpoint<Role>(roleOrRoleId.name).pipe<Role>(\n                    mergeMap(role => this.deleteRole(role.id)));\n            }\n        }\n    }\n\n    getPermissions() {\n\n        return this.accountEndpoint.getPermissionsEndpoint<Permission[]>();\n    }\n\n\n    private onRolesChanged(roles: Role[] | string[], op: RolesChangedOperation) {\n        this._rolesChanged.next({ roles, operation: op });\n    }\n\n\n    onRolesUserCountChanged(roles: Role[] | string[]) {\n        return this.onRolesChanged(roles, AccountService.roleModifiedOperation);\n    }\n\n\n    getRolesChangedEvent(): Observable<RolesChangedEventArg> {\n        return this._rolesChanged.asObservable();\n    }\n\n\n\n    get permissions(): PermissionValues[] {\n        return this.authService.userPermissions;\n    }\n\n    get currentUser() {\n        return this.authService.currentUser;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n\n\n\n@Injectable()\nexport class NotificationEndpoint {\n\n    private demoNotifications = [\n        {\n            id: 1,\n            header: 'Welcome',\n            body: 'You are ...',\n            isRead: true,\n            isPinned: true,\n            date: '2019-05-28T16:29:13.5877958'\n        }\n    ];\n\n\n\n    getNotificationEndpoint<T>(notificationId: number): Observable<T> {\n\n        const notification = this.demoNotifications.find(val => val.id == notificationId);\n        let response: HttpResponse<T>;\n\n        if (notification) {\n            response = this.createResponse<T>(notification, 200);\n        } else {\n            response = this.createResponse<T>(null, 404);\n        }\n\n        return of(response.body);\n    }\n\n\n\n    getNotificationsEndpoint<T>(page: number, pageSize: number): Observable<T> {\n\n        const notifications = this.demoNotifications;\n        const response = this.createResponse<T>(this.demoNotifications, 200);\n\n        return of(response.body);\n    }\n\n\n\n    getUnreadNotificationsEndpoint<T>(userId?: string): Observable<T> {\n\n        const unreadNotifications = this.demoNotifications.filter(val => !val.isRead);\n        const response = this.createResponse<T>(unreadNotifications, 200);\n\n        return of(response.body);\n    }\n\n\n\n    getNewNotificationsEndpoint<T>(lastNotificationDate?: Date): Observable<T> {\n\n        const unreadNotifications = this.demoNotifications;\n        const response = this.createResponse<T>(unreadNotifications, 200);\n\n        return of(response.body);\n    }\n\n\n\n    getPinUnpinNotificationEndpoint<T>(notificationId: number, isPinned?: boolean, ): Observable<T> {\n\n        const notification = this.demoNotifications.find(val => val.id == notificationId);\n        let response: HttpResponse<T>;\n\n        if (notification) {\n            response = this.createResponse<T>(null, 204);\n\n            if (isPinned == null) {\n                isPinned = !notification.isPinned;\n            }\n\n            notification.isPinned = isPinned;\n            notification.isRead = true;\n        } else {\n            response = this.createResponse<T>(null, 404);\n        }\n\n\n        return of(response.body);\n    }\n\n\n\n    getReadUnreadNotificationEndpoint<T>(notificationIds: number[], isRead: boolean, ): Observable<T> {\n\n        for (const notificationId of notificationIds) {\n\n            const notification = this.demoNotifications.find(val => val.id == notificationId);\n\n            if (notification) {\n                notification.isRead = isRead;\n            }\n        }\n\n        const response = this.createResponse<T>(null, 204);\n        return of(response.body);\n    }\n\n\n\n    getDeleteNotificationEndpoint<T>(notificationId: number): Observable<T> {\n\n        const notification = this.demoNotifications.find(val => val.id == notificationId);\n        let response: HttpResponse<T>;\n\n        if (notification) {\n            this.demoNotifications = this.demoNotifications.filter(val => val.id != notificationId);\n            response = this.createResponse<T>(notification, 200);\n        } else {\n            response = this.createResponse<T>(null, 404);\n        }\n\n        return of(response.body);\n    }\n\n\n\n    private createResponse<T>(body, status: number) {\n        return new HttpResponse<T>({ body, status });\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Observable, interval } from 'rxjs';\nimport { map, flatMap, startWith } from 'rxjs/operators';\n\nimport { AuthService, User } from '@polpware/ngx-oauth2';\nimport { NotificationEndpoint } from './notification-endpoint.service';\nimport { Notification } from '../models/notification.model';\n\n@Injectable()\nexport class NotificationService {\n\n    private lastNotificationDate: Date;\n    private _recentNotifications: Notification[];\n\n    get currentUser(): User {\n        return this.authService.currentUser;\n    }\n\n    get recentNotifications() {\n        return this._recentNotifications;\n    }\n\n    set recentNotifications(notifications: Notification[]) {\n        this._recentNotifications = notifications;\n    }\n\n\n\n    constructor(private notificationEndpoint: NotificationEndpoint, private authService: AuthService) {\n\n    }\n\n\n    getNotification(notificationId?: number) {\n\n        return this.notificationEndpoint.getNotificationEndpoint(notificationId).pipe(\n            map(response => Notification.Create(response)));\n    }\n\n\n    getNotifications(page: number, pageSize: number) {\n\n        return this.notificationEndpoint.getNotificationsEndpoint(page, pageSize).pipe(\n            map(response => {\n                return this.getNotificationsFromResponse(response);\n            }));\n    }\n\n\n    getUnreadNotifications(userId?: string) {\n\n        return this.notificationEndpoint.getUnreadNotificationsEndpoint(userId).pipe(\n            map(response => this.getNotificationsFromResponse(response)));\n    }\n\n\n    getNewNotifications() {\n        return this.notificationEndpoint.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(\n            map(response => this.processNewNotificationsFromResponse(response)));\n    }\n\n\n    getNewNotificationsPeriodically() {\n        return interval(10000).pipe(\n            startWith(0),\n            flatMap(() => {\n                return this.notificationEndpoint.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(\n                    map(response => this.processNewNotificationsFromResponse(response)));\n            }));\n    }\n\n\n\n\n    pinUnpinNotification(notificationOrNotificationId: number | Notification, isPinned?: boolean): Observable<any> {\n\n        if (typeof notificationOrNotificationId === 'number' || notificationOrNotificationId instanceof Number) {\n            return this.notificationEndpoint.getPinUnpinNotificationEndpoint(notificationOrNotificationId as number, isPinned);\n        } else {\n            return this.pinUnpinNotification(notificationOrNotificationId.id);\n        }\n    }\n\n\n    readUnreadNotification(notificationIds: number[], isRead: boolean): Observable<any> {\n\n        return this.notificationEndpoint.getReadUnreadNotificationEndpoint(notificationIds, isRead);\n    }\n\n\n\n\n    deleteNotification(notificationOrNotificationId: number | Notification): Observable<Notification> {\n\n        if (typeof notificationOrNotificationId === 'number' || notificationOrNotificationId instanceof Number) { // Todo: Test me if its check is valid\n            return this.notificationEndpoint.getDeleteNotificationEndpoint(notificationOrNotificationId as number).pipe(\n                map(response => {\n                    this.recentNotifications = this.recentNotifications.filter(n => n.id != notificationOrNotificationId);\n                    return Notification.Create(response);\n                }));\n        } else {\n            return this.deleteNotification(notificationOrNotificationId.id);\n        }\n    }\n\n\n\n\n    private processNewNotificationsFromResponse(response) {\n        const notifications = this.getNotificationsFromResponse(response);\n\n        for (const n of notifications) {\n            if (n.date > this.lastNotificationDate) {\n                this.lastNotificationDate = n.date;\n            }\n        }\n\n        return notifications;\n    }\n\n\n    private getNotificationsFromResponse(response) {\n        const notifications: Notification[] = [];\n\n        for (const i in response) {\n            notifications[i] = Notification.Create(response[i]);\n        }\n\n        notifications.sort((a, b) => b.date.valueOf() - a.date.valueOf());\n        notifications.sort((a, b) => (a.isPinned === b.isPinned) ? 0 : a.isPinned ? -1 : 1);\n\n        this.recentNotifications = notifications;\n\n        return notifications;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    TranslationServiceAbstractProvider,\n    ITranslationServiceContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AppTranslationService\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class TranslationServiceProvider extends TranslationServiceAbstractProvider {\n\n    constructor(private readonly impl: AppTranslationService) {\n        super();\n    }\n\n    get(): ITranslationServiceContract {\n        return this.impl;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationEnd, PRIMARY_OUTLET } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter, map, flatMap } from 'rxjs/operators';\nimport { Title } from '@angular/platform-browser';\n\nimport { Utilities } from '@polpware/ngx-appkit-contracts-alpha';\n\n\n@Injectable()\nexport class AppTitleService {\n\n    sub: Subscription;\n    appName: string;\n\n    constructor(private titleService: Title, private router: Router) {\n        this.sub = this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd),\n            map(_ => this.router.routerState.root),\n            map(route => {\n                while (route.firstChild) {\n                    route = route.firstChild;\n                }\n\n                return route;\n            }),\n            flatMap(route => route.data))\n            .subscribe(data => {\n                let title = data.title;\n\n                if (title) {\n                    const fragment = this.router.url.split('#')[1];\n\n                    if (fragment) {\n                        title += ' | ' + Utilities.toTitleCase(fragment);\n                    }\n                }\n\n                if (title && this.appName) {\n                    title += ' - ' + this.appName;\n                } else if (this.appName) {\n                    title = this.appName;\n                }\n\n                if (title) {\n                    this.titleService.setTitle(title);\n                }\n            });\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    AlertServiceAbstractProvider,\n    IAlertServiceContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class AlertServiceProvider extends AlertServiceAbstractProvider {\n\n    constructor(private readonly alertService: AlertService) {\n        super();\n    }\n\n    get(): IAlertServiceContract {\n        return this.alertService;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    LocalStoreManagerServiceAbstractProvider,\n    ILocalStoreManagerContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    LocalStoreManager\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class LocalStoreManagerProvider extends LocalStoreManagerServiceAbstractProvider {\n\n    constructor(private readonly impl: LocalStoreManager) {\n        super();\n    }\n\n    get(): ILocalStoreManagerContract {\n        return this.impl;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n\n\n@Pipe({ name: 'groupBy' })\nexport class GroupByPipe implements PipeTransform {\n\n    transform(value: Array<any>, field: string): Array<any> {\n\n        if (!value) {\n            return value;\n        }\n\n        const groupedObj = value.reduce((prev, cur) => {\n            if (!prev[cur[field]]) {\n                prev[cur[field]] = [cur];\n            } else {\n                prev[cur[field]].push(cur);\n            }\n\n            return prev;\n        }, {});\n\n        return Object.keys(groupedObj).map(key => ({ key, value: groupedObj[key] }));\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, TemplateRef, ViewChild, Input } from '@angular/core';\n\nimport {\n    DialogType, AlertCommand, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission\n} from '@polpware/ngx-oauth2';\n\n\nimport { NotificationService } from '../../services/notification.service';\nimport { AccountService } from '../../services/account.service';\nimport { Notification } from '../../models/notification.model';\n\n\n@Component({\n    selector: 'notifications-viewer',\n    templateUrl: './notifications-viewer.component.html',\n    styleUrls: ['./notifications-viewer.component.scss']\n})\nexport class NotificationsViewerComponent implements OnInit, OnDestroy {\n    columns: any[] = [];\n    rows: Notification[] = [];\n    loadingIndicator: boolean;\n\n    dataLoadingConsecutiveFailurs = 0;\n    dataLoadingSubscription: any;\n\n\n    @Input()\n    isViewOnly: boolean;\n\n    @Input()\n    verticalScrollbar = false;\n\n\n    @ViewChild('statusHeaderTemplate', { static: true })\n    statusHeaderTemplate: TemplateRef<any>;\n\n    @ViewChild('statusTemplate', { static: true })\n    statusTemplate: TemplateRef<any>;\n\n    @ViewChild('dateTemplate', { static: true })\n    dateTemplate: TemplateRef<any>;\n\n    @ViewChild('contentHeaderTemplate', { static: true })\n    contentHeaderTemplate: TemplateRef<any>;\n\n    @ViewChild('contenBodytTemplate', { static: true })\n    contenBodytTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService, private notificationService: NotificationService) {\n    }\n\n\n    ngOnInit() {\n\n        if (this.isViewOnly) {\n            this.columns = [\n                { prop: 'date', cellTemplate: this.dateTemplate, width: 100, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\n                { prop: 'header', cellTemplate: this.contentHeaderTemplate, width: 200, resizeable: false, sortable: false, draggable: false },\n            ];\n        } else {\n            const gT = (key: string) => this.translationService.getTranslation(key);\n\n            this.columns = [\n                { prop: '', name: '', width: 10, headerTemplate: this.statusHeaderTemplate, cellTemplate: this.statusTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\n                { prop: 'date', name: gT('notifications.Date'), cellTemplate: this.dateTemplate, width: 30 },\n                { prop: 'body', name: gT('notifications.Notification'), cellTemplate: this.contenBodytTemplate, width: 500 },\n                { name: '', width: 80, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\n            ];\n        }\n\n\n        this.initDataLoading();\n    }\n\n\n    ngOnDestroy() {\n        if (this.dataLoadingSubscription) {\n            this.dataLoadingSubscription.unsubscribe();\n        }\n    }\n\n\n\n    initDataLoading() {\n\n        if (this.isViewOnly && this.notificationService.recentNotifications) {\n            this.rows = this.processResults(this.notificationService.recentNotifications);\n            return;\n        }\n\n        this.loadingIndicator = true;\n\n        const dataLoadTask = this.isViewOnly ? this.notificationService.getNewNotifications() : this.notificationService.getNewNotificationsPeriodically();\n\n        this.dataLoadingSubscription = dataLoadTask\n            .subscribe(notifications => {\n                this.loadingIndicator = false;\n                this.dataLoadingConsecutiveFailurs = 0;\n\n                this.rows = this.processResults(notifications);\n            },\n                error => {\n                    this.loadingIndicator = false;\n\n                    this.alertService.showMessage('Load Error', 'Loading new notifications from the server failed!', MessageSeverity.warn);\n                    this.alertService.logError(error);\n\n                    if (this.dataLoadingConsecutiveFailurs++ < 5) {\n                        setTimeout(() => this.initDataLoading(), 5000);\n                    } else {\n                        this.alertService.showStickyMessage('Load Error', 'Loading new notifications from the server failed!', MessageSeverity.error);\n                    }\n\n                });\n\n\n        if (this.isViewOnly) {\n            this.dataLoadingSubscription = null;\n        }\n    }\n\n\n    private processResults(notifications: Notification[]) {\n\n        if (this.isViewOnly) {\n            notifications.sort((a, b) => {\n                return b.date.valueOf() - a.date.valueOf();\n            });\n        }\n\n        return notifications;\n    }\n\n\n\n    getPrintedDate(value: Date) {\n        if (value) {\n            return Utilities.printTimeOnly(value) + ' on ' + Utilities.printDateOnly(value);\n        }\n    }\n\n\n    deleteNotification(row: Notification) {\n        this.alertService.showDialog('Are you sure you want to delete the notification \\\"' + row.header + '\\\"?', DialogType.confirm, () => this.deleteNotificationHelper(row));\n    }\n\n\n    deleteNotificationHelper(row: Notification) {\n\n        this.alertService.startLoadingMessage('Deleting...');\n        this.loadingIndicator = true;\n\n        this.notificationService.deleteNotification(row)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                this.rows = this.rows.filter(item => item.id != row.id);\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the notification.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    togglePin(row: Notification) {\n\n        const pin = !row.isPinned;\n        const opText = pin ? 'Pinning' : 'Unpinning';\n\n        this.alertService.startLoadingMessage(opText + '...');\n        this.loadingIndicator = true;\n\n        this.notificationService.pinUnpinNotification(row, pin)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                row.isPinned = pin;\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage(opText + ' Error', `An error occured whilst ${opText} the notification.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    get canManageNotifications() {\n        return this.accountService.userHasPermission(Permission.manageRolesPermission); // Todo: Consider creating separate permission for notifications\n    }\n\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\n\nimport {\n    MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission,\n    User\n} from '@polpware/ngx-oauth2';\n\n\nimport { AccountService } from '../../services/account.service';\nimport { UserEdit } from '../../models/user-edit.model';\nimport { Role } from '../../models/role.model';\n\n\n@Component({\n    selector: 'user-info',\n    templateUrl: './user-info.component.html',\n    styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n\n    public isEditMode = false;\n    public isNewUser = false;\n    public isSaving = false;\n    public isChangePassword = false;\n    public isEditingSelf = false;\n    public showValidationErrors = false;\n    public uniqueId: string = Utilities.uniqueId();\n    public user: User = new User();\n    public userEdit: UserEdit;\n    public allRoles: Role[] = [];\n\n    public formResetToggle = true;\n\n    public changesSavedCallback: () => void;\n    public changesFailedCallback: () => void;\n    public changesCancelledCallback: () => void;\n\n    @Input()\n    isViewOnly: boolean;\n\n    @Input()\n    isGeneralEditor = false;\n\n\n\n\n\n    @ViewChild('f', { static: false })\n    public form;\n\n    // ViewChilds Required because ngIf hides template variables from global scope\n    @ViewChild('userName', { static: false })\n    public userName;\n\n    @ViewChild('userPassword', { static: false })\n    public userPassword;\n\n    @ViewChild('email', { static: false })\n    public email;\n\n    @ViewChild('currentPassword', { static: false })\n    public currentPassword;\n\n    @ViewChild('newPassword', { static: false })\n    public newPassword;\n\n    @ViewChild('confirmPassword', { static: false })\n    public confirmPassword;\n\n    @ViewChild('roles', { static: false })\n    public roles;\n\n    @ViewChild('rolesSelector', { static: false })\n    public rolesSelector;\n\n\n    constructor(private alertService: AlertService, private accountService: AccountService) {\n    }\n\n    ngOnInit() {\n        if (!this.isGeneralEditor) {\n            this.loadCurrentUserData();\n        }\n    }\n\n\n\n    private loadCurrentUserData() {\n        this.alertService.startLoadingMessage();\n\n        if (this.canViewAllRoles) {\n            this.accountService.getUserAndRoles().subscribe(results => this.onCurrentUserDataLoadSuccessful(results[0], results[1]), error => this.onCurrentUserDataLoadFailed(error));\n        } else {\n            this.accountService.getUser().subscribe(user => this.onCurrentUserDataLoadSuccessful(user, user.roles.map(x => new Role(x))), error => this.onCurrentUserDataLoadFailed(error));\n        }\n    }\n\n\n    private onCurrentUserDataLoadSuccessful(user: User, roles: Role[]) {\n        this.alertService.stopLoadingMessage();\n        this.user = user;\n        this.allRoles = roles;\n    }\n\n    private onCurrentUserDataLoadFailed(error: any) {\n        this.alertService.stopLoadingMessage();\n        this.alertService.showStickyMessage('Load Error', `Unable to retrieve user data from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n            MessageSeverity.error, error);\n\n        this.user = new User();\n    }\n\n\n\n    getRoleByName(name: string) {\n        return this.allRoles.find((r) => r.name == name);\n    }\n\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n\n    deletePasswordFromUser(user: UserEdit | User) {\n        const userEdit = user as UserEdit;\n\n        delete userEdit.currentPassword;\n        delete userEdit.newPassword;\n        delete userEdit.confirmPassword;\n    }\n\n\n    edit() {\n        if (!this.isGeneralEditor) {\n            this.isEditingSelf = true;\n            this.userEdit = new UserEdit();\n            Object.assign(this.userEdit, this.user);\n        } else {\n            if (!this.userEdit) {\n                this.userEdit = new UserEdit();\n            }\n\n            this.isEditingSelf = this.accountService.currentUser ? this.userEdit.id == this.accountService.currentUser.id : false;\n        }\n\n        this.isEditMode = true;\n        this.showValidationErrors = true;\n        this.isChangePassword = false;\n    }\n\n\n    save() {\n        this.isSaving = true;\n        this.alertService.startLoadingMessage('Saving changes...');\n\n        if (this.isNewUser) {\n            this.accountService.newUser(this.userEdit).subscribe(user => this.saveSuccessHelper(user), error => this.saveFailedHelper(error));\n        } else {\n            this.accountService.updateUser(this.userEdit).subscribe(response => this.saveSuccessHelper(), error => this.saveFailedHelper(error));\n        }\n    }\n\n\n    private saveSuccessHelper(user?: User) {\n        this.testIsRoleUserCountChanged(this.user, this.userEdit);\n\n        if (user) {\n            Object.assign(this.userEdit, user);\n        }\n\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.isChangePassword = false;\n        this.showValidationErrors = false;\n\n        this.deletePasswordFromUser(this.userEdit);\n        Object.assign(this.user, this.userEdit);\n        this.userEdit = new UserEdit();\n        this.resetForm();\n\n\n        if (this.isGeneralEditor) {\n            if (this.isNewUser) {\n                this.alertService.showMessage('Success', `User \\\"${this.user.userName}\\\" was created successfully`, MessageSeverity.success);\n            } else if (!this.isEditingSelf) {\n                this.alertService.showMessage('Success', `Changes to user \\\"${this.user.userName}\\\" was saved successfully`, MessageSeverity.success);\n            }\n        }\n\n        if (this.isEditingSelf) {\n            this.alertService.showMessage('Success', 'Changes to your User Profile was saved successfully', MessageSeverity.success);\n            this.refreshLoggedInUser();\n        }\n\n        this.isEditMode = false;\n\n\n        if (this.changesSavedCallback) {\n            this.changesSavedCallback();\n        }\n    }\n\n\n    private saveFailedHelper(error: any) {\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.alertService.showStickyMessage('Save Error', 'The below errors occured whilst saving your changes:', MessageSeverity.error, error);\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\n\n        if (this.changesFailedCallback) {\n            this.changesFailedCallback();\n        }\n    }\n\n\n\n    private testIsRoleUserCountChanged(currentUser: User, editedUser: User) {\n\n        const rolesAdded = this.isNewUser ? editedUser.roles : editedUser.roles.filter(role => currentUser.roles.indexOf(role) == -1);\n        const rolesRemoved = this.isNewUser ? [] : currentUser.roles.filter(role => editedUser.roles.indexOf(role) == -1);\n\n        const modifiedRoles = rolesAdded.concat(rolesRemoved);\n\n        if (modifiedRoles.length) {\n            setTimeout(() => this.accountService.onRolesUserCountChanged(modifiedRoles));\n        }\n    }\n\n\n\n    cancel() {\n        if (this.isGeneralEditor) {\n            this.userEdit = this.user = new UserEdit();\n        } else {\n            this.userEdit = new UserEdit();\n        }\n\n        this.showValidationErrors = false;\n        this.resetForm();\n\n        this.alertService.showMessage('Cancelled', 'Operation cancelled by user', MessageSeverity.default);\n        this.alertService.resetStickyMessage();\n\n        if (!this.isGeneralEditor) {\n            this.isEditMode = false;\n        }\n\n        if (this.changesCancelledCallback) {\n            this.changesCancelledCallback();\n        }\n    }\n\n\n    close() {\n        this.userEdit = this.user = new UserEdit();\n        this.showValidationErrors = false;\n        this.resetForm();\n        this.isEditMode = false;\n\n        if (this.changesSavedCallback) {\n            this.changesSavedCallback();\n        }\n    }\n\n\n\n    private refreshLoggedInUser() {\n        this.accountService.refreshLoggedInUser()\n            .subscribe(user => {\n                this.loadCurrentUserData();\n            },\n                error => {\n                    this.alertService.resetStickyMessage();\n                    this.alertService.showStickyMessage('Refresh failed', 'An error occured whilst refreshing logged in user information from the server', MessageSeverity.error, error);\n                });\n    }\n\n\n    changePassword() {\n        this.isChangePassword = true;\n    }\n\n\n    unlockUser() {\n        this.isSaving = true;\n        this.alertService.startLoadingMessage('Unblocking user...');\n\n\n        this.accountService.unblockUser(this.userEdit.id)\n            .subscribe(() => {\n                this.isSaving = false;\n                this.userEdit.isLockedOut = false;\n                this.alertService.stopLoadingMessage();\n                this.alertService.showMessage('Success', 'User has been successfully unblocked', MessageSeverity.success);\n            },\n                error => {\n                    this.isSaving = false;\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Unblock Error', 'The below errors occured whilst unblocking the user:', MessageSeverity.error, error);\n                    this.alertService.showStickyMessage(error, null, MessageSeverity.error);\n                });\n    }\n\n\n    resetForm(replace = false) {\n        this.isChangePassword = false;\n\n        if (!replace) {\n            this.form.reset();\n        } else {\n            this.formResetToggle = false;\n\n            setTimeout(() => {\n                this.formResetToggle = true;\n            });\n        }\n    }\n\n\n    newUser(allRoles: Role[]) {\n        this.isGeneralEditor = true;\n        this.isNewUser = true;\n\n        this.allRoles = [...allRoles];\n        this.user = this.userEdit = new UserEdit();\n        this.userEdit.isEnabled = true;\n        this.edit();\n\n        return this.userEdit;\n    }\n\n    editUser(user: User, allRoles: Role[]) {\n        if (user) {\n            this.isGeneralEditor = true;\n            this.isNewUser = false;\n\n            this.setRoles(user, allRoles);\n            this.user = new User();\n            this.userEdit = new UserEdit();\n            Object.assign(this.user, user);\n            Object.assign(this.userEdit, user);\n            this.edit();\n\n            return this.userEdit;\n        } else {\n            return this.newUser(allRoles);\n        }\n    }\n\n\n    displayUser(user: User, allRoles?: Role[]) {\n\n        this.user = new User();\n        Object.assign(this.user, user);\n        this.deletePasswordFromUser(this.user);\n        this.setRoles(user, allRoles);\n\n        this.isEditMode = false;\n    }\n\n\n\n    private setRoles(user: User, allRoles?: Role[]) {\n\n        this.allRoles = allRoles ? [...allRoles] : [];\n\n        if (user.roles) {\n            for (const ur of user.roles) {\n                if (!this.allRoles.some(r => r.name == ur)) {\n                    this.allRoles.unshift(new Role(ur));\n                }\n            }\n        }\n\n        if (allRoles == null || this.allRoles.length != allRoles.length) {\n            setTimeout(() => {\n                if (this.rolesSelector) {\n                    this.rolesSelector.refresh();\n                }\n            });\n        }\n    }\n\n\n\n    get canViewAllRoles() {\n        return this.accountService.userHasPermission(Permission.viewRolesPermission);\n    }\n\n    get canAssignRoles() {\n        return this.accountService.userHasPermission(Permission.assignRolesPermission);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, AfterViewInit, TemplateRef, ViewChild, Input } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission,\n    User\n} from '@polpware/ngx-oauth2';\n\nimport { AccountService } from '../../services/account.service';\nimport { Role } from '../../models/role.model';\nimport { UserEdit } from '../../models/user-edit.model';\nimport { UserInfoComponent } from '../user-info/user-info.component';\n\n\n@Component({\n    selector: 'users-management',\n    templateUrl: './users-management.component.html',\n    styleUrls: ['./users-management.component.scss']\n})\nexport class UsersManagementComponent implements OnInit, AfterViewInit {\n    columns: any[] = [];\n    rows: User[] = [];\n    rowsCache: User[] = [];\n    editedUser: UserEdit;\n    sourceUser: UserEdit;\n    editingUserName: { name: string };\n    loadingIndicator: boolean;\n\n    allRoles: Role[] = [];\n\n\n    @ViewChild('indexTemplate', { static: true })\n    indexTemplate: TemplateRef<any>;\n\n    @ViewChild('userNameTemplate', { static: true })\n    userNameTemplate: TemplateRef<any>;\n\n    @ViewChild('rolesTemplate', { static: true })\n    rolesTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    @ViewChild('editorModal', { static: true })\n    editorModal: ModalDirective;\n\n    @ViewChild('userEditor', { static: true })\n    userEditor: UserInfoComponent;\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService) {\n    }\n\n\n    ngOnInit() {\n\n        const gT = (key: string) => this.translationService.getTranslation(key);\n\n        this.columns = [\n            { prop: 'index', name: '#', width: 40, cellTemplate: this.indexTemplate, canAutoResize: false },\n            { prop: 'jobTitle', name: gT('users.management.Title'), width: 50 },\n            { prop: 'userName', name: gT('users.management.UserName'), width: 90, cellTemplate: this.userNameTemplate },\n            { prop: 'fullName', name: gT('users.management.FullName'), width: 120 },\n            { prop: 'email', name: gT('users.management.Email'), width: 140 },\n            { prop: 'roles', name: gT('users.management.Roles'), width: 120, cellTemplate: this.rolesTemplate },\n            { prop: 'phoneNumber', name: gT('users.management.PhoneNumber'), width: 100 }\n        ];\n\n        if (this.canManageUsers) {\n            this.columns.push({ name: '', width: 160, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false });\n        }\n\n        this.loadData();\n    }\n\n\n    ngAfterViewInit() {\n\n        this.userEditor.changesSavedCallback = () => {\n            this.addNewUserToList();\n            this.editorModal.hide();\n        };\n\n        this.userEditor.changesCancelledCallback = () => {\n            this.editedUser = null;\n            this.sourceUser = null;\n            this.editorModal.hide();\n        };\n    }\n\n\n    addNewUserToList() {\n        if (this.sourceUser) {\n            Object.assign(this.sourceUser, this.editedUser);\n\n            let sourceIndex = this.rowsCache.indexOf(this.sourceUser, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rowsCache, sourceIndex, 0);\n            }\n\n            sourceIndex = this.rows.indexOf(this.sourceUser, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rows, sourceIndex, 0);\n            }\n\n            this.editedUser = null;\n            this.sourceUser = null;\n        } else {\n            const user = new User();\n            Object.assign(user, this.editedUser);\n            this.editedUser = null;\n\n            let maxIndex = 0;\n            for (const u of this.rowsCache) {\n                if ((u as any).index > maxIndex) {\n                    maxIndex = (u as any).index;\n                }\n            }\n\n            (user as any).index = maxIndex + 1;\n\n            this.rowsCache.splice(0, 0, user);\n            this.rows.splice(0, 0, user);\n            this.rows = [...this.rows];\n        }\n    }\n\n\n    loadData() {\n        this.alertService.startLoadingMessage();\n        this.loadingIndicator = true;\n\n        if (this.canViewRoles) {\n            this.accountService.getUsersAndRoles().subscribe(results => this.onDataLoadSuccessful(results[0], results[1]), error => this.onDataLoadFailed(error));\n        } else {\n            this.accountService.getUsers().subscribe(users => this.onDataLoadSuccessful(users, this.accountService.currentUser.roles.map(x => new Role(x))), error => this.onDataLoadFailed(error));\n        }\n    }\n\n\n    onDataLoadSuccessful(users: User[], roles: Role[]) {\n        this.alertService.stopLoadingMessage();\n        this.loadingIndicator = false;\n\n        users.forEach((user, index, users) => {\n            (user as any).index = index + 1;\n        });\n\n        this.rowsCache = [...users];\n        this.rows = users;\n\n        this.allRoles = roles;\n    }\n\n\n    onDataLoadFailed(error: any) {\n        this.alertService.stopLoadingMessage();\n        this.loadingIndicator = false;\n\n        this.alertService.showStickyMessage('Load Error', `Unable to retrieve users from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n            MessageSeverity.error, error);\n    }\n\n\n    onSearchChanged(value: string) {\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.userName, r.fullName, r.email, r.phoneNumber, r.jobTitle, r.roles));\n    }\n\n    onEditorModalHidden() {\n        this.editingUserName = null;\n        this.userEditor.resetForm(true);\n    }\n\n\n    newUser() {\n        this.editingUserName = null;\n        this.sourceUser = null;\n        this.editedUser = this.userEditor.newUser(this.allRoles);\n        this.editorModal.show();\n    }\n\n\n    editUser(row: UserEdit) {\n        this.editingUserName = { name: row.userName };\n        this.sourceUser = row;\n        this.editedUser = this.userEditor.editUser(row, this.allRoles);\n        this.editorModal.show();\n    }\n\n\n    deleteUser(row: UserEdit) {\n        this.alertService.showDialog('Are you sure you want to delete \\\"' + row.userName + '\\\"?', DialogType.confirm, () => this.deleteUserHelper(row));\n    }\n\n\n    deleteUserHelper(row: UserEdit) {\n\n        this.alertService.startLoadingMessage('Deleting...');\n        this.loadingIndicator = true;\n\n        this.accountService.deleteUser(row)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                this.rowsCache = this.rowsCache.filter(item => item !== row);\n                this.rows = this.rows.filter(item => item !== row);\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the user.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n\n    get canAssignRoles() {\n        return this.accountService.userHasPermission(Permission.assignRolesPermission);\n    }\n\n    get canViewRoles() {\n        return this.accountService.userHasPermission(Permission.viewRolesPermission);\n    }\n\n    get canManageUsers() {\n        return this.accountService.userHasPermission(Permission.manageUsersPermission);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, Attribute, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\n@Directive({\n    selector: '[bootstrapSelect]',\n    exportAs: 'bootstrap-select'\n})\nexport class BootstrapSelectDirective implements OnInit, OnDestroy {\n\n    private oldValues: string | string[] = '';\n\n    private changedSubscription: Subscription;\n    private shownSubscription: Subscription;\n    private hiddenSubscription: Subscription;\n\n    @Input()\n    required: string;\n\n    @Input()\n    set ngModel(values: string | string[]) {\n        setTimeout(() => this.selected = values);\n    }\n\n\n    @Output()\n    ngModelChange = new EventEmitter();\n\n    @Output()\n    shown = new EventEmitter();\n\n    @Output()\n    hidden = new EventEmitter();\n\n\n    constructor(private el: ElementRef) {\n        this.changedSubscription = fromEvent($(this.el.nativeElement), 'changed.bs.select').subscribe((e: any) => setTimeout(() => {\n            if (this.checkIsValuesChanged(this.selected)) {\n                this.ngModelChange.emit(this.selected);\n            }\n        }));\n        this.shownSubscription = fromEvent($(this.el.nativeElement), 'shown.bs.select').subscribe((e: any) => setTimeout(() => this.shown.emit()));\n        this.hiddenSubscription = fromEvent($(this.el.nativeElement), 'hidden.bs.select').subscribe((e: any) => setTimeout(() => this.hidden.emit()));\n    }\n\n\n    ngOnInit() {\n        $(this.el.nativeElement).selectpicker();\n\n        if (this.requiredAttribute) {\n            $(this.el.nativeElement).selectpicker('setStyle', 'required', 'add');\n        }\n\n        setTimeout(() => {\n            this.refresh();\n            this.doValidation();\n        });\n\n    }\n\n    ngOnDestroy() {\n        if (this.changedSubscription) {\n            this.changedSubscription.unsubscribe();\n        }\n\n        if (this.shownSubscription) {\n            this.shownSubscription.unsubscribe();\n        }\n\n        if (this.hiddenSubscription) {\n            this.hiddenSubscription.unsubscribe();\n        }\n\n        $(this.el.nativeElement).selectpicker('destroy');\n    }\n\n    private checkIsValuesChanged(newValue: string | string[]) {\n        return !(newValue == this.oldValues ||\n            (newValue instanceof Array && newValue.length === this.oldValues.length && newValue.every((v, i) => v === this.oldValues[i])));\n    }\n\n    private doValidation() {\n        if (this.requiredAttribute) {\n            $(this.el.nativeElement).selectpicker('setStyle', !this.valid ? 'ng-valid' : 'ng-invalid', 'remove');\n            $(this.el.nativeElement).selectpicker('setStyle', this.valid ? 'ng-valid' : 'ng-invalid', 'add');\n        }\n    }\n\n    private get requiredAttribute() {\n        return this.required === '' || this.required == 'true';\n    }\n\n\n    refresh() {\n        setTimeout(() => {\n            $(this.el.nativeElement).selectpicker('refresh');\n        });\n    }\n\n    render() {\n        setTimeout(() => {\n            $(this.el.nativeElement).selectpicker('render');\n        });\n    }\n\n\n    get valid(): boolean {\n        return this.requiredAttribute ? this.selected && this.selected.length > 0 : true;\n    }\n\n\n    set selected(values: string | string[]) {\n\n        if (!this.checkIsValuesChanged(values)) {\n            return;\n        }\n\n        this.oldValues = this.selected;\n        $(this.el.nativeElement).selectpicker('val', values);\n        this.doValidation();\n    }\n\n\n    get selected(): string | string[] {\n        return $(this.el.nativeElement).selectpicker('val');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService,\n    LocalStoreManager,\n    ConfigurationService,\n    ThemeManager\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    AuthService,\n    Permission\n} from '@polpware/ngx-oauth2';\n\nimport { BootstrapSelectDirective } from '../../directives/bootstrap-select.directive';\nimport { AccountService } from '../../services/account.service';\n\n@Component({\n    selector: 'user-preferences',\n    templateUrl: './user-preferences.component.html',\n    styleUrls: ['./user-preferences.component.scss']\n})\nexport class UserPreferencesComponent implements OnInit, OnDestroy {\n\n    themeSelectorToggle = true;\n\n    languageChangedSubscription: any;\n\n    @ViewChild('languageSelector', { static: true })\n    languageSelector: BootstrapSelectDirective;\n\n    @ViewChild('homePageSelector', { static: true })\n    homePageSelector: BootstrapSelectDirective;\n\n    constructor(\n        private alertService: AlertService,\n        private translationService: AppTranslationService,\n        private accountService: AccountService,\n        public themeManager: ThemeManager,\n        public configurations: ConfigurationService) {\n    }\n\n    ngOnInit() {\n        this.languageChangedSubscription = this.translationService.languageChanged$.subscribe(data => {\n            this.themeSelectorToggle = false;\n\n            setTimeout(() => {\n                this.languageSelector.refresh();\n                this.homePageSelector.refresh();\n                this.themeSelectorToggle = true;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.languageChangedSubscription.unsubscribe();\n    }\n\n\n\n    reloadFromServer() {\n        this.alertService.startLoadingMessage();\n\n        this.accountService.getUserPreferences()\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n\n                this.configurations.import(results);\n\n                this.alertService.showMessage('Defaults loaded!', '', MessageSeverity.info);\n\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Load Error', `Unable to retrieve user preferences from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n    setAsDefault() {\n        this.alertService.showDialog('Are you sure you want to set the current configuration as your new defaults?', DialogType.confirm,\n            () => this.setAsDefaultHelper(),\n            () => this.alertService.showMessage('Operation Cancelled!', '', MessageSeverity.default));\n    }\n\n    setAsDefaultHelper() {\n        this.alertService.startLoadingMessage('', 'Saving new defaults');\n\n        this.accountService.updateUserPreferences(this.configurations.export())\n            .subscribe(response => {\n                this.alertService.stopLoadingMessage();\n                this.alertService.showMessage('New Defaults', 'Account defaults updated successfully', MessageSeverity.success);\n\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Save Error', `An error occured whilst saving configuration defaults.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n\n    resetDefault() {\n        this.alertService.showDialog('Are you sure you want to reset your defaults?', DialogType.confirm,\n            () => this.resetDefaultHelper(),\n            () => this.alertService.showMessage('Operation Cancelled!', '', MessageSeverity.default));\n    }\n\n    resetDefaultHelper() {\n        this.alertService.startLoadingMessage('', 'Resetting defaults');\n\n        this.accountService.updateUserPreferences(null)\n            .subscribe(response => {\n                this.alertService.stopLoadingMessage();\n                this.configurations.import(null);\n                this.alertService.showMessage('Defaults Reset', 'Account defaults reset completed successfully', MessageSeverity.success);\n\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Save Error', `An error occured whilst resetting configuration defaults.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    get canViewCustomers() {\n        return this.accountService.userHasPermission(Permission.viewUsersPermission); // eg. viewCustomersPermission\n    }\n\n    get canViewProducts() {\n        return this.accountService.userHasPermission(Permission.viewUsersPermission); // eg. viewProductsPermission\n    }\n\n    get canViewOrders() {\n        return true; // eg. viewOrdersPermission\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, ViewChild } from '@angular/core';\n\nimport {\n    MessageSeverity\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission\n} from '@polpware/ngx-oauth2';\n\n\nimport { AccountService } from '../../services/account.service';\nimport { Role } from '../../models/role.model';\n\n@Component({\n    selector: 'role-editor',\n    templateUrl: './role-editor.component.html',\n    styleUrls: ['./role-editor.component.scss']\n})\nexport class RoleEditorComponent {\n\n    private isNewRole = false;\n    public isSaving: boolean;\n    public showValidationErrors = true;\n    public roleEdit: Role = new Role();\n    public allPermissions: Permission[] = [];\n    public selectedValues: { [key: string]: boolean; } = {};\n    private editingRoleName: string;\n\n    public formResetToggle = true;\n\n    public changesSavedCallback: () => void;\n    public changesFailedCallback: () => void;\n    public changesCancelledCallback: () => void;\n\n\n    @ViewChild('f', { static: false })\n    private form;\n\n\n\n    constructor(private alertService: AlertService, private accountService: AccountService) {\n    }\n\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n\n    save() {\n        this.isSaving = true;\n        this.alertService.startLoadingMessage('Saving changes...');\n\n        this.roleEdit.permissions = this.getSelectedPermissions();\n\n        if (this.isNewRole) {\n            this.accountService.newRole(this.roleEdit).subscribe(role => this.saveSuccessHelper(role), error => this.saveFailedHelper(error));\n        } else {\n            this.accountService.updateRole(this.roleEdit).subscribe(response => this.saveSuccessHelper(), error => this.saveFailedHelper(error));\n        }\n    }\n\n\n\n\n    private saveSuccessHelper(role?: Role) {\n        if (role) {\n            Object.assign(this.roleEdit, role);\n        }\n\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.showValidationErrors = false;\n\n        if (this.isNewRole) {\n            this.alertService.showMessage('Success', `Role \\\"${this.roleEdit.name}\\\" was created successfully`, MessageSeverity.success);\n        } else {\n            this.alertService.showMessage('Success', `Changes to role \\\"${this.roleEdit.name}\\\" was saved successfully`, MessageSeverity.success);\n        }\n\n\n        this.roleEdit = new Role();\n        this.resetForm();\n\n\n        if (!this.isNewRole && this.accountService.currentUser.roles.some(r => r == this.editingRoleName)) {\n            this.refreshLoggedInUser();\n        }\n\n        if (this.changesSavedCallback) {\n            this.changesSavedCallback();\n        }\n    }\n\n\n    private refreshLoggedInUser() {\n        this.accountService.refreshLoggedInUser()\n            .subscribe(user => { },\n                error => {\n                    this.alertService.resetStickyMessage();\n                    this.alertService.showStickyMessage('Refresh failed', 'An error occured whilst refreshing logged in user information from the server', MessageSeverity.error, error);\n                });\n    }\n\n\n\n    private saveFailedHelper(error: any) {\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.alertService.showStickyMessage('Save Error', 'The below errors occured whilst saving your changes:', MessageSeverity.error, error);\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\n\n        if (this.changesFailedCallback) {\n            this.changesFailedCallback();\n        }\n    }\n\n\n    cancel() {\n        this.roleEdit = new Role();\n\n        this.showValidationErrors = false;\n        this.resetForm();\n\n        this.alertService.showMessage('Cancelled', 'Operation cancelled by user', MessageSeverity.default);\n        this.alertService.resetStickyMessage();\n\n        if (this.changesCancelledCallback) {\n            this.changesCancelledCallback();\n        }\n    }\n\n\n\n    selectAll() {\n        this.allPermissions.forEach(p => this.selectedValues[p.value] = true);\n    }\n\n\n    selectNone() {\n        this.allPermissions.forEach(p => this.selectedValues[p.value] = false);\n    }\n\n\n    toggleGroup(groupName: string) {\n        let firstMemberValue: boolean;\n\n        this.allPermissions.forEach(p => {\n            if (p.groupName != groupName) {\n                return;\n            }\n\n            if (firstMemberValue == null) {\n                firstMemberValue = this.selectedValues[p.value] == true;\n            }\n\n            this.selectedValues[p.value] = !firstMemberValue;\n        });\n    }\n\n\n    private getSelectedPermissions() {\n        return this.allPermissions.filter(p => this.selectedValues[p.value] == true);\n    }\n\n\n    resetForm(replace = false) {\n\n        if (!replace) {\n            this.form.reset();\n        } else {\n            this.formResetToggle = false;\n\n            setTimeout(() => {\n                this.formResetToggle = true;\n            });\n        }\n    }\n\n\n    newRole(allPermissions: Permission[]) {\n        this.isNewRole = true;\n        this.showValidationErrors = true;\n\n        this.editingRoleName = null;\n        this.allPermissions = allPermissions;\n        this.selectedValues = {};\n        this.roleEdit = new Role();\n\n        return this.roleEdit;\n    }\n\n    editRole(role: Role, allPermissions: Permission[]) {\n        if (role) {\n            this.isNewRole = false;\n            this.showValidationErrors = true;\n\n            this.editingRoleName = role.name;\n            this.allPermissions = allPermissions;\n            this.selectedValues = {};\n            role.permissions.forEach(p => this.selectedValues[p.value] = true);\n            this.roleEdit = new Role();\n            Object.assign(this.roleEdit, role);\n\n            return this.roleEdit;\n        } else {\n            return this.newRole(allPermissions);\n        }\n    }\n\n\n\n    get canManageRoles() {\n        return this.accountService.userHasPermission(Permission.manageRolesPermission);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, AfterViewInit, TemplateRef, ViewChild, Input } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\n\nimport {\n    AlertService,\n    AppTranslationService,\n    LocalStoreManager,\n    ConfigurationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission\n} from '@polpware/ngx-oauth2';\n\nimport { AccountService } from '../../services/account.service';\nimport { Role } from '../../models/role.model';\nimport { RoleEditorComponent } from '../role-editor/role-editor.component';\n\n\n@Component({\n    selector: 'roles-management',\n    templateUrl: './roles-management.component.html',\n    styleUrls: ['./roles-management.component.scss']\n})\nexport class RolesManagementComponent implements OnInit, AfterViewInit {\n    columns: any[] = [];\n    rows: Role[] = [];\n    rowsCache: Role[] = [];\n    allPermissions: Permission[] = [];\n    editedRole: Role;\n    sourceRole: Role;\n    editingRoleName: { name: string };\n    loadingIndicator: boolean;\n\n\n\n    @ViewChild('indexTemplate', { static: true })\n    indexTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    @ViewChild('editorModal', { static: true })\n    editorModal: ModalDirective;\n\n    @ViewChild('roleEditor', { static: true })\n    roleEditor: RoleEditorComponent;\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService) {\n    }\n\n\n    ngOnInit() {\n\n        const gT = (key: string) => this.translationService.getTranslation(key);\n\n        this.columns = [\n            { prop: 'index', name: '#', width: 50, cellTemplate: this.indexTemplate, canAutoResize: false },\n            { prop: 'name', name: gT('roles.management.Name'), width: 180 },\n            { prop: 'description', name: gT('roles.management.Description'), width: 320 },\n            { prop: 'usersCount', name: gT('roles.management.Users'), width: 50 },\n            { name: '', width: 160, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\n        ];\n\n        this.loadData();\n    }\n\n\n\n\n\n    ngAfterViewInit() {\n\n        this.roleEditor.changesSavedCallback = () => {\n            this.addNewRoleToList();\n            this.editorModal.hide();\n        };\n\n        this.roleEditor.changesCancelledCallback = () => {\n            this.editedRole = null;\n            this.sourceRole = null;\n            this.editorModal.hide();\n        };\n    }\n\n\n    addNewRoleToList() {\n        if (this.sourceRole) {\n            Object.assign(this.sourceRole, this.editedRole);\n\n            let sourceIndex = this.rowsCache.indexOf(this.sourceRole, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rowsCache, sourceIndex, 0);\n            }\n\n            sourceIndex = this.rows.indexOf(this.sourceRole, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rows, sourceIndex, 0);\n            }\n\n            this.editedRole = null;\n            this.sourceRole = null;\n        } else {\n            const role = new Role();\n            Object.assign(role, this.editedRole);\n            this.editedRole = null;\n\n            let maxIndex = 0;\n            for (const r of this.rowsCache) {\n                if ((r as any).index > maxIndex) {\n                    maxIndex = (r as any).index;\n                }\n            }\n\n            (role as any).index = maxIndex + 1;\n\n            this.rowsCache.splice(0, 0, role);\n            this.rows.splice(0, 0, role);\n            this.rows = [...this.rows];\n        }\n    }\n\n\n\n\n    loadData() {\n        this.alertService.startLoadingMessage();\n        this.loadingIndicator = true;\n\n        this.accountService.getRolesAndPermissions()\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                const roles = results[0];\n                const permissions = results[1];\n\n                roles.forEach((role, index, roles) => {\n                    (role as any).index = index + 1;\n                });\n\n\n                this.rowsCache = [...roles];\n                this.rows = roles;\n\n                this.allPermissions = permissions;\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Load Error', `Unable to retrieve roles from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    onSearchChanged(value: string) {\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.name, r.description));\n    }\n\n\n    onEditorModalHidden() {\n        this.editingRoleName = null;\n        this.roleEditor.resetForm(true);\n    }\n\n\n    newRole() {\n        this.editingRoleName = null;\n        this.sourceRole = null;\n        this.editedRole = this.roleEditor.newRole(this.allPermissions);\n        this.editorModal.show();\n    }\n\n\n    editRole(row: Role) {\n        this.editingRoleName = { name: row.name };\n        this.sourceRole = row;\n        this.editedRole = this.roleEditor.editRole(row, this.allPermissions);\n        this.editorModal.show();\n    }\n\n    deleteRole(row: Role) {\n        this.alertService.showDialog('Are you sure you want to delete the \\\"' + row.name + '\\\" role?', DialogType.confirm, () => this.deleteRoleHelper(row));\n    }\n\n\n    deleteRoleHelper(row: Role) {\n\n        this.alertService.startLoadingMessage('Deleting...');\n        this.loadingIndicator = true;\n\n        this.accountService.deleteRole(row)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                this.rowsCache = this.rowsCache.filter(item => item !== row);\n                this.rows = this.rows.filter(item => item !== row);\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the role.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    get canManageRoles() {\n        return this.accountService.userHasPermission(Permission.manageRolesPermission);\n    }\n\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService,\n    LocalStoreManager\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    AuthService,\n    Permission,\n} from '@polpware/ngx-oauth2';\n\n\n@Component({\n    selector: 'todo-demo',\n    templateUrl: './todo-demo.component.html',\n    styleUrls: ['./todo-demo.component.scss']\n})\nexport class TodoDemoComponent implements OnInit, OnDestroy {\n    public static readonly DBKeyTodoDemo = 'todo-demo.todo_list';\n\n    rows = [];\n    rowsCache = [];\n    columns = [];\n    editing = {};\n    taskEdit: any = {};\n    isDataLoaded = false;\n    loadingIndicator = true;\n    formResetToggle = true;\n    _currentUserId: string;\n    _hideCompletedTasks = false;\n\n\n    get currentUserId() {\n        if (this.authService.currentUser) {\n            this._currentUserId = this.authService.currentUser.id;\n        }\n\n        return this._currentUserId;\n    }\n\n\n    set hideCompletedTasks(value: boolean) {\n\n        if (value) {\n            this.rows = this.rowsCache.filter(r => !r.completed);\n        } else {\n            this.rows = [...this.rowsCache];\n        }\n\n\n        this._hideCompletedTasks = value;\n    }\n\n    get hideCompletedTasks() {\n        return this._hideCompletedTasks;\n    }\n\n\n    @Input()\n    verticalScrollbar = false;\n\n\n    @ViewChild('statusHeaderTemplate', { static: true })\n    statusHeaderTemplate: TemplateRef<any>;\n\n    @ViewChild('statusTemplate', { static: true })\n    statusTemplate: TemplateRef<any>;\n\n    @ViewChild('nameTemplate', { static: true })\n    nameTemplate: TemplateRef<any>;\n\n    @ViewChild('descriptionTemplate', { static: true })\n    descriptionTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    @ViewChild('editorModal', { static: true })\n    editorModal: ModalDirective;\n\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private localStorage: LocalStoreManager, private authService: AuthService) {\n    }\n\n\n\n    ngOnInit() {\n        this.loadingIndicator = true;\n\n        this.fetch((data) => {\n            this.refreshDataIndexes(data);\n            this.rows = data;\n            this.rowsCache = [...data];\n            this.isDataLoaded = true;\n\n            setTimeout(() => { this.loadingIndicator = false; }, 1500);\n        });\n\n\n        const gT = (key: string) => this.translationService.getTranslation(key);\n\n        this.columns = [\n            { prop: 'completed', name: '', width: 30, headerTemplate: this.statusHeaderTemplate, cellTemplate: this.statusTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\n            { prop: 'name', name: gT('todoDemo.management.Task'), cellTemplate: this.nameTemplate, width: 200 },\n            { prop: 'description', name: gT('todoDemo.management.Description'), cellTemplate: this.descriptionTemplate, width: 500 },\n            { name: '', width: 80, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\n        ];\n    }\n\n    ngOnDestroy() {\n        this.saveToDisk();\n    }\n\n\n\n    fetch(cb) {\n        let data = this.getFromDisk();\n\n        if (data == null) {\n            setTimeout(() => {\n\n                data = this.getFromDisk();\n\n                if (data == null) {\n                    data = [\n                        { completed: true, important: true, name: 'Create visual studio extension', description: 'Create a visual studio VSIX extension package that will add this project as an aspnet-core project template' },\n                        { completed: false, important: true, name: 'Do a quick how-to writeup', description: '' },\n                        {\n                            completed: false, important: false, name: 'Create aspnet-core/Angular8 tutorials based on this project', description: 'Create tutorials (blog/video/youtube) on how to build applications (full stack)' +\n                                ' using aspnet-core/Angular8. The tutorial will focus on getting productive with the technology right away rather than the details on how and why they work so audience can get onboard quickly.'\n                        },\n                    ];\n                }\n\n                cb(data);\n            }, 1000);\n        } else {\n            cb(data);\n        }\n    }\n\n\n    refreshDataIndexes(data) {\n        let index = 0;\n\n        for (const i of data) {\n            i.$$index = index++;\n        }\n    }\n\n\n    onSearchChanged(value: string) {\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.name, r.description) || value == 'important' && r.important || value == 'not important' && !r.important);\n    }\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n\n    addTask() {\n        this.formResetToggle = false;\n\n        setTimeout(() => {\n            this.formResetToggle = true;\n\n            this.taskEdit = {};\n            this.editorModal.show();\n        });\n    }\n\n    save() {\n        this.rowsCache.splice(0, 0, this.taskEdit);\n        this.rows.splice(0, 0, this.taskEdit);\n        this.refreshDataIndexes(this.rowsCache);\n        this.rows = [...this.rows];\n\n        this.saveToDisk();\n        this.editorModal.hide();\n    }\n\n\n    updateValue(event, cell, cellValue, row) {\n        this.editing[row.$$index + '-' + cell] = false;\n        this.rows[row.$$index][cell] = event.target.value;\n        this.rows = [...this.rows];\n\n        this.saveToDisk();\n    }\n\n\n    delete(row) {\n        this.alertService.showDialog('Are you sure you want to delete the task?', DialogType.confirm, () => this.deleteHelper(row));\n    }\n\n\n    deleteHelper(row) {\n        this.rowsCache = this.rowsCache.filter(item => item !== row);\n        this.rows = this.rows.filter(item => item !== row);\n\n        this.saveToDisk();\n    }\n\n    getFromDisk() {\n        return this.localStorage.getDataObject(`${TodoDemoComponent.DBKeyTodoDemo}:${this.currentUserId}`);\n    }\n\n    saveToDisk() {\n        if (this.isDataLoaded) {\n            this.localStorage.saveSyncedSessionData(this.rowsCache, `${TodoDemoComponent.DBKeyTodoDemo}:${this.currentUserId}`);\n        }\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, ViewChild, ElementRef, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'search-box',\n    templateUrl: './search-box.component.html',\n    styleUrls: ['./search-box.component.scss']\n})\nexport class SearchBoxComponent {\n\n    @Input()\n    placeholder = 'Search...';\n\n    @Output()\n    searchChange = new EventEmitter<string>();\n\n    @ViewChild('searchInput', { static: true })\n    searchInput: ElementRef;\n\n\n    onValueChange(value: string) {\n        setTimeout(() => this.searchChange.emit(value));\n    }\n\n\n    clear() {\n        this.searchInput.nativeElement.value = '';\n        this.onValueChange(this.searchInput.nativeElement.value);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription, Observable, fromEvent, of, merge } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nimport {\n    DialogType, MessageSeverity\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\n\nrequire('chart.js');\n\n\n\n@Component({\n    selector: 'statistics-demo',\n    templateUrl: './statistics-demo.component.html',\n    styleUrls: ['./statistics-demo.component.scss']\n})\nexport class StatisticsDemoComponent implements OnInit, OnDestroy {\n\n    chartData = [\n        { data: [65, 59, 80, 81, 56, 55], label: 'Series A' },\n        { data: [28, 48, 40, 19, 86, 27], label: 'Series B' },\n        { data: [18, 48, 77, 9, 100, 27], label: 'Series C' }\n    ];\n    chartLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n    chartOptions = {\n        responsive: true,\n        title: {\n            display: false,\n            fontSize: 16,\n            text: 'Important Stuff'\n        }\n    };\n    chartColors = [\n        { // grey\n            backgroundColor: 'rgba(148,159,177,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        },\n        { // dark grey\n            backgroundColor: 'rgba(77,83,96,0.2)',\n            borderColor: 'rgba(77,83,96,1)',\n            pointBackgroundColor: 'rgba(77,83,96,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(77,83,96,1)'\n        },\n        { // something else\n            backgroundColor: 'rgba(128,128,128,0.2)',\n            borderColor: 'rgba(128,128,128,1)',\n            pointBackgroundColor: 'rgba(128,128,128,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(128,128,128,0.8)'\n        }\n    ];\n    chartLegend = true;\n    chartType = 'line';\n\n    timerReference: any;\n    windowWidth$: Observable<number>;\n    windowWidthSub: Subscription;\n\n\n    constructor(private alertService: AlertService) {\n\n    }\n\n\n    ngOnInit() {\n        this.timerReference = setInterval(() => this.randomize(), 5000);\n\n        const initialWidth$ = of(window.innerWidth);\n        const resizedWidth$ = fromEvent(window, 'resize').pipe(map((event: any) => event.target.innerWidth as number));\n        this.windowWidth$ = merge(initialWidth$, resizedWidth$).pipe(distinctUntilChanged());\n\n        this.windowWidthSub = this.windowWidth$.subscribe(width => this.chartLegend = width < 600 ? false : true);\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.timerReference);\n        this.windowWidthSub.unsubscribe();\n    }\n\n\n\n    randomize(): void {\n        const _chartData = new Array(this.chartData.length);\n        for (let i = 0; i < this.chartData.length; i++) {\n            _chartData[i] = { data: new Array(this.chartData[i].data.length), label: this.chartData[i].label };\n\n            for (let j = 0; j < this.chartData[i].data.length; j++) {\n                _chartData[i].data[j] = Math.floor((Math.random() * 100) + 1);\n            }\n        }\n\n        this.chartData = _chartData;\n    }\n\n    changeChartType(type: string) {\n        this.chartType = type;\n    }\n\n    showMessage(msg: string): void {\n        this.alertService.showMessage('Demo', msg, MessageSeverity.info);\n    }\n\n    showDialog(msg: string): void {\n        this.alertService.showDialog(msg, DialogType.prompt, (val) => this.configure(true, val), () => this.configure(false));\n    }\n\n    configure(response: boolean, value?: string) {\n\n        if (response) {\n\n            this.alertService.showStickyMessage('Simulating...', '', MessageSeverity.wait);\n\n            setTimeout(() => {\n\n                this.alertService.resetStickyMessage();\n                this.alertService.showMessage('Demo', `Your settings was successfully configured to \\\"${value}\\\"`, MessageSeverity.success);\n            }, 2000);\n        } else {\n            this.alertService.showMessage('Demo', 'Operation cancelled by user', MessageSeverity.default);\n        }\n    }\n\n    chartClicked(e): void {\n        console.log(e);\n    }\n\n    chartHovered(e): void {\n        console.log(e);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, Output, EventEmitter, OnDestroy, NgZone } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\ninterface eventArg { type: string; target: Element; relatedTarget: Element; }\n\n@Directive({\n    selector: '[bootstrapTab]',\n    exportAs: 'bootstrap-tab'\n})\nexport class BootstrapTabDirective implements OnDestroy {\n\n\n    @Output()\n    showBSTab = new EventEmitter<eventArg>();\n\n    @Output()\n    hideBSTab = new EventEmitter<eventArg>();\n\n    private tabShownSubscription: Subscription;\n    private tabHiddenSubscription: Subscription;\n\n\n    constructor(private el: ElementRef, private zone: NgZone) {\n\n        this.tabShownSubscription = fromEvent($(this.el.nativeElement), 'show.bs.tab')\n            .subscribe((e: any) => {\n                this.runInZone(() => this.showBSTab.emit({ type: e.type, target: e.target, relatedTarget: e.relatedTarget }));\n            });\n\n        this.tabHiddenSubscription = fromEvent($(this.el.nativeElement), 'hidden.bs.tab')\n            .subscribe((e: any) => {\n                this.runInZone(() => this.hideBSTab.emit({ type: e.type, target: e.target, relatedTarget: e.relatedTarget }));\n            });\n    }\n\n\n    ngOnDestroy() {\n        this.tabShownSubscription.unsubscribe();\n        this.tabHiddenSubscription.unsubscribe();\n    }\n\n\n    private runInZone(delegate: () => any) {\n        this.zone.run(() => {\n            delegate();\n        });\n    }\n\n\n    show(selector: string) {\n        $(selector).tab('show');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\n\nimport { Permission } from '@polpware/ngx-oauth2';\n\nimport { fadeInOut } from '../../services/animations';\nimport { BootstrapTabDirective } from '../../directives/bootstrap-tab.directive';\nimport { AccountService } from '../../services/account.service';\n\n\n@Component({\n    selector: 'settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.scss'],\n    animations: [fadeInOut]\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n\n    isProfileActivated = true;\n    isPreferencesActivated = false;\n    isUsersActivated = false;\n    isRolesActivated = false;\n\n    fragmentSubscription: any;\n\n    readonly profileTab = 'profile';\n    readonly preferencesTab = 'preferences';\n    readonly usersTab = 'users';\n    readonly rolesTab = 'roles';\n\n\n    @ViewChild('tab', { static: true })\n    tab: BootstrapTabDirective;\n\n\n    constructor(private router: Router, private route: ActivatedRoute, private accountService: AccountService) {\n    }\n\n\n    ngOnInit() {\n        this.fragmentSubscription = this.route.fragment.subscribe(anchor => this.showContent(anchor));\n    }\n\n\n    ngOnDestroy() {\n        this.fragmentSubscription.unsubscribe();\n    }\n\n    showContent(anchor: string) {\n        if (anchor) {\n            anchor = anchor.toLowerCase();\n        }\n\n        if ((this.isFragmentEquals(anchor, this.usersTab) && !this.canViewUsers) ||\n            (this.isFragmentEquals(anchor, this.rolesTab) && !this.canViewRoles)) {\n            return;\n        }\n\n        this.tab.show(`#${anchor || this.profileTab}Tab`);\n    }\n\n\n    isFragmentEquals(fragment1: string, fragment2: string) {\n\n        if (fragment1 == null) {\n            fragment1 = '';\n        }\n\n        if (fragment2 == null) {\n            fragment2 = '';\n        }\n\n        return fragment1.toLowerCase() == fragment2.toLowerCase();\n    }\n\n\n    onShowTab(event) {\n        const activeTab = event.target.hash.split('#', 2).pop();\n\n        this.isProfileActivated = activeTab == this.profileTab;\n        this.isPreferencesActivated = activeTab == this.preferencesTab;\n        this.isUsersActivated = activeTab == this.usersTab;\n        this.isRolesActivated = activeTab == this.rolesTab;\n\n        this.router.navigate([], { fragment: activeTab });\n    }\n\n\n    get canViewUsers() {\n        return this.accountService.userHasPermission(Permission.viewUsersPermission);\n    }\n\n    get canViewRoles() {\n        return this.accountService.userHasPermission(Permission.viewRolesPermission);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component } from '@angular/core';\nimport { fadeInOut } from '../../services/animations';\n\n@Component({\n    selector: 'not-found',\n    templateUrl: './not-found.component.html',\n    styleUrls: ['./not-found.component.scss'],\n    animations: [fadeInOut]\n})\nexport class NotFoundComponent {\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    ConfigurationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    AuthService,\n    Permission\n} from '@polpware/ngx-oauth2';\n\nimport { UserLogin } from '../../models/user-login.model';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit, OnDestroy {\n\n    userLogin = new UserLogin();\n    isLoading = false;\n    formResetToggle = true;\n    modalClosedCallback: () => void;\n    loginStatusSubscription: any;\n\n    @Input()\n    isModal = false;\n\n\n    constructor(private alertService: AlertService, private authService: AuthService, private configurations: ConfigurationService) {\n\n    }\n\n\n    ngOnInit() {\n\n        this.userLogin.rememberMe = this.authService.rememberMe;\n\n        if (this.getShouldRedirect()) {\n            this.authService.redirectLoginUser();\n        } else {\n            this.loginStatusSubscription = this.authService.getLoginStatusEvent().subscribe(isLoggedIn => {\n                if (this.getShouldRedirect()) {\n                    this.authService.redirectLoginUser();\n                }\n            });\n        }\n    }\n\n\n    ngOnDestroy() {\n        if (this.loginStatusSubscription) {\n            this.loginStatusSubscription.unsubscribe();\n        }\n    }\n\n\n    getShouldRedirect() {\n        return !this.isModal && this.authService.isLoggedIn && !this.authService.isSessionExpired;\n    }\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n    closeModal() {\n        if (this.modalClosedCallback) {\n            this.modalClosedCallback();\n        }\n    }\n\n\n    login() {\n        this.isLoading = true;\n        this.alertService.startLoadingMessage('', 'Attempting login...');\n\n        this.authService.loginWithPassword(this.userLogin.userName, this.userLogin.password, this.userLogin.rememberMe)\n            .subscribe(\n                user => {\n                    setTimeout(() => {\n                        this.alertService.stopLoadingMessage();\n                        this.isLoading = false;\n                        this.reset();\n\n                        if (!this.isModal) {\n                            this.alertService.showMessage('Login', `Welcome ${user.userName}!`, MessageSeverity.success);\n                        } else {\n                            this.alertService.showMessage('Login', `Session for ${user.userName} restored!`, MessageSeverity.success);\n                            setTimeout(() => {\n                                this.alertService.showStickyMessage('Session Restored', 'Please try your last operation again', MessageSeverity.default);\n                            }, 500);\n\n                            this.closeModal();\n                        }\n                    }, 500);\n                },\n                error => {\n\n                    this.alertService.stopLoadingMessage();\n\n                    if (Utilities.checkNoNetwork(error)) {\n                        this.alertService.showStickyMessage(Utilities.noNetworkMessageCaption, Utilities.noNetworkMessageDetail, MessageSeverity.error, error);\n                        this.offerAlternateHost();\n                    } else {\n                        const errorMessage = Utilities.getHttpResponseMessage(error);\n\n                        if (errorMessage) {\n                            this.alertService.showStickyMessage('Unable to login', this.mapLoginErrorMessage(errorMessage), MessageSeverity.error, error);\n                        } else {\n                            this.alertService.showStickyMessage('Unable to login', 'An error occured whilst logging in, please try again later.\\nError: ' + Utilities.getResponseBody(error), MessageSeverity.error, error);\n                        }\n                    }\n\n                    setTimeout(() => {\n                        this.isLoading = false;\n                    }, 500);\n                });\n    }\n\n\n    offerAlternateHost() {\n\n        if (Utilities.checkIsLocalHost(location.origin) && Utilities.checkIsLocalHost(this.configurations.baseUrl)) {\n            this.alertService.showDialog('Dear Developer!\\nIt appears your backend Web API service is not running...\\n' +\n                'Would you want to temporarily switch to the online Demo API below?(Or specify another)',\n                DialogType.prompt,\n                (value: string) => {\n                    this.configurations.baseUrl = value;\n                    this.configurations.tokenUrl = value;\n                    this.alertService.showStickyMessage('API Changed!', 'The target Web API has been changed to: ' + value, MessageSeverity.warn);\n                },\n                null,\n                null,\n                null,\n                this.configurations.fallbackBaseUrl);\n        }\n    }\n\n\n    mapLoginErrorMessage(error: string) {\n\n        if (error == 'invalid_username_or_password') {\n            return 'Invalid username or password';\n        }\n\n        if (error == 'invalid_grant') {\n            return 'This account has been disabled';\n        }\n\n        return error;\n    }\n\n\n    reset() {\n        this.formResetToggle = false;\n\n        setTimeout(() => {\n            this.formResetToggle = true;\n        });\n    }\n}\n","import {\n    NgModule,\n} from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n// Bootstrap\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { AlertModule } from 'ngx-bootstrap/alert';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ChartsModule } from 'ng2-charts';\n\n@NgModule({\n    imports: [\n    ],\n    declarations: [\n    ],\n    exports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        // Bootstrap, Note that we have imported them in the\n        // core modules (and they are only imported once)\n        BsDropdownModule,\n        TabsModule,\n        PaginationModule,\n        ModalModule,\n        AccordionModule,\n        PopoverModule,\n        TooltipModule,\n        CarouselModule,\n        AlertModule,\n\n        TranslateModule,\n        NgxDatatableModule,\n        ChartsModule\n    ],\n    providers: [\n    ],\n    entryComponents: [\n    ]\n})\nexport class DependencyModule {\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, forwardRef, Attribute } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n\n\n@Directive({\n    selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\n    providers: [\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidator), multi: true }\n    ]\n})\nexport class EqualValidator implements Validator {\n    constructor( @Attribute('validateEqual') public validateEqual: string,\n                 @Attribute('reverse') public reverse: string) {\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        const other = c.root.get(this.validateEqual);\n\n        if (!other) {\n            return null;\n        }\n\n        return this.reverse === 'true' ? this.validateReverse(c, other) : this.validateNoReverse(c, other);\n    }\n\n    private validateNoReverse(c: AbstractControl, other: AbstractControl): { [key: string]: any } {\n        return other.value === c.value ? null : { validateEqual: true };\n    }\n\n    private validateReverse(c: AbstractControl, other: AbstractControl): { [key: string]: any } {\n        if (c.value === other.value) {\n            if (other.errors) {\n                delete other.errors.validateEqual;\n\n                if (Object.keys(other.errors).length == 0) {\n                    other.setErrors(null);\n                }\n            }\n        } else {\n            other.setErrors({ validateEqual: true });\n        }\n\n        return null;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Directive({\n    selector: '[lastElement]'\n})\nexport class LastElementDirective {\n    @Input()\n    set lastElement(isLastElement: boolean) {\n\n        if (isLastElement) {\n            setTimeout(() => {\n                this.lastFunction.emit();\n            });\n        }\n    }\n\n    @Output()\n    lastFunction = new EventEmitter();\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, OnInit } from '@angular/core';\n\n\n@Directive({\n    selector: '[autofocus]'\n})\nexport class AutofocusDirective implements OnInit {\n    constructor(public elementRef: ElementRef) { }\n\n    ngOnInit() {\n        setTimeout(() => this.elementRef.nativeElement.focus(), 500);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\n@Directive({\n    selector: '[bootstrapToggle]',\n    exportAs: 'bootstrap-toggle'\n})\nexport class BootstrapToggleDirective implements OnInit, OnDestroy {\n\n    private checkedSubscription: Subscription;\n\n    @Input()\n    set ngModel(value) {\n        this.toggle(value);\n    }\n\n    @Output()\n    ngModelChange = new EventEmitter();\n\n\n    constructor(private el: ElementRef) {\n        this.checkedSubscription = fromEvent($(this.el.nativeElement), 'change')\n            .subscribe((e: any) => this.ngModelChange.emit(e.target.checked));\n    }\n\n\n    ngOnInit() {\n        this.initialize();\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n\n    initialize(options?: any) {\n        $(this.el.nativeElement).bootstrapToggle(options);\n    }\n\n    destroy() {\n        if (this.checkedSubscription) {\n            this.checkedSubscription.unsubscribe();\n        }\n\n        $(this.el.nativeElement).bootstrapToggle('destroy');\n    }\n\n    toggleOn() {\n        $(this.el.nativeElement).bootstrapToggle('on');\n    }\n\n    toggleOff() {\n        $(this.el.nativeElement).bootstrapToggle('off');\n    }\n\n    toggle(value?: boolean) {\n        if (value == null) {\n            $(this.el.nativeElement).bootstrapToggle('toggle');\n        } else {\n            $(this.el.nativeElement).prop('checked', value).change();\n        }\n    }\n\n    enable() {\n        $(this.el.nativeElement).bootstrapToggle('enable');\n    }\n\n    disable() {\n        $(this.el.nativeElement).bootstrapToggle('disable');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\n@Directive({\n    selector: '[bootstrapDatepicker]',\n    exportAs: 'bootstrap-datepicker'\n})\nexport class BootstrapDatepickerDirective implements OnInit, OnDestroy {\n\n    private _isShown = false;\n    private updateTimeout;\n    private changedSubscription: Subscription;\n    private shownSubscription: Subscription;\n    private hiddenSubscription: Subscription;\n\n    get isShown() {\n        return this._isShown;\n    }\n\n    @Input()\n    options = {};\n\n    @Input()\n    set ngModel(value) {\n        this.tryUpdate(value);\n    }\n\n\n    @Output()\n    ngModelChange = new EventEmitter();\n\n\n    constructor(private el: ElementRef) {\n        this.changedSubscription = fromEvent($(this.el.nativeElement), 'change').subscribe((e: any) => setTimeout(() => this.ngModelChange.emit(e.target.value)));\n        this.shownSubscription = fromEvent($(this.el.nativeElement), 'show').subscribe((e: any) => this._isShown = true);\n        this.hiddenSubscription = fromEvent($(this.el.nativeElement), 'hide').subscribe((e: any) => this._isShown = false);\n    }\n\n\n\n    ngOnInit() {\n        this.initialize(this.options);\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n\n\n\n    initialize(options?: any) {\n        $(this.el.nativeElement).datepicker(options);\n    }\n\n    destroy() {\n        if (this.changedSubscription) {\n            this.changedSubscription.unsubscribe();\n            this.shownSubscription.unsubscribe();\n            this.hiddenSubscription.unsubscribe();\n        }\n\n        $(this.el.nativeElement).datepicker('destroy');\n    }\n\n\n\n    show() {\n        $(this.el.nativeElement).datepicker('show');\n    }\n\n\n    hide() {\n        $(this.el.nativeElement).datepicker('hide');\n    }\n\n\n    toggle() {\n        this.isShown ? this.hide() : this.show();\n    }\n\n\n    private tryUpdate(value) {\n\n        clearTimeout(this.updateTimeout);\n\n        if (!$(this.el.nativeElement).is(':focus')) {\n            this.update(value);\n        } else {\n            this.updateTimeout = setTimeout(() => {\n                this.updateTimeout = null;\n                this.tryUpdate(value);\n            }, 100);\n        }\n    }\n\n    update(value) {\n        setTimeout(() => $(this.el.nativeElement).datepicker('update', value));\n    }\n\n\n    setDate(value) {\n        setTimeout(() => $(this.el.nativeElement).datepicker('setDate', value));\n    }\n\n\n    setUTCDate(value) {\n        setTimeout(() => $(this.el.nativeElement).datepicker('setUTCDate', value));\n    }\n\n\n    clearDates() {\n        setTimeout(() => $(this.el.nativeElement).datepicker('clearDates'));\n    }\n\n\n    getDate() {\n        $(this.el.nativeElement).datepicker('getDate');\n    }\n\n\n    getUTCDate() {\n        $(this.el.nativeElement).datepicker('getUTCDate');\n    }\n}\n","import {\n    ModuleWithProviders, NgModule,\n    Optional, SkipSelf\n} from '@angular/core';\n\nimport {\n    AlertServiceAbstractProvider,\n    ThemeManagerAbstractProvider,\n    ConfigurationServiceAbstractProvider,\n    LocalStoreManagerServiceAbstractProvider,\n    TranslationServiceAbstractProvider\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport { DependencyModule } from './dependency.module';\n\nimport { AlertServiceProvider } from './services/alert.service-provider';\nimport { ThemeManagerProvider } from './services/theme-manager.provider';\nimport { ConfigurationServiceProvider } from './services/configuration.service-provider';\nimport { AppTitleService } from './services/app-title.service';\nimport { TranslationServiceProvider } from './services/translation.service-provider';\nimport { NotificationService } from './services/notification.service';\nimport { NotificationEndpoint } from './services/notification-endpoint.service';\nimport { AccountService } from './services/account.service';\nimport { AccountEndpoint } from './services/account-endpoint.service';\nimport { LocalStoreManagerProvider } from './services/local-storage-manager.service-provider';\n\nimport { EqualValidator } from './directives/equal-validator.directive';\nimport { LastElementDirective } from './directives/last-element.directive';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { BootstrapTabDirective } from './directives/bootstrap-tab.directive';\nimport { BootstrapToggleDirective } from './directives/bootstrap-toggle.directive';\nimport { BootstrapSelectDirective } from './directives/bootstrap-select.directive';\nimport { BootstrapDatepickerDirective } from './directives/bootstrap-datepicker.directive';\n\nimport { GroupByPipe } from './pipes/group-by.pipe';\n\nimport { TodoDemoComponent } from './components/todo-demo/todo-demo.component';\nimport { StatisticsDemoComponent } from './components/statistics-demo/statistics-demo.component';\nimport { NotificationsViewerComponent } from './components/notifications-viewer/notifications-viewer.component';\nimport { SearchBoxComponent } from './components/search-box/search-box.component';\nimport { UserInfoComponent } from './components/user-info/user-info.component';\nimport { UserPreferencesComponent } from './components/user-preferences/user-preferences.component';\nimport { UsersManagementComponent } from './components/users-management/users-management.component';\nimport { RolesManagementComponent } from './components/roles-management/roles-management.component';\nimport { RoleEditorComponent } from './components/role-editor/role-editor.component';\n\nimport { LoginComponent } from './pages/login/login.component';\nimport { SettingsComponent } from './pages/settings/settings.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\n\n@NgModule({\n    declarations: [\n\n        EqualValidator,\n        LastElementDirective,\n        AutofocusDirective,\n        BootstrapTabDirective,\n        BootstrapToggleDirective,\n        BootstrapSelectDirective,\n        BootstrapDatepickerDirective,\n\n        GroupByPipe,\n\n        UsersManagementComponent,\n        UserInfoComponent,\n        UserPreferencesComponent,\n        RolesManagementComponent,\n        RoleEditorComponent,\n        NotificationsViewerComponent,\n        SearchBoxComponent,\n        StatisticsDemoComponent,\n        TodoDemoComponent,\n\n        LoginComponent,\n        SettingsComponent,\n        NotFoundComponent\n    ],\n    imports: [\n        DependencyModule\n    ],\n    exports: [\n        EqualValidator,\n        LastElementDirective,\n        AutofocusDirective,\n        BootstrapTabDirective,\n        BootstrapToggleDirective,\n        BootstrapSelectDirective,\n        BootstrapDatepickerDirective,\n\n        GroupByPipe,\n\n        UsersManagementComponent,\n        UserInfoComponent,\n        UserPreferencesComponent,\n        RolesManagementComponent,\n        RoleEditorComponent,\n        NotificationsViewerComponent,\n        SearchBoxComponent,\n        StatisticsDemoComponent,\n        TodoDemoComponent,\n\n        LoginComponent,\n        SettingsComponent,\n        NotFoundComponent\n    ],\n    providers: [\n        // Services\n        AppTitleService,\n        NotificationService,\n        NotificationEndpoint,\n        AccountService,\n        AccountEndpoint,\n\n        AlertServiceProvider,\n        ThemeManagerProvider,\n        ConfigurationServiceProvider,\n        LocalStoreManagerProvider,\n        TranslationServiceProvider,\n\n        { provide: AlertServiceAbstractProvider, useClass: AlertServiceProvider },\n        { provide: ThemeManagerAbstractProvider, useClass: ThemeManagerProvider },\n        { provide: ConfigurationServiceAbstractProvider, useClass: ConfigurationServiceProvider },\n        { provide: LocalStoreManagerServiceAbstractProvider, useClass: LocalStoreManagerProvider },\n        { provide: TranslationServiceAbstractProvider, useClass: TranslationServiceProvider }\n    ],\n    entryComponents: [\n        LoginComponent\n    ]\n})\nexport class NgxAppkitStarterAlphaModule {\n    constructor(@Optional() @SkipSelf() parentModule: NgxAppkitStarterAlphaModule) {\n        if (parentModule) {\n            throw new Error(\n                'NgxAppkitStarterAlphaModule is already loaded. Import it in the AppModule only');\n        }\n    }\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: NgxAppkitStarterAlphaModule,\n            providers: []\n        };\n    }\n}\n"]}