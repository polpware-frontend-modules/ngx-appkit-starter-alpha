{"version":3,"file":"polpware-ngx-appkit-starter-alpha.js","sources":["ng://@polpware/ngx-appkit-starter-alpha/lib/models/notification.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/role.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/user-edit.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/enums.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/user-login.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/animations.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/configuration.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/theme-manager.provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/account-endpoint.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/account.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/notification-endpoint.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/notification.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/translation.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/app-title.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/alert.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/local-storage-manager.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pipes/group-by.pipe.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/notifications-viewer/notifications-viewer.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/user-info/user-info.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/users-management/users-management.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-select.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/user-preferences/user-preferences.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/role-editor/role-editor.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/roles-management/roles-management.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/todo-demo/todo-demo.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/search-box/search-box.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/statistics-demo/statistics-demo.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-tab.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/settings/settings.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/not-found/not-found.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/login/login.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/dependency.module.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/equal-validator.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/last-element.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/autofocus.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-toggle.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-datepicker.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/ngx-appkit-starter-alpha.module.ts"],"sourcesContent":["// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Utilities } from '@polpware/ngx-appkit-contracts-alpha';\n\n\nexport class Notification {\n\n\n    public id: number;\n    public header: string;\n    public body: string;\n    public isRead: boolean;\n    public isPinned: boolean;\n    public date: Date;\n\n    public static Create(data: {}) {\n        const n = new Notification();\n        Object.assign(n, data);\n\n        if (n.date) {\n            n.date = Utilities.parseDate(n.date);\n        }\n\n        return n;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Permission } from '@polpware/ngx-oauth2';\n\n\nexport class Role {\n\n    constructor(name?: string, description?: string, permissions?: Permission[]) {\n\n        this.name = name;\n        this.description = description;\n        this.permissions = permissions;\n    }\n\n    public id: string;\n    public name: string;\n    public description: string;\n    public usersCount: number;\n    public permissions: Permission[];\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { User } from '@polpware/ngx-oauth2';\n\n\nexport class UserEdit extends User {\n    constructor(currentPassword?: string, newPassword?: string, confirmPassword?: string) {\n        super();\n\n        this.currentPassword = currentPassword;\n        this.newPassword = newPassword;\n        this.confirmPassword = confirmPassword;\n    }\n\n    public currentPassword: string;\n    public newPassword: string;\n    public confirmPassword: string;\n\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport enum Gender {\n    None,\n    Female,\n    Male\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport class UserLogin {\n    constructor(userName?: string, password?: string, rememberMe?: boolean) {\n        this.userName = userName;\n        this.password = password;\n        this.rememberMe = rememberMe;\n    }\n\n    userName: string;\n    password: string;\n    rememberMe: boolean;\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n\n\nexport const fadeInOut = trigger('fadeInOut', [\n    transition(':enter', [style({ opacity: 0 }), animate('0.4s ease-in', style({ opacity: 1 }))]),\n    transition(':leave', [animate('0.4s 10ms ease-out', style({ opacity: 0 }))])\n]);\n\n\n\nexport function flyInOut(duration: number = 0.2) {\n    return trigger('flyInOut', [\n        state('in', style({ opacity: 1, transform: 'translateX(0)' })),\n        transition('void => *', [style({ opacity: 0, transform: 'translateX(-100%)' }), animate(`${duration}s ease-in`)]),\n        transition('* => void', [animate(`${duration}s 10ms ease-out`, style({ opacity: 0, transform: 'translateX(100%)' }))])\n    ]);\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    ConfigurationServiceAbstractProvider,\n    IConfigurationServiceContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    ConfigurationService\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class ConfigurationServiceProvider extends ConfigurationServiceAbstractProvider {\n\n    constructor(private readonly impl: ConfigurationService) {\n        super();\n    }\n\n    get(): IConfigurationServiceContract {\n        return this.impl;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    ThemeManagerAbstractProvider,\n    IThemeManagerContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    ThemeManager\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class ThemeManagerProvider extends ThemeManagerAbstractProvider {\n\n    constructor(private readonly impl: ThemeManager) {\n        super();\n    }\n\n    get(): IThemeManagerContract {\n        return this.impl;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport {\n    AuthService,\n    EndpointBase\n} from '@polpware/ngx-oauth2';\nimport { ConfigurationService } from '@polpware/ngx-appkit-services-alpha';\n\n\n@Injectable()\nexport class AccountEndpoint extends EndpointBase {\n\n    private readonly _usersUrl: string = '/api/account/users';\n    private readonly _userByUserNameUrl: string = '/api/account/users/username';\n    private readonly _currentUserUrl: string = '/api/account/users/me';\n    private readonly _currentUserPreferencesUrl: string = '/api/account/users/me/preferences';\n    private readonly _unblockUserUrl: string = '/api/account/users/unblock';\n    private readonly _rolesUrl: string = '/api/account/roles';\n    private readonly _roleByRoleNameUrl: string = '/api/account/roles/name';\n    private readonly _permissionsUrl: string = '/api/account/permissions';\n\n    get usersUrl() { return this.configurations.baseUrl + this._usersUrl; }\n    get userByUserNameUrl() { return this.configurations.baseUrl + this._userByUserNameUrl; }\n    get currentUserUrl() { return this.configurations.baseUrl + this._currentUserUrl; }\n    get currentUserPreferencesUrl() { return this.configurations.baseUrl + this._currentUserPreferencesUrl; }\n    get unblockUserUrl() { return this.configurations.baseUrl + this._unblockUserUrl; }\n    get rolesUrl() { return this.configurations.baseUrl + this._rolesUrl; }\n    get roleByRoleNameUrl() { return this.configurations.baseUrl + this._roleByRoleNameUrl; }\n    get permissionsUrl() { return this.configurations.baseUrl + this._permissionsUrl; }\n\n\n    constructor(private configurations: ConfigurationService, http: HttpClient, authService: AuthService) {\n        super(http, authService);\n    }\n\n\n    getUserEndpoint<T>(userId?: string): Observable<T> {\n        const endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUserEndpoint(userId));\n            }));\n    }\n\n\n    getUserByUserNameEndpoint<T>(userName: string): Observable<T> {\n        const endpointUrl = `${this.userByUserNameUrl}/${userName}`;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUserByUserNameEndpoint(userName));\n            }));\n    }\n\n\n    getUsersEndpoint<T>(page?: number, pageSize?: number): Observable<T> {\n        const endpointUrl = page && pageSize ? `${this.usersUrl}/${page}/${pageSize}` : this.usersUrl;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUsersEndpoint(page, pageSize));\n            }));\n    }\n\n\n    getNewUserEndpoint<T>(userObject: any): Observable<T> {\n\n        return this.http.post<T>(this.usersUrl, JSON.stringify(userObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getNewUserEndpoint(userObject));\n            }));\n    }\n\n    getUpdateUserEndpoint<T>(userObject: any, userId?: string): Observable<T> {\n        const endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\n\n        return this.http.put<T>(endpointUrl, JSON.stringify(userObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUpdateUserEndpoint(userObject, userId));\n            }));\n    }\n\n    getPatchUpdateUserEndpoint<T>(patch: {}, userId?: string): Observable<T>;\n    getPatchUpdateUserEndpoint<T>(value: any, op: string, path: string, from?: any, userId?: string): Observable<T>;\n    getPatchUpdateUserEndpoint<T>(valueOrPatch: any, opOrUserId?: string, path?: string, from?: any, userId?: string): Observable<T> {\n        let endpointUrl: string;\n        let patchDocument: {};\n\n        if (path) {\n            endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\n            patchDocument = from ?\n                [{ value: valueOrPatch, path, op: opOrUserId, from }] :\n                [{ value: valueOrPatch, path, op: opOrUserId }];\n        } else {\n            endpointUrl = opOrUserId ? `${this.usersUrl}/${opOrUserId}` : this.currentUserUrl;\n            patchDocument = valueOrPatch;\n        }\n\n        return this.http.patch<T>(endpointUrl, JSON.stringify(patchDocument), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getPatchUpdateUserEndpoint(valueOrPatch, opOrUserId, path, from, userId));\n            }));\n    }\n\n\n    getUserPreferencesEndpoint<T>(): Observable<T> {\n\n        return this.http.get<T>(this.currentUserPreferencesUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUserPreferencesEndpoint());\n            }));\n    }\n\n    getUpdateUserPreferencesEndpoint<T>(configuration: string): Observable<T> {\n        return this.http.put<T>(this.currentUserPreferencesUrl, JSON.stringify(configuration), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUpdateUserPreferencesEndpoint(configuration));\n            }));\n    }\n\n    getUnblockUserEndpoint<T>(userId: string): Observable<T> {\n        const endpointUrl = `${this.unblockUserUrl}/${userId}`;\n\n        return this.http.put<T>(endpointUrl, null, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUnblockUserEndpoint(userId));\n            }));\n    }\n\n    getDeleteUserEndpoint<T>(userId: string): Observable<T> {\n        const endpointUrl = `${this.usersUrl}/${userId}`;\n\n        return this.http.delete<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getDeleteUserEndpoint(userId));\n            }));\n    }\n\n\n\n\n\n    getRoleEndpoint<T>(roleId: string): Observable<T> {\n        const endpointUrl = `${this.rolesUrl}/${roleId}`;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getRoleEndpoint(roleId));\n            }));\n    }\n\n\n    getRoleByRoleNameEndpoint<T>(roleName: string): Observable<T> {\n        const endpointUrl = `${this.roleByRoleNameUrl}/${roleName}`;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getRoleByRoleNameEndpoint(roleName));\n            }));\n    }\n\n\n\n    getRolesEndpoint<T>(page?: number, pageSize?: number): Observable<T> {\n        const endpointUrl = page && pageSize ? `${this.rolesUrl}/${page}/${pageSize}` : this.rolesUrl;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getRolesEndpoint(page, pageSize));\n            }));\n    }\n\n    getNewRoleEndpoint<T>(roleObject: any): Observable<T> {\n\n        return this.http.post<T>(this.rolesUrl, JSON.stringify(roleObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getNewRoleEndpoint(roleObject));\n            }));\n    }\n\n    getUpdateRoleEndpoint<T>(roleObject: any, roleId: string): Observable<T> {\n        const endpointUrl = `${this.rolesUrl}/${roleId}`;\n\n        return this.http.put<T>(endpointUrl, JSON.stringify(roleObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUpdateRoleEndpoint(roleObject, roleId));\n            }));\n    }\n\n    getDeleteRoleEndpoint<T>(roleId: string): Observable<T> {\n        const endpointUrl = `${this.rolesUrl}/${roleId}`;\n\n        return this.http.delete<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getDeleteRoleEndpoint(roleId));\n            }));\n    }\n\n\n    getPermissionsEndpoint<T>(): Observable<T> {\n\n        return this.http.get<T>(this.permissionsUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getPermissionsEndpoint());\n            }));\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, forkJoin } from 'rxjs';\nimport { mergeMap, tap } from 'rxjs/operators';\n\nimport {\n    AuthService, User,\n    Permission,\n    PermissionValues\n} from '@polpware/ngx-oauth2';\n\nimport { AccountEndpoint } from './account-endpoint.service';\n\nimport { Role } from '../models/role.model';\nimport { UserEdit } from '../models/user-edit.model';\n\nexport type RolesChangedOperation = 'add' | 'delete' | 'modify';\nexport interface RolesChangedEventArg { roles: Role[] | string[]; operation: RolesChangedOperation; }\n\n@Injectable()\nexport class AccountService {\n    public static readonly roleAddedOperation: RolesChangedOperation = 'add';\n    public static readonly roleDeletedOperation: RolesChangedOperation = 'delete';\n    public static readonly roleModifiedOperation: RolesChangedOperation = 'modify';\n\n    private _rolesChanged = new Subject<RolesChangedEventArg>();\n\n    constructor(\n        private authService: AuthService,\n        private accountEndpoint: AccountEndpoint) {\n\n    }\n\n    getUser(userId?: string) {\n        return this.accountEndpoint.getUserEndpoint<User>(userId);\n    }\n\n    getUserAndRoles(userId?: string) {\n\n        return forkJoin(\n            this.accountEndpoint.getUserEndpoint<User>(userId),\n            this.accountEndpoint.getRolesEndpoint<Role[]>());\n    }\n\n    getUsers(page?: number, pageSize?: number) {\n\n        return this.accountEndpoint.getUsersEndpoint<User[]>(page, pageSize);\n    }\n\n    getUsersAndRoles(page?: number, pageSize?: number) {\n\n        return forkJoin(\n            this.accountEndpoint.getUsersEndpoint<User[]>(page, pageSize),\n            this.accountEndpoint.getRolesEndpoint<Role[]>());\n    }\n\n\n    updateUser(user: UserEdit) {\n        if (user.id) {\n            return this.accountEndpoint.getUpdateUserEndpoint(user, user.id);\n        } else {\n            return this.accountEndpoint.getUserByUserNameEndpoint<User>(user.userName).pipe(\n                mergeMap(foundUser => {\n                    user.id = foundUser.id;\n                    return this.accountEndpoint.getUpdateUserEndpoint(user, user.id);\n                }));\n        }\n    }\n\n    newUser(user: UserEdit) {\n        return this.accountEndpoint.getNewUserEndpoint<User>(user);\n    }\n\n\n    getUserPreferences() {\n        return this.accountEndpoint.getUserPreferencesEndpoint<string>();\n    }\n\n    updateUserPreferences(configuration: string) {\n        return this.accountEndpoint.getUpdateUserPreferencesEndpoint(configuration);\n    }\n\n\n    deleteUser(userOrUserId: string | User): Observable<User> {\n\n        if (typeof userOrUserId === 'string' || userOrUserId instanceof String) {\n            return this.accountEndpoint.getDeleteUserEndpoint<User>(userOrUserId as string).pipe<User>(\n                tap(data => this.onRolesUserCountChanged(data.roles)));\n        } else {\n\n            if (userOrUserId.id) {\n                return this.deleteUser(userOrUserId.id);\n            } else {\n                return this.accountEndpoint.getUserByUserNameEndpoint<User>(userOrUserId.userName).pipe<User>(\n                    mergeMap(user => this.deleteUser(user.id)));\n            }\n        }\n    }\n\n\n    unblockUser(userId: string) {\n        return this.accountEndpoint.getUnblockUserEndpoint(userId);\n    }\n\n\n    userHasPermission(permissionValue: PermissionValues): boolean {\n        return this.permissions.some(p => p == permissionValue);\n    }\n\n\n    refreshLoggedInUser() {\n        return this.accountEndpoint.refreshLogin();\n    }\n\n    getRoles(page?: number, pageSize?: number) {\n\n        return this.accountEndpoint.getRolesEndpoint<Role[]>(page, pageSize);\n    }\n\n\n    getRolesAndPermissions(page?: number, pageSize?: number) {\n\n        return forkJoin(\n            this.accountEndpoint.getRolesEndpoint<Role[]>(page, pageSize),\n            this.accountEndpoint.getPermissionsEndpoint<Permission[]>());\n    }\n\n\n    updateRole(role: Role) {\n        if (role.id) {\n            return this.accountEndpoint.getUpdateRoleEndpoint(role, role.id).pipe(\n                tap(data => this.onRolesChanged([role], AccountService.roleModifiedOperation)));\n        } else {\n            return this.accountEndpoint.getRoleByRoleNameEndpoint<Role>(role.name).pipe(\n                mergeMap(foundRole => {\n                    role.id = foundRole.id;\n                    return this.accountEndpoint.getUpdateRoleEndpoint(role, role.id);\n                }),\n                tap(data => this.onRolesChanged([role], AccountService.roleModifiedOperation)));\n        }\n    }\n\n\n    newRole(role: Role) {\n        return this.accountEndpoint.getNewRoleEndpoint<Role>(role).pipe<Role>(\n            tap(data => this.onRolesChanged([role], AccountService.roleAddedOperation)));\n    }\n\n\n    deleteRole(roleOrRoleId: string | Role): Observable<Role> {\n\n        if (typeof roleOrRoleId === 'string' || roleOrRoleId instanceof String) {\n            return this.accountEndpoint.getDeleteRoleEndpoint<Role>(roleOrRoleId as string).pipe<Role>(\n                tap(data => this.onRolesChanged([data], AccountService.roleDeletedOperation)));\n        } else {\n\n            if (roleOrRoleId.id) {\n                return this.deleteRole(roleOrRoleId.id);\n            } else {\n                return this.accountEndpoint.getRoleByRoleNameEndpoint<Role>(roleOrRoleId.name).pipe<Role>(\n                    mergeMap(role => this.deleteRole(role.id)));\n            }\n        }\n    }\n\n    getPermissions() {\n\n        return this.accountEndpoint.getPermissionsEndpoint<Permission[]>();\n    }\n\n\n    private onRolesChanged(roles: Role[] | string[], op: RolesChangedOperation) {\n        this._rolesChanged.next({ roles, operation: op });\n    }\n\n\n    onRolesUserCountChanged(roles: Role[] | string[]) {\n        return this.onRolesChanged(roles, AccountService.roleModifiedOperation);\n    }\n\n\n    getRolesChangedEvent(): Observable<RolesChangedEventArg> {\n        return this._rolesChanged.asObservable();\n    }\n\n\n\n    get permissions(): PermissionValues[] {\n        return this.authService.userPermissions;\n    }\n\n    get currentUser() {\n        return this.authService.currentUser;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n\n\n\n@Injectable()\nexport class NotificationEndpoint {\n\n    private demoNotifications = [\n        {\n            id: 1,\n            header: 'Welcome',\n            body: 'You are ...',\n            isRead: true,\n            isPinned: true,\n            date: '2019-05-28T16:29:13.5877958'\n        }\n    ];\n\n\n\n    getNotificationEndpoint<T>(notificationId: number): Observable<T> {\n\n        const notification = this.demoNotifications.find(val => val.id == notificationId);\n        let response: HttpResponse<T>;\n\n        if (notification) {\n            response = this.createResponse<T>(notification, 200);\n        } else {\n            response = this.createResponse<T>(null, 404);\n        }\n\n        return of(response.body);\n    }\n\n\n\n    getNotificationsEndpoint<T>(page: number, pageSize: number): Observable<T> {\n\n        const notifications = this.demoNotifications;\n        const response = this.createResponse<T>(this.demoNotifications, 200);\n\n        return of(response.body);\n    }\n\n\n\n    getUnreadNotificationsEndpoint<T>(userId?: string): Observable<T> {\n\n        const unreadNotifications = this.demoNotifications.filter(val => !val.isRead);\n        const response = this.createResponse<T>(unreadNotifications, 200);\n\n        return of(response.body);\n    }\n\n\n\n    getNewNotificationsEndpoint<T>(lastNotificationDate?: Date): Observable<T> {\n\n        const unreadNotifications = this.demoNotifications;\n        const response = this.createResponse<T>(unreadNotifications, 200);\n\n        return of(response.body);\n    }\n\n\n\n    getPinUnpinNotificationEndpoint<T>(notificationId: number, isPinned?: boolean, ): Observable<T> {\n\n        const notification = this.demoNotifications.find(val => val.id == notificationId);\n        let response: HttpResponse<T>;\n\n        if (notification) {\n            response = this.createResponse<T>(null, 204);\n\n            if (isPinned == null) {\n                isPinned = !notification.isPinned;\n            }\n\n            notification.isPinned = isPinned;\n            notification.isRead = true;\n        } else {\n            response = this.createResponse<T>(null, 404);\n        }\n\n\n        return of(response.body);\n    }\n\n\n\n    getReadUnreadNotificationEndpoint<T>(notificationIds: number[], isRead: boolean, ): Observable<T> {\n\n        for (const notificationId of notificationIds) {\n\n            const notification = this.demoNotifications.find(val => val.id == notificationId);\n\n            if (notification) {\n                notification.isRead = isRead;\n            }\n        }\n\n        const response = this.createResponse<T>(null, 204);\n        return of(response.body);\n    }\n\n\n\n    getDeleteNotificationEndpoint<T>(notificationId: number): Observable<T> {\n\n        const notification = this.demoNotifications.find(val => val.id == notificationId);\n        let response: HttpResponse<T>;\n\n        if (notification) {\n            this.demoNotifications = this.demoNotifications.filter(val => val.id != notificationId);\n            response = this.createResponse<T>(notification, 200);\n        } else {\n            response = this.createResponse<T>(null, 404);\n        }\n\n        return of(response.body);\n    }\n\n\n\n    private createResponse<T>(body, status: number) {\n        return new HttpResponse<T>({ body, status });\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Observable, interval } from 'rxjs';\nimport { map, flatMap, startWith } from 'rxjs/operators';\n\nimport { AuthService, User } from '@polpware/ngx-oauth2';\nimport { NotificationEndpoint } from './notification-endpoint.service';\nimport { Notification } from '../models/notification.model';\n\n@Injectable()\nexport class NotificationService {\n\n    private lastNotificationDate: Date;\n    private _recentNotifications: Notification[];\n\n    get currentUser(): User {\n        return this.authService.currentUser;\n    }\n\n    get recentNotifications() {\n        return this._recentNotifications;\n    }\n\n    set recentNotifications(notifications: Notification[]) {\n        this._recentNotifications = notifications;\n    }\n\n\n\n    constructor(private notificationEndpoint: NotificationEndpoint, private authService: AuthService) {\n\n    }\n\n\n    getNotification(notificationId?: number) {\n\n        return this.notificationEndpoint.getNotificationEndpoint(notificationId).pipe(\n            map(response => Notification.Create(response)));\n    }\n\n\n    getNotifications(page: number, pageSize: number) {\n\n        return this.notificationEndpoint.getNotificationsEndpoint(page, pageSize).pipe(\n            map(response => {\n                return this.getNotificationsFromResponse(response);\n            }));\n    }\n\n\n    getUnreadNotifications(userId?: string) {\n\n        return this.notificationEndpoint.getUnreadNotificationsEndpoint(userId).pipe(\n            map(response => this.getNotificationsFromResponse(response)));\n    }\n\n\n    getNewNotifications() {\n        return this.notificationEndpoint.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(\n            map(response => this.processNewNotificationsFromResponse(response)));\n    }\n\n\n    getNewNotificationsPeriodically() {\n        return interval(10000).pipe(\n            startWith(0),\n            flatMap(() => {\n                return this.notificationEndpoint.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(\n                    map(response => this.processNewNotificationsFromResponse(response)));\n            }));\n    }\n\n\n\n\n    pinUnpinNotification(notificationOrNotificationId: number | Notification, isPinned?: boolean): Observable<any> {\n\n        if (typeof notificationOrNotificationId === 'number' || notificationOrNotificationId instanceof Number) {\n            return this.notificationEndpoint.getPinUnpinNotificationEndpoint(notificationOrNotificationId as number, isPinned);\n        } else {\n            return this.pinUnpinNotification(notificationOrNotificationId.id);\n        }\n    }\n\n\n    readUnreadNotification(notificationIds: number[], isRead: boolean): Observable<any> {\n\n        return this.notificationEndpoint.getReadUnreadNotificationEndpoint(notificationIds, isRead);\n    }\n\n\n\n\n    deleteNotification(notificationOrNotificationId: number | Notification): Observable<Notification> {\n\n        if (typeof notificationOrNotificationId === 'number' || notificationOrNotificationId instanceof Number) { // Todo: Test me if its check is valid\n            return this.notificationEndpoint.getDeleteNotificationEndpoint(notificationOrNotificationId as number).pipe(\n                map(response => {\n                    this.recentNotifications = this.recentNotifications.filter(n => n.id != notificationOrNotificationId);\n                    return Notification.Create(response);\n                }));\n        } else {\n            return this.deleteNotification(notificationOrNotificationId.id);\n        }\n    }\n\n\n\n\n    private processNewNotificationsFromResponse(response) {\n        const notifications = this.getNotificationsFromResponse(response);\n\n        for (const n of notifications) {\n            if (n.date > this.lastNotificationDate) {\n                this.lastNotificationDate = n.date;\n            }\n        }\n\n        return notifications;\n    }\n\n\n    private getNotificationsFromResponse(response) {\n        const notifications: Notification[] = [];\n\n        for (const i in response) {\n            notifications[i] = Notification.Create(response[i]);\n        }\n\n        notifications.sort((a, b) => b.date.valueOf() - a.date.valueOf());\n        notifications.sort((a, b) => (a.isPinned === b.isPinned) ? 0 : a.isPinned ? -1 : 1);\n\n        this.recentNotifications = notifications;\n\n        return notifications;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    TranslationServiceAbstractProvider,\n    ITranslationServiceContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AppTranslationService\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class TranslationServiceProvider extends TranslationServiceAbstractProvider {\n\n    constructor(private readonly impl: AppTranslationService) {\n        super();\n    }\n\n    get(): ITranslationServiceContract {\n        return this.impl;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationEnd, PRIMARY_OUTLET } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter, map, flatMap } from 'rxjs/operators';\nimport { Title } from '@angular/platform-browser';\n\nimport { Utilities } from '@polpware/ngx-appkit-contracts-alpha';\n\n\n@Injectable()\nexport class AppTitleService {\n\n    sub: Subscription;\n    appName: string;\n\n    constructor(private titleService: Title, private router: Router) {\n        this.sub = this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd),\n            map(_ => this.router.routerState.root),\n            map(route => {\n                while (route.firstChild) {\n                    route = route.firstChild;\n                }\n\n                return route;\n            }),\n            flatMap(route => route.data))\n            .subscribe(data => {\n                let title = data.title;\n\n                if (title) {\n                    const fragment = this.router.url.split('#')[1];\n\n                    if (fragment) {\n                        title += ' | ' + Utilities.toTitleCase(fragment);\n                    }\n                }\n\n                if (title && this.appName) {\n                    title += ' - ' + this.appName;\n                } else if (this.appName) {\n                    title = this.appName;\n                }\n\n                if (title) {\n                    this.titleService.setTitle(title);\n                }\n            });\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    AlertServiceAbstractProvider,\n    IAlertServiceContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class AlertServiceProvider extends AlertServiceAbstractProvider {\n\n    constructor(private readonly alertService: AlertService) {\n        super();\n    }\n\n    get(): IAlertServiceContract {\n        return this.alertService;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    LocalStoreManagerServiceAbstractProvider,\n    ILocalStoreManagerContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    LocalStoreManager\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class LocalStoreManagerProvider extends LocalStoreManagerServiceAbstractProvider {\n\n    constructor(private readonly impl: LocalStoreManager) {\n        super();\n    }\n\n    get(): ILocalStoreManagerContract {\n        return this.impl;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n\n\n@Pipe({ name: 'groupBy' })\nexport class GroupByPipe implements PipeTransform {\n\n    transform(value: Array<any>, field: string): Array<any> {\n\n        if (!value) {\n            return value;\n        }\n\n        const groupedObj = value.reduce((prev, cur) => {\n            if (!prev[cur[field]]) {\n                prev[cur[field]] = [cur];\n            } else {\n                prev[cur[field]].push(cur);\n            }\n\n            return prev;\n        }, {});\n\n        return Object.keys(groupedObj).map(key => ({ key, value: groupedObj[key] }));\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, TemplateRef, ViewChild, Input } from '@angular/core';\n\nimport {\n    DialogType, AlertCommand, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission\n} from '@polpware/ngx-oauth2';\n\n\nimport { NotificationService } from '../../services/notification.service';\nimport { AccountService } from '../../services/account.service';\nimport { Notification } from '../../models/notification.model';\n\n\n@Component({\n    selector: 'notifications-viewer',\n    templateUrl: './notifications-viewer.component.html',\n    styleUrls: ['./notifications-viewer.component.scss']\n})\nexport class NotificationsViewerComponent implements OnInit, OnDestroy {\n    columns: any[] = [];\n    rows: Notification[] = [];\n    loadingIndicator: boolean;\n\n    dataLoadingConsecutiveFailurs = 0;\n    dataLoadingSubscription: any;\n\n\n    @Input()\n    isViewOnly: boolean;\n\n    @Input()\n    verticalScrollbar = false;\n\n\n    @ViewChild('statusHeaderTemplate', { static: true })\n    statusHeaderTemplate: TemplateRef<any>;\n\n    @ViewChild('statusTemplate', { static: true })\n    statusTemplate: TemplateRef<any>;\n\n    @ViewChild('dateTemplate', { static: true })\n    dateTemplate: TemplateRef<any>;\n\n    @ViewChild('contentHeaderTemplate', { static: true })\n    contentHeaderTemplate: TemplateRef<any>;\n\n    @ViewChild('contenBodytTemplate', { static: true })\n    contenBodytTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService, private notificationService: NotificationService) {\n    }\n\n\n    ngOnInit() {\n\n        if (this.isViewOnly) {\n            this.columns = [\n                { prop: 'date', cellTemplate: this.dateTemplate, width: 100, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\n                { prop: 'header', cellTemplate: this.contentHeaderTemplate, width: 200, resizeable: false, sortable: false, draggable: false },\n            ];\n        } else {\n            const gT = (key: string) => this.translationService.getTranslation(key);\n\n            this.columns = [\n                { prop: '', name: '', width: 10, headerTemplate: this.statusHeaderTemplate, cellTemplate: this.statusTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\n                { prop: 'date', name: gT('notifications.Date'), cellTemplate: this.dateTemplate, width: 30 },\n                { prop: 'body', name: gT('notifications.Notification'), cellTemplate: this.contenBodytTemplate, width: 500 },\n                { name: '', width: 80, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\n            ];\n        }\n\n\n        this.initDataLoading();\n    }\n\n\n    ngOnDestroy() {\n        if (this.dataLoadingSubscription) {\n            this.dataLoadingSubscription.unsubscribe();\n        }\n    }\n\n\n\n    initDataLoading() {\n\n        if (this.isViewOnly && this.notificationService.recentNotifications) {\n            this.rows = this.processResults(this.notificationService.recentNotifications);\n            return;\n        }\n\n        this.loadingIndicator = true;\n\n        const dataLoadTask = this.isViewOnly ? this.notificationService.getNewNotifications() : this.notificationService.getNewNotificationsPeriodically();\n\n        this.dataLoadingSubscription = dataLoadTask\n            .subscribe(notifications => {\n                this.loadingIndicator = false;\n                this.dataLoadingConsecutiveFailurs = 0;\n\n                this.rows = this.processResults(notifications);\n            },\n                error => {\n                    this.loadingIndicator = false;\n\n                    this.alertService.showMessage('Load Error', 'Loading new notifications from the server failed!', MessageSeverity.warn);\n                    this.alertService.logError(error);\n\n                    if (this.dataLoadingConsecutiveFailurs++ < 5) {\n                        setTimeout(() => this.initDataLoading(), 5000);\n                    } else {\n                        this.alertService.showStickyMessage('Load Error', 'Loading new notifications from the server failed!', MessageSeverity.error);\n                    }\n\n                });\n\n\n        if (this.isViewOnly) {\n            this.dataLoadingSubscription = null;\n        }\n    }\n\n\n    private processResults(notifications: Notification[]) {\n\n        if (this.isViewOnly) {\n            notifications.sort((a, b) => {\n                return b.date.valueOf() - a.date.valueOf();\n            });\n        }\n\n        return notifications;\n    }\n\n\n\n    getPrintedDate(value: Date) {\n        if (value) {\n            return Utilities.printTimeOnly(value) + ' on ' + Utilities.printDateOnly(value);\n        }\n    }\n\n\n    deleteNotification(row: Notification) {\n        this.alertService.showDialog('Are you sure you want to delete the notification \\\"' + row.header + '\\\"?', DialogType.confirm, () => this.deleteNotificationHelper(row));\n    }\n\n\n    deleteNotificationHelper(row: Notification) {\n\n        this.alertService.startLoadingMessage('Deleting...');\n        this.loadingIndicator = true;\n\n        this.notificationService.deleteNotification(row)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                this.rows = this.rows.filter(item => item.id != row.id);\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the notification.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    togglePin(row: Notification) {\n\n        const pin = !row.isPinned;\n        const opText = pin ? 'Pinning' : 'Unpinning';\n\n        this.alertService.startLoadingMessage(opText + '...');\n        this.loadingIndicator = true;\n\n        this.notificationService.pinUnpinNotification(row, pin)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                row.isPinned = pin;\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage(opText + ' Error', `An error occured whilst ${opText} the notification.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    get canManageNotifications() {\n        return this.accountService.userHasPermission(Permission.manageRolesPermission); // Todo: Consider creating separate permission for notifications\n    }\n\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\n\nimport {\n    MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission,\n    User\n} from '@polpware/ngx-oauth2';\n\n\nimport { AccountService } from '../../services/account.service';\nimport { UserEdit } from '../../models/user-edit.model';\nimport { Role } from '../../models/role.model';\n\n\n@Component({\n    selector: 'user-info',\n    templateUrl: './user-info.component.html',\n    styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n\n    public isEditMode = false;\n    public isNewUser = false;\n    public isSaving = false;\n    public isChangePassword = false;\n    public isEditingSelf = false;\n    public showValidationErrors = false;\n    public uniqueId: string = Utilities.uniqueId();\n    public user: User = new User();\n    public userEdit: UserEdit;\n    public allRoles: Role[] = [];\n\n    public formResetToggle = true;\n\n    public changesSavedCallback: () => void;\n    public changesFailedCallback: () => void;\n    public changesCancelledCallback: () => void;\n\n    @Input()\n    isViewOnly: boolean;\n\n    @Input()\n    isGeneralEditor = false;\n\n\n\n\n\n    @ViewChild('f', { static: false })\n    public form;\n\n    // ViewChilds Required because ngIf hides template variables from global scope\n    @ViewChild('userName', { static: false })\n    public userName;\n\n    @ViewChild('userPassword', { static: false })\n    public userPassword;\n\n    @ViewChild('email', { static: false })\n    public email;\n\n    @ViewChild('currentPassword', { static: false })\n    public currentPassword;\n\n    @ViewChild('newPassword', { static: false })\n    public newPassword;\n\n    @ViewChild('confirmPassword', { static: false })\n    public confirmPassword;\n\n    @ViewChild('roles', { static: false })\n    public roles;\n\n    @ViewChild('rolesSelector', { static: false })\n    public rolesSelector;\n\n\n    constructor(private alertService: AlertService, private accountService: AccountService) {\n    }\n\n    ngOnInit() {\n        if (!this.isGeneralEditor) {\n            this.loadCurrentUserData();\n        }\n    }\n\n\n\n    private loadCurrentUserData() {\n        this.alertService.startLoadingMessage();\n\n        if (this.canViewAllRoles) {\n            this.accountService.getUserAndRoles().subscribe(results => this.onCurrentUserDataLoadSuccessful(results[0], results[1]), error => this.onCurrentUserDataLoadFailed(error));\n        } else {\n            this.accountService.getUser().subscribe(user => this.onCurrentUserDataLoadSuccessful(user, user.roles.map(x => new Role(x))), error => this.onCurrentUserDataLoadFailed(error));\n        }\n    }\n\n\n    private onCurrentUserDataLoadSuccessful(user: User, roles: Role[]) {\n        this.alertService.stopLoadingMessage();\n        this.user = user;\n        this.allRoles = roles;\n    }\n\n    private onCurrentUserDataLoadFailed(error: any) {\n        this.alertService.stopLoadingMessage();\n        this.alertService.showStickyMessage('Load Error', `Unable to retrieve user data from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n            MessageSeverity.error, error);\n\n        this.user = new User();\n    }\n\n\n\n    getRoleByName(name: string) {\n        return this.allRoles.find((r) => r.name == name);\n    }\n\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n\n    deletePasswordFromUser(user: UserEdit | User) {\n        const userEdit = user as UserEdit;\n\n        delete userEdit.currentPassword;\n        delete userEdit.newPassword;\n        delete userEdit.confirmPassword;\n    }\n\n\n    edit() {\n        if (!this.isGeneralEditor) {\n            this.isEditingSelf = true;\n            this.userEdit = new UserEdit();\n            Object.assign(this.userEdit, this.user);\n        } else {\n            if (!this.userEdit) {\n                this.userEdit = new UserEdit();\n            }\n\n            this.isEditingSelf = this.accountService.currentUser ? this.userEdit.id == this.accountService.currentUser.id : false;\n        }\n\n        this.isEditMode = true;\n        this.showValidationErrors = true;\n        this.isChangePassword = false;\n    }\n\n\n    save() {\n        this.isSaving = true;\n        this.alertService.startLoadingMessage('Saving changes...');\n\n        if (this.isNewUser) {\n            this.accountService.newUser(this.userEdit).subscribe(user => this.saveSuccessHelper(user), error => this.saveFailedHelper(error));\n        } else {\n            this.accountService.updateUser(this.userEdit).subscribe(response => this.saveSuccessHelper(), error => this.saveFailedHelper(error));\n        }\n    }\n\n\n    private saveSuccessHelper(user?: User) {\n        this.testIsRoleUserCountChanged(this.user, this.userEdit);\n\n        if (user) {\n            Object.assign(this.userEdit, user);\n        }\n\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.isChangePassword = false;\n        this.showValidationErrors = false;\n\n        this.deletePasswordFromUser(this.userEdit);\n        Object.assign(this.user, this.userEdit);\n        this.userEdit = new UserEdit();\n        this.resetForm();\n\n\n        if (this.isGeneralEditor) {\n            if (this.isNewUser) {\n                this.alertService.showMessage('Success', `User \\\"${this.user.userName}\\\" was created successfully`, MessageSeverity.success);\n            } else if (!this.isEditingSelf) {\n                this.alertService.showMessage('Success', `Changes to user \\\"${this.user.userName}\\\" was saved successfully`, MessageSeverity.success);\n            }\n        }\n\n        if (this.isEditingSelf) {\n            this.alertService.showMessage('Success', 'Changes to your User Profile was saved successfully', MessageSeverity.success);\n            this.refreshLoggedInUser();\n        }\n\n        this.isEditMode = false;\n\n\n        if (this.changesSavedCallback) {\n            this.changesSavedCallback();\n        }\n    }\n\n\n    private saveFailedHelper(error: any) {\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.alertService.showStickyMessage('Save Error', 'The below errors occured whilst saving your changes:', MessageSeverity.error, error);\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\n\n        if (this.changesFailedCallback) {\n            this.changesFailedCallback();\n        }\n    }\n\n\n\n    private testIsRoleUserCountChanged(currentUser: User, editedUser: User) {\n\n        const rolesAdded = this.isNewUser ? editedUser.roles : editedUser.roles.filter(role => currentUser.roles.indexOf(role) == -1);\n        const rolesRemoved = this.isNewUser ? [] : currentUser.roles.filter(role => editedUser.roles.indexOf(role) == -1);\n\n        const modifiedRoles = rolesAdded.concat(rolesRemoved);\n\n        if (modifiedRoles.length) {\n            setTimeout(() => this.accountService.onRolesUserCountChanged(modifiedRoles));\n        }\n    }\n\n\n\n    cancel() {\n        if (this.isGeneralEditor) {\n            this.userEdit = this.user = new UserEdit();\n        } else {\n            this.userEdit = new UserEdit();\n        }\n\n        this.showValidationErrors = false;\n        this.resetForm();\n\n        this.alertService.showMessage('Cancelled', 'Operation cancelled by user', MessageSeverity.default);\n        this.alertService.resetStickyMessage();\n\n        if (!this.isGeneralEditor) {\n            this.isEditMode = false;\n        }\n\n        if (this.changesCancelledCallback) {\n            this.changesCancelledCallback();\n        }\n    }\n\n\n    close() {\n        this.userEdit = this.user = new UserEdit();\n        this.showValidationErrors = false;\n        this.resetForm();\n        this.isEditMode = false;\n\n        if (this.changesSavedCallback) {\n            this.changesSavedCallback();\n        }\n    }\n\n\n\n    private refreshLoggedInUser() {\n        this.accountService.refreshLoggedInUser()\n            .subscribe(user => {\n                this.loadCurrentUserData();\n            },\n                error => {\n                    this.alertService.resetStickyMessage();\n                    this.alertService.showStickyMessage('Refresh failed', 'An error occured whilst refreshing logged in user information from the server', MessageSeverity.error, error);\n                });\n    }\n\n\n    changePassword() {\n        this.isChangePassword = true;\n    }\n\n\n    unlockUser() {\n        this.isSaving = true;\n        this.alertService.startLoadingMessage('Unblocking user...');\n\n\n        this.accountService.unblockUser(this.userEdit.id)\n            .subscribe(() => {\n                this.isSaving = false;\n                this.userEdit.isLockedOut = false;\n                this.alertService.stopLoadingMessage();\n                this.alertService.showMessage('Success', 'User has been successfully unblocked', MessageSeverity.success);\n            },\n                error => {\n                    this.isSaving = false;\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Unblock Error', 'The below errors occured whilst unblocking the user:', MessageSeverity.error, error);\n                    this.alertService.showStickyMessage(error, null, MessageSeverity.error);\n                });\n    }\n\n\n    resetForm(replace = false) {\n        this.isChangePassword = false;\n\n        if (!replace) {\n            this.form.reset();\n        } else {\n            this.formResetToggle = false;\n\n            setTimeout(() => {\n                this.formResetToggle = true;\n            });\n        }\n    }\n\n\n    newUser(allRoles: Role[]) {\n        this.isGeneralEditor = true;\n        this.isNewUser = true;\n\n        this.allRoles = [...allRoles];\n        this.user = this.userEdit = new UserEdit();\n        this.userEdit.isEnabled = true;\n        this.edit();\n\n        return this.userEdit;\n    }\n\n    editUser(user: User, allRoles: Role[]) {\n        if (user) {\n            this.isGeneralEditor = true;\n            this.isNewUser = false;\n\n            this.setRoles(user, allRoles);\n            this.user = new User();\n            this.userEdit = new UserEdit();\n            Object.assign(this.user, user);\n            Object.assign(this.userEdit, user);\n            this.edit();\n\n            return this.userEdit;\n        } else {\n            return this.newUser(allRoles);\n        }\n    }\n\n\n    displayUser(user: User, allRoles?: Role[]) {\n\n        this.user = new User();\n        Object.assign(this.user, user);\n        this.deletePasswordFromUser(this.user);\n        this.setRoles(user, allRoles);\n\n        this.isEditMode = false;\n    }\n\n\n\n    private setRoles(user: User, allRoles?: Role[]) {\n\n        this.allRoles = allRoles ? [...allRoles] : [];\n\n        if (user.roles) {\n            for (const ur of user.roles) {\n                if (!this.allRoles.some(r => r.name == ur)) {\n                    this.allRoles.unshift(new Role(ur));\n                }\n            }\n        }\n\n        if (allRoles == null || this.allRoles.length != allRoles.length) {\n            setTimeout(() => {\n                if (this.rolesSelector) {\n                    this.rolesSelector.refresh();\n                }\n            });\n        }\n    }\n\n\n\n    get canViewAllRoles() {\n        return this.accountService.userHasPermission(Permission.viewRolesPermission);\n    }\n\n    get canAssignRoles() {\n        return this.accountService.userHasPermission(Permission.assignRolesPermission);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, AfterViewInit, TemplateRef, ViewChild, Input } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission,\n    User\n} from '@polpware/ngx-oauth2';\n\nimport { AccountService } from '../../services/account.service';\nimport { Role } from '../../models/role.model';\nimport { UserEdit } from '../../models/user-edit.model';\nimport { UserInfoComponent } from '../user-info/user-info.component';\n\n\n@Component({\n    selector: 'users-management',\n    templateUrl: './users-management.component.html',\n    styleUrls: ['./users-management.component.scss']\n})\nexport class UsersManagementComponent implements OnInit, AfterViewInit {\n    columns: any[] = [];\n    rows: User[] = [];\n    rowsCache: User[] = [];\n    editedUser: UserEdit;\n    sourceUser: UserEdit;\n    editingUserName: { name: string };\n    loadingIndicator: boolean;\n\n    allRoles: Role[] = [];\n\n\n    @ViewChild('indexTemplate', { static: true })\n    indexTemplate: TemplateRef<any>;\n\n    @ViewChild('userNameTemplate', { static: true })\n    userNameTemplate: TemplateRef<any>;\n\n    @ViewChild('rolesTemplate', { static: true })\n    rolesTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    @ViewChild('editorModal', { static: true })\n    editorModal: ModalDirective;\n\n    @ViewChild('userEditor', { static: true })\n    userEditor: UserInfoComponent;\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService) {\n    }\n\n\n    ngOnInit() {\n\n        const gT = (key: string) => this.translationService.getTranslation(key);\n\n        this.columns = [\n            { prop: 'index', name: '#', width: 40, cellTemplate: this.indexTemplate, canAutoResize: false },\n            { prop: 'jobTitle', name: gT('users.management.Title'), width: 50 },\n            { prop: 'userName', name: gT('users.management.UserName'), width: 90, cellTemplate: this.userNameTemplate },\n            { prop: 'fullName', name: gT('users.management.FullName'), width: 120 },\n            { prop: 'email', name: gT('users.management.Email'), width: 140 },\n            { prop: 'roles', name: gT('users.management.Roles'), width: 120, cellTemplate: this.rolesTemplate },\n            { prop: 'phoneNumber', name: gT('users.management.PhoneNumber'), width: 100 }\n        ];\n\n        if (this.canManageUsers) {\n            this.columns.push({ name: '', width: 160, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false });\n        }\n\n        this.loadData();\n    }\n\n\n    ngAfterViewInit() {\n\n        this.userEditor.changesSavedCallback = () => {\n            this.addNewUserToList();\n            this.editorModal.hide();\n        };\n\n        this.userEditor.changesCancelledCallback = () => {\n            this.editedUser = null;\n            this.sourceUser = null;\n            this.editorModal.hide();\n        };\n    }\n\n\n    addNewUserToList() {\n        if (this.sourceUser) {\n            Object.assign(this.sourceUser, this.editedUser);\n\n            let sourceIndex = this.rowsCache.indexOf(this.sourceUser, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rowsCache, sourceIndex, 0);\n            }\n\n            sourceIndex = this.rows.indexOf(this.sourceUser, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rows, sourceIndex, 0);\n            }\n\n            this.editedUser = null;\n            this.sourceUser = null;\n        } else {\n            const user = new User();\n            Object.assign(user, this.editedUser);\n            this.editedUser = null;\n\n            let maxIndex = 0;\n            for (const u of this.rowsCache) {\n                if ((u as any).index > maxIndex) {\n                    maxIndex = (u as any).index;\n                }\n            }\n\n            (user as any).index = maxIndex + 1;\n\n            this.rowsCache.splice(0, 0, user);\n            this.rows.splice(0, 0, user);\n            this.rows = [...this.rows];\n        }\n    }\n\n\n    loadData() {\n        this.alertService.startLoadingMessage();\n        this.loadingIndicator = true;\n\n        if (this.canViewRoles) {\n            this.accountService.getUsersAndRoles().subscribe(results => this.onDataLoadSuccessful(results[0], results[1]), error => this.onDataLoadFailed(error));\n        } else {\n            this.accountService.getUsers().subscribe(users => this.onDataLoadSuccessful(users, this.accountService.currentUser.roles.map(x => new Role(x))), error => this.onDataLoadFailed(error));\n        }\n    }\n\n\n    onDataLoadSuccessful(users: User[], roles: Role[]) {\n        this.alertService.stopLoadingMessage();\n        this.loadingIndicator = false;\n\n        users.forEach((user, index, users) => {\n            (user as any).index = index + 1;\n        });\n\n        this.rowsCache = [...users];\n        this.rows = users;\n\n        this.allRoles = roles;\n    }\n\n\n    onDataLoadFailed(error: any) {\n        this.alertService.stopLoadingMessage();\n        this.loadingIndicator = false;\n\n        this.alertService.showStickyMessage('Load Error', `Unable to retrieve users from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n            MessageSeverity.error, error);\n    }\n\n\n    onSearchChanged(value: string) {\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.userName, r.fullName, r.email, r.phoneNumber, r.jobTitle, r.roles));\n    }\n\n    onEditorModalHidden() {\n        this.editingUserName = null;\n        this.userEditor.resetForm(true);\n    }\n\n\n    newUser() {\n        this.editingUserName = null;\n        this.sourceUser = null;\n        this.editedUser = this.userEditor.newUser(this.allRoles);\n        this.editorModal.show();\n    }\n\n\n    editUser(row: UserEdit) {\n        this.editingUserName = { name: row.userName };\n        this.sourceUser = row;\n        this.editedUser = this.userEditor.editUser(row, this.allRoles);\n        this.editorModal.show();\n    }\n\n\n    deleteUser(row: UserEdit) {\n        this.alertService.showDialog('Are you sure you want to delete \\\"' + row.userName + '\\\"?', DialogType.confirm, () => this.deleteUserHelper(row));\n    }\n\n\n    deleteUserHelper(row: UserEdit) {\n\n        this.alertService.startLoadingMessage('Deleting...');\n        this.loadingIndicator = true;\n\n        this.accountService.deleteUser(row)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                this.rowsCache = this.rowsCache.filter(item => item !== row);\n                this.rows = this.rows.filter(item => item !== row);\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the user.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n\n    get canAssignRoles() {\n        return this.accountService.userHasPermission(Permission.assignRolesPermission);\n    }\n\n    get canViewRoles() {\n        return this.accountService.userHasPermission(Permission.viewRolesPermission);\n    }\n\n    get canManageUsers() {\n        return this.accountService.userHasPermission(Permission.manageUsersPermission);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, Attribute, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\n@Directive({\n    selector: '[bootstrapSelect]',\n    exportAs: 'bootstrap-select'\n})\nexport class BootstrapSelectDirective implements OnInit, OnDestroy {\n\n    private oldValues: string | string[] = '';\n\n    private changedSubscription: Subscription;\n    private shownSubscription: Subscription;\n    private hiddenSubscription: Subscription;\n\n    @Input()\n    required: string;\n\n    @Input()\n    set ngModel(values: string | string[]) {\n        setTimeout(() => this.selected = values);\n    }\n\n\n    @Output()\n    ngModelChange = new EventEmitter();\n\n    @Output()\n    shown = new EventEmitter();\n\n    @Output()\n    hidden = new EventEmitter();\n\n\n    constructor(private el: ElementRef) {\n        this.changedSubscription = fromEvent($(this.el.nativeElement), 'changed.bs.select').subscribe((e: any) => setTimeout(() => {\n            if (this.checkIsValuesChanged(this.selected)) {\n                this.ngModelChange.emit(this.selected);\n            }\n        }));\n        this.shownSubscription = fromEvent($(this.el.nativeElement), 'shown.bs.select').subscribe((e: any) => setTimeout(() => this.shown.emit()));\n        this.hiddenSubscription = fromEvent($(this.el.nativeElement), 'hidden.bs.select').subscribe((e: any) => setTimeout(() => this.hidden.emit()));\n    }\n\n\n    ngOnInit() {\n        $(this.el.nativeElement).selectpicker();\n\n        if (this.requiredAttribute) {\n            $(this.el.nativeElement).selectpicker('setStyle', 'required', 'add');\n        }\n\n        setTimeout(() => {\n            this.refresh();\n            this.doValidation();\n        });\n\n    }\n\n    ngOnDestroy() {\n        if (this.changedSubscription) {\n            this.changedSubscription.unsubscribe();\n        }\n\n        if (this.shownSubscription) {\n            this.shownSubscription.unsubscribe();\n        }\n\n        if (this.hiddenSubscription) {\n            this.hiddenSubscription.unsubscribe();\n        }\n\n        $(this.el.nativeElement).selectpicker('destroy');\n    }\n\n    private checkIsValuesChanged(newValue: string | string[]) {\n        return !(newValue == this.oldValues ||\n            (newValue instanceof Array && newValue.length === this.oldValues.length && newValue.every((v, i) => v === this.oldValues[i])));\n    }\n\n    private doValidation() {\n        if (this.requiredAttribute) {\n            $(this.el.nativeElement).selectpicker('setStyle', !this.valid ? 'ng-valid' : 'ng-invalid', 'remove');\n            $(this.el.nativeElement).selectpicker('setStyle', this.valid ? 'ng-valid' : 'ng-invalid', 'add');\n        }\n    }\n\n    private get requiredAttribute() {\n        return this.required === '' || this.required == 'true';\n    }\n\n\n    refresh() {\n        setTimeout(() => {\n            $(this.el.nativeElement).selectpicker('refresh');\n        });\n    }\n\n    render() {\n        setTimeout(() => {\n            $(this.el.nativeElement).selectpicker('render');\n        });\n    }\n\n\n    get valid(): boolean {\n        return this.requiredAttribute ? this.selected && this.selected.length > 0 : true;\n    }\n\n\n    set selected(values: string | string[]) {\n\n        if (!this.checkIsValuesChanged(values)) {\n            return;\n        }\n\n        this.oldValues = this.selected;\n        $(this.el.nativeElement).selectpicker('val', values);\n        this.doValidation();\n    }\n\n\n    get selected(): string | string[] {\n        return $(this.el.nativeElement).selectpicker('val');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService,\n    LocalStoreManager,\n    ConfigurationService,\n    ThemeManager\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    AuthService,\n    Permission\n} from '@polpware/ngx-oauth2';\n\nimport { BootstrapSelectDirective } from '../../directives/bootstrap-select.directive';\nimport { AccountService } from '../../services/account.service';\n\n@Component({\n    selector: 'user-preferences',\n    templateUrl: './user-preferences.component.html',\n    styleUrls: ['./user-preferences.component.scss']\n})\nexport class UserPreferencesComponent implements OnInit, OnDestroy {\n\n    themeSelectorToggle = true;\n\n    languageChangedSubscription: any;\n\n    @ViewChild('languageSelector', { static: true })\n    languageSelector: BootstrapSelectDirective;\n\n    @ViewChild('homePageSelector', { static: true })\n    homePageSelector: BootstrapSelectDirective;\n\n    constructor(\n        private alertService: AlertService,\n        private translationService: AppTranslationService,\n        private accountService: AccountService,\n        public themeManager: ThemeManager,\n        public configurations: ConfigurationService) {\n    }\n\n    ngOnInit() {\n        this.languageChangedSubscription = this.translationService.languageChanged$.subscribe(data => {\n            this.themeSelectorToggle = false;\n\n            setTimeout(() => {\n                this.languageSelector.refresh();\n                this.homePageSelector.refresh();\n                this.themeSelectorToggle = true;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.languageChangedSubscription.unsubscribe();\n    }\n\n\n\n    reloadFromServer() {\n        this.alertService.startLoadingMessage();\n\n        this.accountService.getUserPreferences()\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n\n                this.configurations.import(results);\n\n                this.alertService.showMessage('Defaults loaded!', '', MessageSeverity.info);\n\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Load Error', `Unable to retrieve user preferences from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n    setAsDefault() {\n        this.alertService.showDialog('Are you sure you want to set the current configuration as your new defaults?', DialogType.confirm,\n            () => this.setAsDefaultHelper(),\n            () => this.alertService.showMessage('Operation Cancelled!', '', MessageSeverity.default));\n    }\n\n    setAsDefaultHelper() {\n        this.alertService.startLoadingMessage('', 'Saving new defaults');\n\n        this.accountService.updateUserPreferences(this.configurations.export())\n            .subscribe(response => {\n                this.alertService.stopLoadingMessage();\n                this.alertService.showMessage('New Defaults', 'Account defaults updated successfully', MessageSeverity.success);\n\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Save Error', `An error occured whilst saving configuration defaults.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n\n    resetDefault() {\n        this.alertService.showDialog('Are you sure you want to reset your defaults?', DialogType.confirm,\n            () => this.resetDefaultHelper(),\n            () => this.alertService.showMessage('Operation Cancelled!', '', MessageSeverity.default));\n    }\n\n    resetDefaultHelper() {\n        this.alertService.startLoadingMessage('', 'Resetting defaults');\n\n        this.accountService.updateUserPreferences(null)\n            .subscribe(response => {\n                this.alertService.stopLoadingMessage();\n                this.configurations.import(null);\n                this.alertService.showMessage('Defaults Reset', 'Account defaults reset completed successfully', MessageSeverity.success);\n\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Save Error', `An error occured whilst resetting configuration defaults.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    get canViewCustomers() {\n        return this.accountService.userHasPermission(Permission.viewUsersPermission); // eg. viewCustomersPermission\n    }\n\n    get canViewProducts() {\n        return this.accountService.userHasPermission(Permission.viewUsersPermission); // eg. viewProductsPermission\n    }\n\n    get canViewOrders() {\n        return true; // eg. viewOrdersPermission\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, ViewChild } from '@angular/core';\n\nimport {\n    MessageSeverity\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission\n} from '@polpware/ngx-oauth2';\n\n\nimport { AccountService } from '../../services/account.service';\nimport { Role } from '../../models/role.model';\n\n@Component({\n    selector: 'role-editor',\n    templateUrl: './role-editor.component.html',\n    styleUrls: ['./role-editor.component.scss']\n})\nexport class RoleEditorComponent {\n\n    private isNewRole = false;\n    public isSaving: boolean;\n    public showValidationErrors = true;\n    public roleEdit: Role = new Role();\n    public allPermissions: Permission[] = [];\n    public selectedValues: { [key: string]: boolean; } = {};\n    private editingRoleName: string;\n\n    public formResetToggle = true;\n\n    public changesSavedCallback: () => void;\n    public changesFailedCallback: () => void;\n    public changesCancelledCallback: () => void;\n\n\n    @ViewChild('f', { static: false })\n    private form;\n\n\n\n    constructor(private alertService: AlertService, private accountService: AccountService) {\n    }\n\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n\n    save() {\n        this.isSaving = true;\n        this.alertService.startLoadingMessage('Saving changes...');\n\n        this.roleEdit.permissions = this.getSelectedPermissions();\n\n        if (this.isNewRole) {\n            this.accountService.newRole(this.roleEdit).subscribe(role => this.saveSuccessHelper(role), error => this.saveFailedHelper(error));\n        } else {\n            this.accountService.updateRole(this.roleEdit).subscribe(response => this.saveSuccessHelper(), error => this.saveFailedHelper(error));\n        }\n    }\n\n\n\n\n    private saveSuccessHelper(role?: Role) {\n        if (role) {\n            Object.assign(this.roleEdit, role);\n        }\n\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.showValidationErrors = false;\n\n        if (this.isNewRole) {\n            this.alertService.showMessage('Success', `Role \\\"${this.roleEdit.name}\\\" was created successfully`, MessageSeverity.success);\n        } else {\n            this.alertService.showMessage('Success', `Changes to role \\\"${this.roleEdit.name}\\\" was saved successfully`, MessageSeverity.success);\n        }\n\n\n        this.roleEdit = new Role();\n        this.resetForm();\n\n\n        if (!this.isNewRole && this.accountService.currentUser.roles.some(r => r == this.editingRoleName)) {\n            this.refreshLoggedInUser();\n        }\n\n        if (this.changesSavedCallback) {\n            this.changesSavedCallback();\n        }\n    }\n\n\n    private refreshLoggedInUser() {\n        this.accountService.refreshLoggedInUser()\n            .subscribe(user => { },\n                error => {\n                    this.alertService.resetStickyMessage();\n                    this.alertService.showStickyMessage('Refresh failed', 'An error occured whilst refreshing logged in user information from the server', MessageSeverity.error, error);\n                });\n    }\n\n\n\n    private saveFailedHelper(error: any) {\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.alertService.showStickyMessage('Save Error', 'The below errors occured whilst saving your changes:', MessageSeverity.error, error);\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\n\n        if (this.changesFailedCallback) {\n            this.changesFailedCallback();\n        }\n    }\n\n\n    cancel() {\n        this.roleEdit = new Role();\n\n        this.showValidationErrors = false;\n        this.resetForm();\n\n        this.alertService.showMessage('Cancelled', 'Operation cancelled by user', MessageSeverity.default);\n        this.alertService.resetStickyMessage();\n\n        if (this.changesCancelledCallback) {\n            this.changesCancelledCallback();\n        }\n    }\n\n\n\n    selectAll() {\n        this.allPermissions.forEach(p => this.selectedValues[p.value] = true);\n    }\n\n\n    selectNone() {\n        this.allPermissions.forEach(p => this.selectedValues[p.value] = false);\n    }\n\n\n    toggleGroup(groupName: string) {\n        let firstMemberValue: boolean;\n\n        this.allPermissions.forEach(p => {\n            if (p.groupName != groupName) {\n                return;\n            }\n\n            if (firstMemberValue == null) {\n                firstMemberValue = this.selectedValues[p.value] == true;\n            }\n\n            this.selectedValues[p.value] = !firstMemberValue;\n        });\n    }\n\n\n    private getSelectedPermissions() {\n        return this.allPermissions.filter(p => this.selectedValues[p.value] == true);\n    }\n\n\n    resetForm(replace = false) {\n\n        if (!replace) {\n            this.form.reset();\n        } else {\n            this.formResetToggle = false;\n\n            setTimeout(() => {\n                this.formResetToggle = true;\n            });\n        }\n    }\n\n\n    newRole(allPermissions: Permission[]) {\n        this.isNewRole = true;\n        this.showValidationErrors = true;\n\n        this.editingRoleName = null;\n        this.allPermissions = allPermissions;\n        this.selectedValues = {};\n        this.roleEdit = new Role();\n\n        return this.roleEdit;\n    }\n\n    editRole(role: Role, allPermissions: Permission[]) {\n        if (role) {\n            this.isNewRole = false;\n            this.showValidationErrors = true;\n\n            this.editingRoleName = role.name;\n            this.allPermissions = allPermissions;\n            this.selectedValues = {};\n            role.permissions.forEach(p => this.selectedValues[p.value] = true);\n            this.roleEdit = new Role();\n            Object.assign(this.roleEdit, role);\n\n            return this.roleEdit;\n        } else {\n            return this.newRole(allPermissions);\n        }\n    }\n\n\n\n    get canManageRoles() {\n        return this.accountService.userHasPermission(Permission.manageRolesPermission);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, AfterViewInit, TemplateRef, ViewChild, Input } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\n\nimport {\n    AlertService,\n    AppTranslationService,\n    LocalStoreManager,\n    ConfigurationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission\n} from '@polpware/ngx-oauth2';\n\nimport { AccountService } from '../../services/account.service';\nimport { Role } from '../../models/role.model';\nimport { RoleEditorComponent } from '../role-editor/role-editor.component';\n\n\n@Component({\n    selector: 'roles-management',\n    templateUrl: './roles-management.component.html',\n    styleUrls: ['./roles-management.component.scss']\n})\nexport class RolesManagementComponent implements OnInit, AfterViewInit {\n    columns: any[] = [];\n    rows: Role[] = [];\n    rowsCache: Role[] = [];\n    allPermissions: Permission[] = [];\n    editedRole: Role;\n    sourceRole: Role;\n    editingRoleName: { name: string };\n    loadingIndicator: boolean;\n\n\n\n    @ViewChild('indexTemplate', { static: true })\n    indexTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    @ViewChild('editorModal', { static: true })\n    editorModal: ModalDirective;\n\n    @ViewChild('roleEditor', { static: true })\n    roleEditor: RoleEditorComponent;\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService) {\n    }\n\n\n    ngOnInit() {\n\n        const gT = (key: string) => this.translationService.getTranslation(key);\n\n        this.columns = [\n            { prop: 'index', name: '#', width: 50, cellTemplate: this.indexTemplate, canAutoResize: false },\n            { prop: 'name', name: gT('roles.management.Name'), width: 180 },\n            { prop: 'description', name: gT('roles.management.Description'), width: 320 },\n            { prop: 'usersCount', name: gT('roles.management.Users'), width: 50 },\n            { name: '', width: 160, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\n        ];\n\n        this.loadData();\n    }\n\n\n\n\n\n    ngAfterViewInit() {\n\n        this.roleEditor.changesSavedCallback = () => {\n            this.addNewRoleToList();\n            this.editorModal.hide();\n        };\n\n        this.roleEditor.changesCancelledCallback = () => {\n            this.editedRole = null;\n            this.sourceRole = null;\n            this.editorModal.hide();\n        };\n    }\n\n\n    addNewRoleToList() {\n        if (this.sourceRole) {\n            Object.assign(this.sourceRole, this.editedRole);\n\n            let sourceIndex = this.rowsCache.indexOf(this.sourceRole, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rowsCache, sourceIndex, 0);\n            }\n\n            sourceIndex = this.rows.indexOf(this.sourceRole, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rows, sourceIndex, 0);\n            }\n\n            this.editedRole = null;\n            this.sourceRole = null;\n        } else {\n            const role = new Role();\n            Object.assign(role, this.editedRole);\n            this.editedRole = null;\n\n            let maxIndex = 0;\n            for (const r of this.rowsCache) {\n                if ((r as any).index > maxIndex) {\n                    maxIndex = (r as any).index;\n                }\n            }\n\n            (role as any).index = maxIndex + 1;\n\n            this.rowsCache.splice(0, 0, role);\n            this.rows.splice(0, 0, role);\n            this.rows = [...this.rows];\n        }\n    }\n\n\n\n\n    loadData() {\n        this.alertService.startLoadingMessage();\n        this.loadingIndicator = true;\n\n        this.accountService.getRolesAndPermissions()\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                const roles = results[0];\n                const permissions = results[1];\n\n                roles.forEach((role, index, roles) => {\n                    (role as any).index = index + 1;\n                });\n\n\n                this.rowsCache = [...roles];\n                this.rows = roles;\n\n                this.allPermissions = permissions;\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Load Error', `Unable to retrieve roles from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    onSearchChanged(value: string) {\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.name, r.description));\n    }\n\n\n    onEditorModalHidden() {\n        this.editingRoleName = null;\n        this.roleEditor.resetForm(true);\n    }\n\n\n    newRole() {\n        this.editingRoleName = null;\n        this.sourceRole = null;\n        this.editedRole = this.roleEditor.newRole(this.allPermissions);\n        this.editorModal.show();\n    }\n\n\n    editRole(row: Role) {\n        this.editingRoleName = { name: row.name };\n        this.sourceRole = row;\n        this.editedRole = this.roleEditor.editRole(row, this.allPermissions);\n        this.editorModal.show();\n    }\n\n    deleteRole(row: Role) {\n        this.alertService.showDialog('Are you sure you want to delete the \\\"' + row.name + '\\\" role?', DialogType.confirm, () => this.deleteRoleHelper(row));\n    }\n\n\n    deleteRoleHelper(row: Role) {\n\n        this.alertService.startLoadingMessage('Deleting...');\n        this.loadingIndicator = true;\n\n        this.accountService.deleteRole(row)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                this.rowsCache = this.rowsCache.filter(item => item !== row);\n                this.rows = this.rows.filter(item => item !== row);\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the role.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    get canManageRoles() {\n        return this.accountService.userHasPermission(Permission.manageRolesPermission);\n    }\n\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService,\n    LocalStoreManager\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    AuthService,\n    Permission,\n} from '@polpware/ngx-oauth2';\n\n\n@Component({\n    selector: 'todo-demo',\n    templateUrl: './todo-demo.component.html',\n    styleUrls: ['./todo-demo.component.scss']\n})\nexport class TodoDemoComponent implements OnInit, OnDestroy {\n    public static readonly DBKeyTodoDemo = 'todo-demo.todo_list';\n\n    rows = [];\n    rowsCache = [];\n    columns = [];\n    editing = {};\n    taskEdit: any = {};\n    isDataLoaded = false;\n    loadingIndicator = true;\n    formResetToggle = true;\n    _currentUserId: string;\n    _hideCompletedTasks = false;\n\n\n    get currentUserId() {\n        if (this.authService.currentUser) {\n            this._currentUserId = this.authService.currentUser.id;\n        }\n\n        return this._currentUserId;\n    }\n\n\n    set hideCompletedTasks(value: boolean) {\n\n        if (value) {\n            this.rows = this.rowsCache.filter(r => !r.completed);\n        } else {\n            this.rows = [...this.rowsCache];\n        }\n\n\n        this._hideCompletedTasks = value;\n    }\n\n    get hideCompletedTasks() {\n        return this._hideCompletedTasks;\n    }\n\n\n    @Input()\n    verticalScrollbar = false;\n\n\n    @ViewChild('statusHeaderTemplate', { static: true })\n    statusHeaderTemplate: TemplateRef<any>;\n\n    @ViewChild('statusTemplate', { static: true })\n    statusTemplate: TemplateRef<any>;\n\n    @ViewChild('nameTemplate', { static: true })\n    nameTemplate: TemplateRef<any>;\n\n    @ViewChild('descriptionTemplate', { static: true })\n    descriptionTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    @ViewChild('editorModal', { static: true })\n    editorModal: ModalDirective;\n\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private localStorage: LocalStoreManager, private authService: AuthService) {\n    }\n\n\n\n    ngOnInit() {\n        this.loadingIndicator = true;\n\n        this.fetch((data) => {\n            this.refreshDataIndexes(data);\n            this.rows = data;\n            this.rowsCache = [...data];\n            this.isDataLoaded = true;\n\n            setTimeout(() => { this.loadingIndicator = false; }, 1500);\n        });\n\n\n        const gT = (key: string) => this.translationService.getTranslation(key);\n\n        this.columns = [\n            { prop: 'completed', name: '', width: 30, headerTemplate: this.statusHeaderTemplate, cellTemplate: this.statusTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\n            { prop: 'name', name: gT('todoDemo.management.Task'), cellTemplate: this.nameTemplate, width: 200 },\n            { prop: 'description', name: gT('todoDemo.management.Description'), cellTemplate: this.descriptionTemplate, width: 500 },\n            { name: '', width: 80, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\n        ];\n    }\n\n    ngOnDestroy() {\n        this.saveToDisk();\n    }\n\n\n\n    fetch(cb) {\n        let data = this.getFromDisk();\n\n        if (data == null) {\n            setTimeout(() => {\n\n                data = this.getFromDisk();\n\n                if (data == null) {\n                    data = [\n                        { completed: true, important: true, name: 'Create visual studio extension', description: 'Create a visual studio VSIX extension package that will add this project as an aspnet-core project template' },\n                        { completed: false, important: true, name: 'Do a quick how-to writeup', description: '' },\n                        {\n                            completed: false, important: false, name: 'Create aspnet-core/Angular8 tutorials based on this project', description: 'Create tutorials (blog/video/youtube) on how to build applications (full stack)' +\n                                ' using aspnet-core/Angular8. The tutorial will focus on getting productive with the technology right away rather than the details on how and why they work so audience can get onboard quickly.'\n                        },\n                    ];\n                }\n\n                cb(data);\n            }, 1000);\n        } else {\n            cb(data);\n        }\n    }\n\n\n    refreshDataIndexes(data) {\n        let index = 0;\n\n        for (const i of data) {\n            i.$$index = index++;\n        }\n    }\n\n\n    onSearchChanged(value: string) {\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.name, r.description) || value == 'important' && r.important || value == 'not important' && !r.important);\n    }\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n\n    addTask() {\n        this.formResetToggle = false;\n\n        setTimeout(() => {\n            this.formResetToggle = true;\n\n            this.taskEdit = {};\n            this.editorModal.show();\n        });\n    }\n\n    save() {\n        this.rowsCache.splice(0, 0, this.taskEdit);\n        this.rows.splice(0, 0, this.taskEdit);\n        this.refreshDataIndexes(this.rowsCache);\n        this.rows = [...this.rows];\n\n        this.saveToDisk();\n        this.editorModal.hide();\n    }\n\n\n    updateValue(event, cell, cellValue, row) {\n        this.editing[row.$$index + '-' + cell] = false;\n        this.rows[row.$$index][cell] = event.target.value;\n        this.rows = [...this.rows];\n\n        this.saveToDisk();\n    }\n\n\n    delete(row) {\n        this.alertService.showDialog('Are you sure you want to delete the task?', DialogType.confirm, () => this.deleteHelper(row));\n    }\n\n\n    deleteHelper(row) {\n        this.rowsCache = this.rowsCache.filter(item => item !== row);\n        this.rows = this.rows.filter(item => item !== row);\n\n        this.saveToDisk();\n    }\n\n    getFromDisk() {\n        return this.localStorage.getDataObject(`${TodoDemoComponent.DBKeyTodoDemo}:${this.currentUserId}`);\n    }\n\n    saveToDisk() {\n        if (this.isDataLoaded) {\n            this.localStorage.saveSyncedSessionData(this.rowsCache, `${TodoDemoComponent.DBKeyTodoDemo}:${this.currentUserId}`);\n        }\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, ViewChild, ElementRef, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'search-box',\n    templateUrl: './search-box.component.html',\n    styleUrls: ['./search-box.component.scss']\n})\nexport class SearchBoxComponent {\n\n    @Input()\n    placeholder = 'Search...';\n\n    @Output()\n    searchChange = new EventEmitter<string>();\n\n    @ViewChild('searchInput', { static: true })\n    searchInput: ElementRef;\n\n\n    onValueChange(value: string) {\n        setTimeout(() => this.searchChange.emit(value));\n    }\n\n\n    clear() {\n        this.searchInput.nativeElement.value = '';\n        this.onValueChange(this.searchInput.nativeElement.value);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription, Observable, fromEvent, of, merge } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nimport {\n    DialogType, MessageSeverity\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\n\nrequire('chart.js');\n\n\n\n@Component({\n    selector: 'statistics-demo',\n    templateUrl: './statistics-demo.component.html',\n    styleUrls: ['./statistics-demo.component.scss']\n})\nexport class StatisticsDemoComponent implements OnInit, OnDestroy {\n\n    chartData = [\n        { data: [65, 59, 80, 81, 56, 55], label: 'Series A' },\n        { data: [28, 48, 40, 19, 86, 27], label: 'Series B' },\n        { data: [18, 48, 77, 9, 100, 27], label: 'Series C' }\n    ];\n    chartLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n    chartOptions = {\n        responsive: true,\n        title: {\n            display: false,\n            fontSize: 16,\n            text: 'Important Stuff'\n        }\n    };\n    chartColors = [\n        { // grey\n            backgroundColor: 'rgba(148,159,177,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        },\n        { // dark grey\n            backgroundColor: 'rgba(77,83,96,0.2)',\n            borderColor: 'rgba(77,83,96,1)',\n            pointBackgroundColor: 'rgba(77,83,96,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(77,83,96,1)'\n        },\n        { // something else\n            backgroundColor: 'rgba(128,128,128,0.2)',\n            borderColor: 'rgba(128,128,128,1)',\n            pointBackgroundColor: 'rgba(128,128,128,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(128,128,128,0.8)'\n        }\n    ];\n    chartLegend = true;\n    chartType = 'line';\n\n    timerReference: any;\n    windowWidth$: Observable<number>;\n    windowWidthSub: Subscription;\n\n\n    constructor(private alertService: AlertService) {\n\n    }\n\n\n    ngOnInit() {\n        this.timerReference = setInterval(() => this.randomize(), 5000);\n\n        const initialWidth$ = of(window.innerWidth);\n        const resizedWidth$ = fromEvent(window, 'resize').pipe(map((event: any) => event.target.innerWidth as number));\n        this.windowWidth$ = merge(initialWidth$, resizedWidth$).pipe(distinctUntilChanged());\n\n        this.windowWidthSub = this.windowWidth$.subscribe(width => this.chartLegend = width < 600 ? false : true);\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.timerReference);\n        this.windowWidthSub.unsubscribe();\n    }\n\n\n\n    randomize(): void {\n        const _chartData = new Array(this.chartData.length);\n        for (let i = 0; i < this.chartData.length; i++) {\n            _chartData[i] = { data: new Array(this.chartData[i].data.length), label: this.chartData[i].label };\n\n            for (let j = 0; j < this.chartData[i].data.length; j++) {\n                _chartData[i].data[j] = Math.floor((Math.random() * 100) + 1);\n            }\n        }\n\n        this.chartData = _chartData;\n    }\n\n    changeChartType(type: string) {\n        this.chartType = type;\n    }\n\n    showMessage(msg: string): void {\n        this.alertService.showMessage('Demo', msg, MessageSeverity.info);\n    }\n\n    showDialog(msg: string): void {\n        this.alertService.showDialog(msg, DialogType.prompt, (val) => this.configure(true, val), () => this.configure(false));\n    }\n\n    configure(response: boolean, value?: string) {\n\n        if (response) {\n\n            this.alertService.showStickyMessage('Simulating...', '', MessageSeverity.wait);\n\n            setTimeout(() => {\n\n                this.alertService.resetStickyMessage();\n                this.alertService.showMessage('Demo', `Your settings was successfully configured to \\\"${value}\\\"`, MessageSeverity.success);\n            }, 2000);\n        } else {\n            this.alertService.showMessage('Demo', 'Operation cancelled by user', MessageSeverity.default);\n        }\n    }\n\n    chartClicked(e): void {\n        console.log(e);\n    }\n\n    chartHovered(e): void {\n        console.log(e);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, Output, EventEmitter, OnDestroy, NgZone } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\ninterface eventArg { type: string; target: Element; relatedTarget: Element; }\n\n@Directive({\n    selector: '[bootstrapTab]',\n    exportAs: 'bootstrap-tab'\n})\nexport class BootstrapTabDirective implements OnDestroy {\n\n\n    @Output()\n    showBSTab = new EventEmitter<eventArg>();\n\n    @Output()\n    hideBSTab = new EventEmitter<eventArg>();\n\n    private tabShownSubscription: Subscription;\n    private tabHiddenSubscription: Subscription;\n\n\n    constructor(private el: ElementRef, private zone: NgZone) {\n\n        this.tabShownSubscription = fromEvent($(this.el.nativeElement), 'show.bs.tab')\n            .subscribe((e: any) => {\n                this.runInZone(() => this.showBSTab.emit({ type: e.type, target: e.target, relatedTarget: e.relatedTarget }));\n            });\n\n        this.tabHiddenSubscription = fromEvent($(this.el.nativeElement), 'hidden.bs.tab')\n            .subscribe((e: any) => {\n                this.runInZone(() => this.hideBSTab.emit({ type: e.type, target: e.target, relatedTarget: e.relatedTarget }));\n            });\n    }\n\n\n    ngOnDestroy() {\n        this.tabShownSubscription.unsubscribe();\n        this.tabHiddenSubscription.unsubscribe();\n    }\n\n\n    private runInZone(delegate: () => any) {\n        this.zone.run(() => {\n            delegate();\n        });\n    }\n\n\n    show(selector: string) {\n        $(selector).tab('show');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\n\nimport { Permission } from '@polpware/ngx-oauth2';\n\nimport { fadeInOut } from '../../services/animations';\nimport { BootstrapTabDirective } from '../../directives/bootstrap-tab.directive';\nimport { AccountService } from '../../services/account.service';\n\n\n@Component({\n    selector: 'settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.scss'],\n    animations: [fadeInOut]\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n\n    isProfileActivated = true;\n    isPreferencesActivated = false;\n    isUsersActivated = false;\n    isRolesActivated = false;\n\n    fragmentSubscription: any;\n\n    readonly profileTab = 'profile';\n    readonly preferencesTab = 'preferences';\n    readonly usersTab = 'users';\n    readonly rolesTab = 'roles';\n\n\n    @ViewChild('tab', { static: true })\n    tab: BootstrapTabDirective;\n\n\n    constructor(private router: Router, private route: ActivatedRoute, private accountService: AccountService) {\n    }\n\n\n    ngOnInit() {\n        this.fragmentSubscription = this.route.fragment.subscribe(anchor => this.showContent(anchor));\n    }\n\n\n    ngOnDestroy() {\n        this.fragmentSubscription.unsubscribe();\n    }\n\n    showContent(anchor: string) {\n        if (anchor) {\n            anchor = anchor.toLowerCase();\n        }\n\n        if ((this.isFragmentEquals(anchor, this.usersTab) && !this.canViewUsers) ||\n            (this.isFragmentEquals(anchor, this.rolesTab) && !this.canViewRoles)) {\n            return;\n        }\n\n        this.tab.show(`#${anchor || this.profileTab}Tab`);\n    }\n\n\n    isFragmentEquals(fragment1: string, fragment2: string) {\n\n        if (fragment1 == null) {\n            fragment1 = '';\n        }\n\n        if (fragment2 == null) {\n            fragment2 = '';\n        }\n\n        return fragment1.toLowerCase() == fragment2.toLowerCase();\n    }\n\n\n    onShowTab(event) {\n        const activeTab = event.target.hash.split('#', 2).pop();\n\n        this.isProfileActivated = activeTab == this.profileTab;\n        this.isPreferencesActivated = activeTab == this.preferencesTab;\n        this.isUsersActivated = activeTab == this.usersTab;\n        this.isRolesActivated = activeTab == this.rolesTab;\n\n        this.router.navigate([], { fragment: activeTab });\n    }\n\n\n    get canViewUsers() {\n        return this.accountService.userHasPermission(Permission.viewUsersPermission);\n    }\n\n    get canViewRoles() {\n        return this.accountService.userHasPermission(Permission.viewRolesPermission);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component } from '@angular/core';\nimport { fadeInOut } from '../../services/animations';\n\n@Component({\n    selector: 'not-found',\n    templateUrl: './not-found.component.html',\n    styleUrls: ['./not-found.component.scss'],\n    animations: [fadeInOut]\n})\nexport class NotFoundComponent {\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    ConfigurationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    AuthService,\n    Permission\n} from '@polpware/ngx-oauth2';\n\nimport { UserLogin } from '../../models/user-login.model';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit, OnDestroy {\n\n    userLogin = new UserLogin();\n    isLoading = false;\n    formResetToggle = true;\n    modalClosedCallback: () => void;\n    loginStatusSubscription: any;\n\n    @Input()\n    isModal = false;\n\n\n    constructor(private alertService: AlertService, private authService: AuthService, private configurations: ConfigurationService) {\n\n    }\n\n\n    ngOnInit() {\n\n        this.userLogin.rememberMe = this.authService.rememberMe;\n\n        if (this.getShouldRedirect()) {\n            this.authService.redirectLoginUser();\n        } else {\n            this.loginStatusSubscription = this.authService.getLoginStatusEvent().subscribe(isLoggedIn => {\n                if (this.getShouldRedirect()) {\n                    this.authService.redirectLoginUser();\n                }\n            });\n        }\n    }\n\n\n    ngOnDestroy() {\n        if (this.loginStatusSubscription) {\n            this.loginStatusSubscription.unsubscribe();\n        }\n    }\n\n\n    getShouldRedirect() {\n        return !this.isModal && this.authService.isLoggedIn && !this.authService.isSessionExpired;\n    }\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n    closeModal() {\n        if (this.modalClosedCallback) {\n            this.modalClosedCallback();\n        }\n    }\n\n\n    login() {\n        this.isLoading = true;\n        this.alertService.startLoadingMessage('', 'Attempting login...');\n\n        this.authService.loginWithPassword(this.userLogin.userName, this.userLogin.password, this.userLogin.rememberMe)\n            .subscribe(\n                user => {\n                    setTimeout(() => {\n                        this.alertService.stopLoadingMessage();\n                        this.isLoading = false;\n                        this.reset();\n\n                        if (!this.isModal) {\n                            this.alertService.showMessage('Login', `Welcome ${user.userName}!`, MessageSeverity.success);\n                        } else {\n                            this.alertService.showMessage('Login', `Session for ${user.userName} restored!`, MessageSeverity.success);\n                            setTimeout(() => {\n                                this.alertService.showStickyMessage('Session Restored', 'Please try your last operation again', MessageSeverity.default);\n                            }, 500);\n\n                            this.closeModal();\n                        }\n                    }, 500);\n                },\n                error => {\n\n                    this.alertService.stopLoadingMessage();\n\n                    if (Utilities.checkNoNetwork(error)) {\n                        this.alertService.showStickyMessage(Utilities.noNetworkMessageCaption, Utilities.noNetworkMessageDetail, MessageSeverity.error, error);\n                        this.offerAlternateHost();\n                    } else {\n                        const errorMessage = Utilities.getHttpResponseMessage(error);\n\n                        if (errorMessage) {\n                            this.alertService.showStickyMessage('Unable to login', this.mapLoginErrorMessage(errorMessage), MessageSeverity.error, error);\n                        } else {\n                            this.alertService.showStickyMessage('Unable to login', 'An error occured whilst logging in, please try again later.\\nError: ' + Utilities.getResponseBody(error), MessageSeverity.error, error);\n                        }\n                    }\n\n                    setTimeout(() => {\n                        this.isLoading = false;\n                    }, 500);\n                });\n    }\n\n\n    offerAlternateHost() {\n\n        if (Utilities.checkIsLocalHost(location.origin) && Utilities.checkIsLocalHost(this.configurations.baseUrl)) {\n            this.alertService.showDialog('Dear Developer!\\nIt appears your backend Web API service is not running...\\n' +\n                'Would you want to temporarily switch to the online Demo API below?(Or specify another)',\n                DialogType.prompt,\n                (value: string) => {\n                    this.configurations.baseUrl = value;\n                    this.configurations.tokenUrl = value;\n                    this.alertService.showStickyMessage('API Changed!', 'The target Web API has been changed to: ' + value, MessageSeverity.warn);\n                },\n                null,\n                null,\n                null,\n                this.configurations.fallbackBaseUrl);\n        }\n    }\n\n\n    mapLoginErrorMessage(error: string) {\n\n        if (error == 'invalid_username_or_password') {\n            return 'Invalid username or password';\n        }\n\n        if (error == 'invalid_grant') {\n            return 'This account has been disabled';\n        }\n\n        return error;\n    }\n\n\n    reset() {\n        this.formResetToggle = false;\n\n        setTimeout(() => {\n            this.formResetToggle = true;\n        });\n    }\n}\n","import {\n    NgModule,\n} from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n// Bootstrap\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { AlertModule } from 'ngx-bootstrap/alert';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ChartsModule } from 'ng2-charts';\n\n@NgModule({\n    imports: [\n    ],\n    declarations: [\n    ],\n    exports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        // Bootstrap, Note that we have imported them in the\n        // core modules (and they are only imported once)\n        BsDropdownModule,\n        TabsModule,\n        PaginationModule,\n        ModalModule,\n        AccordionModule,\n        PopoverModule,\n        TooltipModule,\n        CarouselModule,\n        AlertModule,\n\n        TranslateModule,\n        NgxDatatableModule,\n        ChartsModule\n    ],\n    providers: [\n    ],\n    entryComponents: [\n    ]\n})\nexport class DependencyModule {\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, forwardRef, Attribute } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n\n\n@Directive({\n    selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\n    providers: [\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidator), multi: true }\n    ]\n})\nexport class EqualValidator implements Validator {\n    constructor( @Attribute('validateEqual') public validateEqual: string,\n                 @Attribute('reverse') public reverse: string) {\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        const other = c.root.get(this.validateEqual);\n\n        if (!other) {\n            return null;\n        }\n\n        return this.reverse === 'true' ? this.validateReverse(c, other) : this.validateNoReverse(c, other);\n    }\n\n    private validateNoReverse(c: AbstractControl, other: AbstractControl): { [key: string]: any } {\n        return other.value === c.value ? null : { validateEqual: true };\n    }\n\n    private validateReverse(c: AbstractControl, other: AbstractControl): { [key: string]: any } {\n        if (c.value === other.value) {\n            if (other.errors) {\n                delete other.errors.validateEqual;\n\n                if (Object.keys(other.errors).length == 0) {\n                    other.setErrors(null);\n                }\n            }\n        } else {\n            other.setErrors({ validateEqual: true });\n        }\n\n        return null;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Directive({\n    selector: '[lastElement]'\n})\nexport class LastElementDirective {\n    @Input()\n    set lastElement(isLastElement: boolean) {\n\n        if (isLastElement) {\n            setTimeout(() => {\n                this.lastFunction.emit();\n            });\n        }\n    }\n\n    @Output()\n    lastFunction = new EventEmitter();\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, OnInit } from '@angular/core';\n\n\n@Directive({\n    selector: '[autofocus]'\n})\nexport class AutofocusDirective implements OnInit {\n    constructor(public elementRef: ElementRef) { }\n\n    ngOnInit() {\n        setTimeout(() => this.elementRef.nativeElement.focus(), 500);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\n@Directive({\n    selector: '[bootstrapToggle]',\n    exportAs: 'bootstrap-toggle'\n})\nexport class BootstrapToggleDirective implements OnInit, OnDestroy {\n\n    private checkedSubscription: Subscription;\n\n    @Input()\n    set ngModel(value) {\n        this.toggle(value);\n    }\n\n    @Output()\n    ngModelChange = new EventEmitter();\n\n\n    constructor(private el: ElementRef) {\n        this.checkedSubscription = fromEvent($(this.el.nativeElement), 'change')\n            .subscribe((e: any) => this.ngModelChange.emit(e.target.checked));\n    }\n\n\n    ngOnInit() {\n        this.initialize();\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n\n    initialize(options?: any) {\n        $(this.el.nativeElement).bootstrapToggle(options);\n    }\n\n    destroy() {\n        if (this.checkedSubscription) {\n            this.checkedSubscription.unsubscribe();\n        }\n\n        $(this.el.nativeElement).bootstrapToggle('destroy');\n    }\n\n    toggleOn() {\n        $(this.el.nativeElement).bootstrapToggle('on');\n    }\n\n    toggleOff() {\n        $(this.el.nativeElement).bootstrapToggle('off');\n    }\n\n    toggle(value?: boolean) {\n        if (value == null) {\n            $(this.el.nativeElement).bootstrapToggle('toggle');\n        } else {\n            $(this.el.nativeElement).prop('checked', value).change();\n        }\n    }\n\n    enable() {\n        $(this.el.nativeElement).bootstrapToggle('enable');\n    }\n\n    disable() {\n        $(this.el.nativeElement).bootstrapToggle('disable');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\n@Directive({\n    selector: '[bootstrapDatepicker]',\n    exportAs: 'bootstrap-datepicker'\n})\nexport class BootstrapDatepickerDirective implements OnInit, OnDestroy {\n\n    private _isShown = false;\n    private updateTimeout;\n    private changedSubscription: Subscription;\n    private shownSubscription: Subscription;\n    private hiddenSubscription: Subscription;\n\n    get isShown() {\n        return this._isShown;\n    }\n\n    @Input()\n    options = {};\n\n    @Input()\n    set ngModel(value) {\n        this.tryUpdate(value);\n    }\n\n\n    @Output()\n    ngModelChange = new EventEmitter();\n\n\n    constructor(private el: ElementRef) {\n        this.changedSubscription = fromEvent($(this.el.nativeElement), 'change').subscribe((e: any) => setTimeout(() => this.ngModelChange.emit(e.target.value)));\n        this.shownSubscription = fromEvent($(this.el.nativeElement), 'show').subscribe((e: any) => this._isShown = true);\n        this.hiddenSubscription = fromEvent($(this.el.nativeElement), 'hide').subscribe((e: any) => this._isShown = false);\n    }\n\n\n\n    ngOnInit() {\n        this.initialize(this.options);\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n\n\n\n    initialize(options?: any) {\n        $(this.el.nativeElement).datepicker(options);\n    }\n\n    destroy() {\n        if (this.changedSubscription) {\n            this.changedSubscription.unsubscribe();\n            this.shownSubscription.unsubscribe();\n            this.hiddenSubscription.unsubscribe();\n        }\n\n        $(this.el.nativeElement).datepicker('destroy');\n    }\n\n\n\n    show() {\n        $(this.el.nativeElement).datepicker('show');\n    }\n\n\n    hide() {\n        $(this.el.nativeElement).datepicker('hide');\n    }\n\n\n    toggle() {\n        this.isShown ? this.hide() : this.show();\n    }\n\n\n    private tryUpdate(value) {\n\n        clearTimeout(this.updateTimeout);\n\n        if (!$(this.el.nativeElement).is(':focus')) {\n            this.update(value);\n        } else {\n            this.updateTimeout = setTimeout(() => {\n                this.updateTimeout = null;\n                this.tryUpdate(value);\n            }, 100);\n        }\n    }\n\n    update(value) {\n        setTimeout(() => $(this.el.nativeElement).datepicker('update', value));\n    }\n\n\n    setDate(value) {\n        setTimeout(() => $(this.el.nativeElement).datepicker('setDate', value));\n    }\n\n\n    setUTCDate(value) {\n        setTimeout(() => $(this.el.nativeElement).datepicker('setUTCDate', value));\n    }\n\n\n    clearDates() {\n        setTimeout(() => $(this.el.nativeElement).datepicker('clearDates'));\n    }\n\n\n    getDate() {\n        $(this.el.nativeElement).datepicker('getDate');\n    }\n\n\n    getUTCDate() {\n        $(this.el.nativeElement).datepicker('getUTCDate');\n    }\n}\n","import {\n    ModuleWithProviders, NgModule,\n    Optional, SkipSelf\n} from '@angular/core';\n\nimport {\n    AlertServiceAbstractProvider,\n    ThemeManagerAbstractProvider,\n    ConfigurationServiceAbstractProvider,\n    LocalStoreManagerServiceAbstractProvider,\n    TranslationServiceAbstractProvider\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport { DependencyModule } from './dependency.module';\n\nimport { AlertServiceProvider } from './services/alert.service-provider';\nimport { ThemeManagerProvider } from './services/theme-manager.provider';\nimport { ConfigurationServiceProvider } from './services/configuration.service-provider';\nimport { AppTitleService } from './services/app-title.service';\nimport { TranslationServiceProvider } from './services/translation.service-provider';\nimport { NotificationService } from './services/notification.service';\nimport { NotificationEndpoint } from './services/notification-endpoint.service';\nimport { AccountService } from './services/account.service';\nimport { AccountEndpoint } from './services/account-endpoint.service';\nimport { LocalStoreManagerProvider } from './services/local-storage-manager.service-provider';\n\nimport { EqualValidator } from './directives/equal-validator.directive';\nimport { LastElementDirective } from './directives/last-element.directive';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { BootstrapTabDirective } from './directives/bootstrap-tab.directive';\nimport { BootstrapToggleDirective } from './directives/bootstrap-toggle.directive';\nimport { BootstrapSelectDirective } from './directives/bootstrap-select.directive';\nimport { BootstrapDatepickerDirective } from './directives/bootstrap-datepicker.directive';\n\nimport { GroupByPipe } from './pipes/group-by.pipe';\n\nimport { TodoDemoComponent } from './components/todo-demo/todo-demo.component';\nimport { StatisticsDemoComponent } from './components/statistics-demo/statistics-demo.component';\nimport { NotificationsViewerComponent } from './components/notifications-viewer/notifications-viewer.component';\nimport { SearchBoxComponent } from './components/search-box/search-box.component';\nimport { UserInfoComponent } from './components/user-info/user-info.component';\nimport { UserPreferencesComponent } from './components/user-preferences/user-preferences.component';\nimport { UsersManagementComponent } from './components/users-management/users-management.component';\nimport { RolesManagementComponent } from './components/roles-management/roles-management.component';\nimport { RoleEditorComponent } from './components/role-editor/role-editor.component';\n\nimport { LoginComponent } from './pages/login/login.component';\nimport { SettingsComponent } from './pages/settings/settings.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\n\n@NgModule({\n    declarations: [\n\n        EqualValidator,\n        LastElementDirective,\n        AutofocusDirective,\n        BootstrapTabDirective,\n        BootstrapToggleDirective,\n        BootstrapSelectDirective,\n        BootstrapDatepickerDirective,\n\n        GroupByPipe,\n\n        UsersManagementComponent,\n        UserInfoComponent,\n        UserPreferencesComponent,\n        RolesManagementComponent,\n        RoleEditorComponent,\n        NotificationsViewerComponent,\n        SearchBoxComponent,\n        StatisticsDemoComponent,\n        TodoDemoComponent,\n\n        LoginComponent,\n        SettingsComponent,\n        NotFoundComponent\n    ],\n    imports: [\n        DependencyModule\n    ],\n    exports: [\n        EqualValidator,\n        LastElementDirective,\n        AutofocusDirective,\n        BootstrapTabDirective,\n        BootstrapToggleDirective,\n        BootstrapSelectDirective,\n        BootstrapDatepickerDirective,\n\n        GroupByPipe,\n\n        UsersManagementComponent,\n        UserInfoComponent,\n        UserPreferencesComponent,\n        RolesManagementComponent,\n        RoleEditorComponent,\n        NotificationsViewerComponent,\n        SearchBoxComponent,\n        StatisticsDemoComponent,\n        TodoDemoComponent,\n\n        LoginComponent,\n        SettingsComponent,\n        NotFoundComponent\n    ],\n    providers: [\n        // Services\n        AppTitleService,\n        NotificationService,\n        NotificationEndpoint,\n        AccountService,\n        AccountEndpoint,\n\n        AlertServiceProvider,\n        ThemeManagerProvider,\n        ConfigurationServiceProvider,\n        LocalStoreManagerProvider,\n        TranslationServiceProvider,\n\n        { provide: AlertServiceAbstractProvider, useClass: AlertServiceProvider },\n        { provide: ThemeManagerAbstractProvider, useClass: ThemeManagerProvider },\n        { provide: ConfigurationServiceAbstractProvider, useClass: ConfigurationServiceProvider },\n        { provide: LocalStoreManagerServiceAbstractProvider, useClass: LocalStoreManagerProvider },\n        { provide: TranslationServiceAbstractProvider, useClass: TranslationServiceProvider }\n    ],\n    entryComponents: [\n        LoginComponent\n    ]\n})\nexport class NgxAppkitStarterAlphaModule {\n    constructor(@Optional() @SkipSelf() parentModule: NgxAppkitStarterAlphaModule) {\n        if (parentModule) {\n            throw new Error(\n                'NgxAppkitStarterAlphaModule is already loaded. Import it in the AppModule only');\n        }\n    }\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: NgxAppkitStarterAlphaModule,\n            providers: []\n        };\n    }\n}\n"],"names":[],"mappings":"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"}