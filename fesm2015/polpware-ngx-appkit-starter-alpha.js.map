{"version":3,"file":"polpware-ngx-appkit-starter-alpha.js","sources":["ng://@polpware/ngx-appkit-starter-alpha/lib/models/notification.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/role.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/user-edit.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/enums.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/models/user-login.model.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/animations.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/configuration.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/theme-manager.provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/account-endpoint.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/account.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/notification-endpoint.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/notification.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/translation.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/app-title.service.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/alert.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/services/local-storage-manager.service-provider.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pipes/group-by.pipe.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/autofocus.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-datepicker.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-select.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-tab.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/bootstrap-toggle.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/equal-validator.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/directives/last-element.directive.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/notifications-viewer/notifications-viewer.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/notifications-viewer/notifications-viewer.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/search-box/search-box.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/search-box/search-box.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/user-info/user-info.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/user-info/user-info.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/users-management/users-management.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/users-management/users-management.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/user-preferences/user-preferences.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/user-preferences/user-preferences.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/role-editor/role-editor.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/role-editor/role-editor.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/roles-management/roles-management.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/roles-management/roles-management.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/todo-demo/todo-demo.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/components/todo-demo/todo-demo.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/statistics-demo/statistics-demo.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/components/statistics-demo/statistics-demo.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/settings/settings.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/settings/settings.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/not-found/not-found.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/not-found/not-found.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/login/login.component.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/pages/login/login.component.html","ng://@polpware/ngx-appkit-starter-alpha/lib/dependency.module.ts","ng://@polpware/ngx-appkit-starter-alpha/lib/ngx-appkit-starter-alpha.module.ts","ng://@polpware/ngx-appkit-starter-alpha/public-api.ts","ng://@polpware/ngx-appkit-starter-alpha/polpware-ngx-appkit-starter-alpha.ts"],"sourcesContent":["// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Utilities } from '@polpware/ngx-appkit-contracts-alpha';\n\n\nexport class Notification {\n\n\n    public id: number;\n    public header: string;\n    public body: string;\n    public isRead: boolean;\n    public isPinned: boolean;\n    public date: Date;\n\n    public static Create(data: {}) {\n        const n = new Notification();\n        Object.assign(n, data);\n\n        if (n.date) {\n            n.date = Utilities.parseDate(n.date);\n        }\n\n        return n;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Permission } from '@polpware/ngx-oauth2';\n\n\nexport class Role {\n\n    constructor(name?: string, description?: string, permissions?: Permission[]) {\n\n        this.name = name;\n        this.description = description;\n        this.permissions = permissions;\n    }\n\n    public id: string;\n    public name: string;\n    public description: string;\n    public usersCount: number;\n    public permissions: Permission[];\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { User } from '@polpware/ngx-oauth2';\n\n\nexport class UserEdit extends User {\n    constructor(currentPassword?: string, newPassword?: string, confirmPassword?: string) {\n        super();\n\n        this.currentPassword = currentPassword;\n        this.newPassword = newPassword;\n        this.confirmPassword = confirmPassword;\n    }\n\n    public currentPassword: string;\n    public newPassword: string;\n    public confirmPassword: string;\n\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport enum Gender {\n    None,\n    Female,\n    Male\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nexport class UserLogin {\n    constructor(userName?: string, password?: string, rememberMe?: boolean) {\n        this.userName = userName;\n        this.password = password;\n        this.rememberMe = rememberMe;\n    }\n\n    userName: string;\n    password: string;\n    rememberMe: boolean;\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n\n\nexport const fadeInOut = trigger('fadeInOut', [\n    transition(':enter', [style({ opacity: 0 }), animate('0.4s ease-in', style({ opacity: 1 }))]),\n    transition(':leave', [animate('0.4s 10ms ease-out', style({ opacity: 0 }))])\n]);\n\n\n\nexport function flyInOut(duration: number = 0.2) {\n    return trigger('flyInOut', [\n        state('in', style({ opacity: 1, transform: 'translateX(0)' })),\n        transition('void => *', [style({ opacity: 0, transform: 'translateX(-100%)' }), animate(`${duration}s ease-in`)]),\n        transition('* => void', [animate(`${duration}s 10ms ease-out`, style({ opacity: 0, transform: 'translateX(100%)' }))])\n    ]);\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    ConfigurationServiceAbstractProvider,\n    IConfigurationServiceContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    ConfigurationService\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class ConfigurationServiceProvider extends ConfigurationServiceAbstractProvider {\n\n    constructor(private readonly impl: ConfigurationService) {\n        super();\n    }\n\n    get(): IConfigurationServiceContract {\n        return this.impl;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    ThemeManagerAbstractProvider,\n    IThemeManagerContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    ThemeManager\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class ThemeManagerProvider extends ThemeManagerAbstractProvider {\n\n    constructor(private readonly impl: ThemeManager) {\n        super();\n    }\n\n    get(): IThemeManagerContract {\n        return this.impl;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport {\n    AuthService,\n    EndpointBase\n} from '@polpware/ngx-oauth2';\nimport { ConfigurationService } from '@polpware/ngx-appkit-services-alpha';\n\n\n@Injectable()\nexport class AccountEndpoint extends EndpointBase {\n\n    private readonly _usersUrl: string = '/api/account/users';\n    private readonly _userByUserNameUrl: string = '/api/account/users/username';\n    private readonly _currentUserUrl: string = '/api/account/users/me';\n    private readonly _currentUserPreferencesUrl: string = '/api/account/users/me/preferences';\n    private readonly _unblockUserUrl: string = '/api/account/users/unblock';\n    private readonly _rolesUrl: string = '/api/account/roles';\n    private readonly _roleByRoleNameUrl: string = '/api/account/roles/name';\n    private readonly _permissionsUrl: string = '/api/account/permissions';\n\n    get usersUrl() { return this.configurations.baseUrl + this._usersUrl; }\n    get userByUserNameUrl() { return this.configurations.baseUrl + this._userByUserNameUrl; }\n    get currentUserUrl() { return this.configurations.baseUrl + this._currentUserUrl; }\n    get currentUserPreferencesUrl() { return this.configurations.baseUrl + this._currentUserPreferencesUrl; }\n    get unblockUserUrl() { return this.configurations.baseUrl + this._unblockUserUrl; }\n    get rolesUrl() { return this.configurations.baseUrl + this._rolesUrl; }\n    get roleByRoleNameUrl() { return this.configurations.baseUrl + this._roleByRoleNameUrl; }\n    get permissionsUrl() { return this.configurations.baseUrl + this._permissionsUrl; }\n\n\n    constructor(private configurations: ConfigurationService, http: HttpClient, authService: AuthService) {\n        super(http, authService);\n    }\n\n\n    getUserEndpoint<T>(userId?: string): Observable<T> {\n        const endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUserEndpoint(userId));\n            }));\n    }\n\n\n    getUserByUserNameEndpoint<T>(userName: string): Observable<T> {\n        const endpointUrl = `${this.userByUserNameUrl}/${userName}`;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUserByUserNameEndpoint(userName));\n            }));\n    }\n\n\n    getUsersEndpoint<T>(page?: number, pageSize?: number): Observable<T> {\n        const endpointUrl = page && pageSize ? `${this.usersUrl}/${page}/${pageSize}` : this.usersUrl;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUsersEndpoint(page, pageSize));\n            }));\n    }\n\n\n    getNewUserEndpoint<T>(userObject: any): Observable<T> {\n\n        return this.http.post<T>(this.usersUrl, JSON.stringify(userObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getNewUserEndpoint(userObject));\n            }));\n    }\n\n    getUpdateUserEndpoint<T>(userObject: any, userId?: string): Observable<T> {\n        const endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\n\n        return this.http.put<T>(endpointUrl, JSON.stringify(userObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUpdateUserEndpoint(userObject, userId));\n            }));\n    }\n\n    getPatchUpdateUserEndpoint<T>(patch: {}, userId?: string): Observable<T>;\n    getPatchUpdateUserEndpoint<T>(value: any, op: string, path: string, from?: any, userId?: string): Observable<T>;\n    getPatchUpdateUserEndpoint<T>(valueOrPatch: any, opOrUserId?: string, path?: string, from?: any, userId?: string): Observable<T> {\n        let endpointUrl: string;\n        let patchDocument: {};\n\n        if (path) {\n            endpointUrl = userId ? `${this.usersUrl}/${userId}` : this.currentUserUrl;\n            patchDocument = from ?\n                [{ value: valueOrPatch, path, op: opOrUserId, from }] :\n                [{ value: valueOrPatch, path, op: opOrUserId }];\n        } else {\n            endpointUrl = opOrUserId ? `${this.usersUrl}/${opOrUserId}` : this.currentUserUrl;\n            patchDocument = valueOrPatch;\n        }\n\n        return this.http.patch<T>(endpointUrl, JSON.stringify(patchDocument), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getPatchUpdateUserEndpoint(valueOrPatch, opOrUserId, path, from, userId));\n            }));\n    }\n\n\n    getUserPreferencesEndpoint<T>(): Observable<T> {\n\n        return this.http.get<T>(this.currentUserPreferencesUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUserPreferencesEndpoint());\n            }));\n    }\n\n    getUpdateUserPreferencesEndpoint<T>(configuration: string): Observable<T> {\n        return this.http.put<T>(this.currentUserPreferencesUrl, JSON.stringify(configuration), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUpdateUserPreferencesEndpoint(configuration));\n            }));\n    }\n\n    getUnblockUserEndpoint<T>(userId: string): Observable<T> {\n        const endpointUrl = `${this.unblockUserUrl}/${userId}`;\n\n        return this.http.put<T>(endpointUrl, null, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUnblockUserEndpoint(userId));\n            }));\n    }\n\n    getDeleteUserEndpoint<T>(userId: string): Observable<T> {\n        const endpointUrl = `${this.usersUrl}/${userId}`;\n\n        return this.http.delete<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getDeleteUserEndpoint(userId));\n            }));\n    }\n\n\n\n\n\n    getRoleEndpoint<T>(roleId: string): Observable<T> {\n        const endpointUrl = `${this.rolesUrl}/${roleId}`;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getRoleEndpoint(roleId));\n            }));\n    }\n\n\n    getRoleByRoleNameEndpoint<T>(roleName: string): Observable<T> {\n        const endpointUrl = `${this.roleByRoleNameUrl}/${roleName}`;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getRoleByRoleNameEndpoint(roleName));\n            }));\n    }\n\n\n\n    getRolesEndpoint<T>(page?: number, pageSize?: number): Observable<T> {\n        const endpointUrl = page && pageSize ? `${this.rolesUrl}/${page}/${pageSize}` : this.rolesUrl;\n\n        return this.http.get<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getRolesEndpoint(page, pageSize));\n            }));\n    }\n\n    getNewRoleEndpoint<T>(roleObject: any): Observable<T> {\n\n        return this.http.post<T>(this.rolesUrl, JSON.stringify(roleObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getNewRoleEndpoint(roleObject));\n            }));\n    }\n\n    getUpdateRoleEndpoint<T>(roleObject: any, roleId: string): Observable<T> {\n        const endpointUrl = `${this.rolesUrl}/${roleId}`;\n\n        return this.http.put<T>(endpointUrl, JSON.stringify(roleObject), this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getUpdateRoleEndpoint(roleObject, roleId));\n            }));\n    }\n\n    getDeleteRoleEndpoint<T>(roleId: string): Observable<T> {\n        const endpointUrl = `${this.rolesUrl}/${roleId}`;\n\n        return this.http.delete<T>(endpointUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getDeleteRoleEndpoint(roleId));\n            }));\n    }\n\n\n    getPermissionsEndpoint<T>(): Observable<T> {\n\n        return this.http.get<T>(this.permissionsUrl, this.requestHeaders).pipe<T>(\n            catchError(error => {\n                return this.handleError(error, () => this.getPermissionsEndpoint());\n            }));\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, forkJoin } from 'rxjs';\nimport { mergeMap, tap } from 'rxjs/operators';\n\nimport {\n    AuthService, User,\n    Permission,\n    PermissionValues\n} from '@polpware/ngx-oauth2';\n\nimport { AccountEndpoint } from './account-endpoint.service';\n\nimport { Role } from '../models/role.model';\nimport { UserEdit } from '../models/user-edit.model';\n\nexport type RolesChangedOperation = 'add' | 'delete' | 'modify';\nexport interface RolesChangedEventArg { roles: Role[] | string[]; operation: RolesChangedOperation; }\n\n@Injectable()\nexport class AccountService {\n    public static readonly roleAddedOperation: RolesChangedOperation = 'add';\n    public static readonly roleDeletedOperation: RolesChangedOperation = 'delete';\n    public static readonly roleModifiedOperation: RolesChangedOperation = 'modify';\n\n    private _rolesChanged = new Subject<RolesChangedEventArg>();\n\n    constructor(\n        private authService: AuthService,\n        private accountEndpoint: AccountEndpoint) {\n\n    }\n\n    getUser(userId?: string) {\n        return this.accountEndpoint.getUserEndpoint<User>(userId);\n    }\n\n    getUserAndRoles(userId?: string) {\n\n        return forkJoin(\n            this.accountEndpoint.getUserEndpoint<User>(userId),\n            this.accountEndpoint.getRolesEndpoint<Role[]>());\n    }\n\n    getUsers(page?: number, pageSize?: number) {\n\n        return this.accountEndpoint.getUsersEndpoint<User[]>(page, pageSize);\n    }\n\n    getUsersAndRoles(page?: number, pageSize?: number) {\n\n        return forkJoin(\n            this.accountEndpoint.getUsersEndpoint<User[]>(page, pageSize),\n            this.accountEndpoint.getRolesEndpoint<Role[]>());\n    }\n\n\n    updateUser(user: UserEdit) {\n        if (user.id) {\n            return this.accountEndpoint.getUpdateUserEndpoint(user, user.id);\n        } else {\n            return this.accountEndpoint.getUserByUserNameEndpoint<User>(user.userName).pipe(\n                mergeMap(foundUser => {\n                    user.id = foundUser.id;\n                    return this.accountEndpoint.getUpdateUserEndpoint(user, user.id);\n                }));\n        }\n    }\n\n    newUser(user: UserEdit) {\n        return this.accountEndpoint.getNewUserEndpoint<User>(user);\n    }\n\n\n    getUserPreferences() {\n        return this.accountEndpoint.getUserPreferencesEndpoint<string>();\n    }\n\n    updateUserPreferences(configuration: string) {\n        return this.accountEndpoint.getUpdateUserPreferencesEndpoint(configuration);\n    }\n\n\n    deleteUser(userOrUserId: string | User): Observable<User> {\n\n        if (typeof userOrUserId === 'string' || userOrUserId instanceof String) {\n            return this.accountEndpoint.getDeleteUserEndpoint<User>(userOrUserId as string).pipe<User>(\n                tap(data => this.onRolesUserCountChanged(data.roles)));\n        } else {\n\n            if (userOrUserId.id) {\n                return this.deleteUser(userOrUserId.id);\n            } else {\n                return this.accountEndpoint.getUserByUserNameEndpoint<User>(userOrUserId.userName).pipe<User>(\n                    mergeMap(user => this.deleteUser(user.id)));\n            }\n        }\n    }\n\n\n    unblockUser(userId: string) {\n        return this.accountEndpoint.getUnblockUserEndpoint(userId);\n    }\n\n\n    userHasPermission(permissionValue: PermissionValues): boolean {\n        return this.permissions.some(p => p == permissionValue);\n    }\n\n\n    refreshLoggedInUser() {\n        return this.accountEndpoint.refreshLogin();\n    }\n\n    getRoles(page?: number, pageSize?: number) {\n\n        return this.accountEndpoint.getRolesEndpoint<Role[]>(page, pageSize);\n    }\n\n\n    getRolesAndPermissions(page?: number, pageSize?: number) {\n\n        return forkJoin(\n            this.accountEndpoint.getRolesEndpoint<Role[]>(page, pageSize),\n            this.accountEndpoint.getPermissionsEndpoint<Permission[]>());\n    }\n\n\n    updateRole(role: Role) {\n        if (role.id) {\n            return this.accountEndpoint.getUpdateRoleEndpoint(role, role.id).pipe(\n                tap(data => this.onRolesChanged([role], AccountService.roleModifiedOperation)));\n        } else {\n            return this.accountEndpoint.getRoleByRoleNameEndpoint<Role>(role.name).pipe(\n                mergeMap(foundRole => {\n                    role.id = foundRole.id;\n                    return this.accountEndpoint.getUpdateRoleEndpoint(role, role.id);\n                }),\n                tap(data => this.onRolesChanged([role], AccountService.roleModifiedOperation)));\n        }\n    }\n\n\n    newRole(role: Role) {\n        return this.accountEndpoint.getNewRoleEndpoint<Role>(role).pipe<Role>(\n            tap(data => this.onRolesChanged([role], AccountService.roleAddedOperation)));\n    }\n\n\n    deleteRole(roleOrRoleId: string | Role): Observable<Role> {\n\n        if (typeof roleOrRoleId === 'string' || roleOrRoleId instanceof String) {\n            return this.accountEndpoint.getDeleteRoleEndpoint<Role>(roleOrRoleId as string).pipe<Role>(\n                tap(data => this.onRolesChanged([data], AccountService.roleDeletedOperation)));\n        } else {\n\n            if (roleOrRoleId.id) {\n                return this.deleteRole(roleOrRoleId.id);\n            } else {\n                return this.accountEndpoint.getRoleByRoleNameEndpoint<Role>(roleOrRoleId.name).pipe<Role>(\n                    mergeMap(role => this.deleteRole(role.id)));\n            }\n        }\n    }\n\n    getPermissions() {\n\n        return this.accountEndpoint.getPermissionsEndpoint<Permission[]>();\n    }\n\n\n    private onRolesChanged(roles: Role[] | string[], op: RolesChangedOperation) {\n        this._rolesChanged.next({ roles, operation: op });\n    }\n\n\n    onRolesUserCountChanged(roles: Role[] | string[]) {\n        return this.onRolesChanged(roles, AccountService.roleModifiedOperation);\n    }\n\n\n    getRolesChangedEvent(): Observable<RolesChangedEventArg> {\n        return this._rolesChanged.asObservable();\n    }\n\n\n\n    get permissions(): PermissionValues[] {\n        return this.authService.userPermissions;\n    }\n\n    get currentUser() {\n        return this.authService.currentUser;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n\n\n\n@Injectable()\nexport class NotificationEndpoint {\n\n    private demoNotifications = [\n        {\n            id: 1,\n            header: 'Welcome',\n            body: 'You are ...',\n            isRead: true,\n            isPinned: true,\n            date: '2019-05-28T16:29:13.5877958'\n        }\n    ];\n\n\n\n    getNotificationEndpoint<T>(notificationId: number): Observable<T> {\n\n        const notification = this.demoNotifications.find(val => val.id == notificationId);\n        let response: HttpResponse<T>;\n\n        if (notification) {\n            response = this.createResponse<T>(notification, 200);\n        } else {\n            response = this.createResponse<T>(null, 404);\n        }\n\n        return of(response.body);\n    }\n\n\n\n    getNotificationsEndpoint<T>(page: number, pageSize: number): Observable<T> {\n\n        const notifications = this.demoNotifications;\n        const response = this.createResponse<T>(this.demoNotifications, 200);\n\n        return of(response.body);\n    }\n\n\n\n    getUnreadNotificationsEndpoint<T>(userId?: string): Observable<T> {\n\n        const unreadNotifications = this.demoNotifications.filter(val => !val.isRead);\n        const response = this.createResponse<T>(unreadNotifications, 200);\n\n        return of(response.body);\n    }\n\n\n\n    getNewNotificationsEndpoint<T>(lastNotificationDate?: Date): Observable<T> {\n\n        const unreadNotifications = this.demoNotifications;\n        const response = this.createResponse<T>(unreadNotifications, 200);\n\n        return of(response.body);\n    }\n\n\n\n    getPinUnpinNotificationEndpoint<T>(notificationId: number, isPinned?: boolean, ): Observable<T> {\n\n        const notification = this.demoNotifications.find(val => val.id == notificationId);\n        let response: HttpResponse<T>;\n\n        if (notification) {\n            response = this.createResponse<T>(null, 204);\n\n            if (isPinned == null) {\n                isPinned = !notification.isPinned;\n            }\n\n            notification.isPinned = isPinned;\n            notification.isRead = true;\n        } else {\n            response = this.createResponse<T>(null, 404);\n        }\n\n\n        return of(response.body);\n    }\n\n\n\n    getReadUnreadNotificationEndpoint<T>(notificationIds: number[], isRead: boolean, ): Observable<T> {\n\n        for (const notificationId of notificationIds) {\n\n            const notification = this.demoNotifications.find(val => val.id == notificationId);\n\n            if (notification) {\n                notification.isRead = isRead;\n            }\n        }\n\n        const response = this.createResponse<T>(null, 204);\n        return of(response.body);\n    }\n\n\n\n    getDeleteNotificationEndpoint<T>(notificationId: number): Observable<T> {\n\n        const notification = this.demoNotifications.find(val => val.id == notificationId);\n        let response: HttpResponse<T>;\n\n        if (notification) {\n            this.demoNotifications = this.demoNotifications.filter(val => val.id != notificationId);\n            response = this.createResponse<T>(notification, 200);\n        } else {\n            response = this.createResponse<T>(null, 404);\n        }\n\n        return of(response.body);\n    }\n\n\n\n    private createResponse<T>(body, status: number) {\n        return new HttpResponse<T>({ body, status });\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Observable, interval } from 'rxjs';\nimport { map, flatMap, startWith } from 'rxjs/operators';\n\nimport { AuthService, User } from '@polpware/ngx-oauth2';\nimport { NotificationEndpoint } from './notification-endpoint.service';\nimport { Notification } from '../models/notification.model';\n\n@Injectable()\nexport class NotificationService {\n\n    private lastNotificationDate: Date;\n    private _recentNotifications: Notification[];\n\n    get currentUser(): User {\n        return this.authService.currentUser;\n    }\n\n    get recentNotifications() {\n        return this._recentNotifications;\n    }\n\n    set recentNotifications(notifications: Notification[]) {\n        this._recentNotifications = notifications;\n    }\n\n\n\n    constructor(private notificationEndpoint: NotificationEndpoint, private authService: AuthService) {\n\n    }\n\n\n    getNotification(notificationId?: number) {\n\n        return this.notificationEndpoint.getNotificationEndpoint(notificationId).pipe(\n            map(response => Notification.Create(response)));\n    }\n\n\n    getNotifications(page: number, pageSize: number) {\n\n        return this.notificationEndpoint.getNotificationsEndpoint(page, pageSize).pipe(\n            map(response => {\n                return this.getNotificationsFromResponse(response);\n            }));\n    }\n\n\n    getUnreadNotifications(userId?: string) {\n\n        return this.notificationEndpoint.getUnreadNotificationsEndpoint(userId).pipe(\n            map(response => this.getNotificationsFromResponse(response)));\n    }\n\n\n    getNewNotifications() {\n        return this.notificationEndpoint.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(\n            map(response => this.processNewNotificationsFromResponse(response)));\n    }\n\n\n    getNewNotificationsPeriodically() {\n        return interval(10000).pipe(\n            startWith(0),\n            flatMap(() => {\n                return this.notificationEndpoint.getNewNotificationsEndpoint(this.lastNotificationDate).pipe(\n                    map(response => this.processNewNotificationsFromResponse(response)));\n            }));\n    }\n\n\n\n\n    pinUnpinNotification(notificationOrNotificationId: number | Notification, isPinned?: boolean): Observable<any> {\n\n        if (typeof notificationOrNotificationId === 'number' || notificationOrNotificationId instanceof Number) {\n            return this.notificationEndpoint.getPinUnpinNotificationEndpoint(notificationOrNotificationId as number, isPinned);\n        } else {\n            return this.pinUnpinNotification(notificationOrNotificationId.id);\n        }\n    }\n\n\n    readUnreadNotification(notificationIds: number[], isRead: boolean): Observable<any> {\n\n        return this.notificationEndpoint.getReadUnreadNotificationEndpoint(notificationIds, isRead);\n    }\n\n\n\n\n    deleteNotification(notificationOrNotificationId: number | Notification): Observable<Notification> {\n\n        if (typeof notificationOrNotificationId === 'number' || notificationOrNotificationId instanceof Number) { // Todo: Test me if its check is valid\n            return this.notificationEndpoint.getDeleteNotificationEndpoint(notificationOrNotificationId as number).pipe(\n                map(response => {\n                    this.recentNotifications = this.recentNotifications.filter(n => n.id != notificationOrNotificationId);\n                    return Notification.Create(response);\n                }));\n        } else {\n            return this.deleteNotification(notificationOrNotificationId.id);\n        }\n    }\n\n\n\n\n    private processNewNotificationsFromResponse(response) {\n        const notifications = this.getNotificationsFromResponse(response);\n\n        for (const n of notifications) {\n            if (n.date > this.lastNotificationDate) {\n                this.lastNotificationDate = n.date;\n            }\n        }\n\n        return notifications;\n    }\n\n\n    private getNotificationsFromResponse(response) {\n        const notifications: Notification[] = [];\n\n        for (const i in response) {\n            notifications[i] = Notification.Create(response[i]);\n        }\n\n        notifications.sort((a, b) => b.date.valueOf() - a.date.valueOf());\n        notifications.sort((a, b) => (a.isPinned === b.isPinned) ? 0 : a.isPinned ? -1 : 1);\n\n        this.recentNotifications = notifications;\n\n        return notifications;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    TranslationServiceAbstractProvider,\n    ITranslationServiceContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AppTranslationService\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class TranslationServiceProvider extends TranslationServiceAbstractProvider {\n\n    constructor(private readonly impl: AppTranslationService) {\n        super();\n    }\n\n    get(): ITranslationServiceContract {\n        return this.impl;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationEnd, PRIMARY_OUTLET } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter, map, flatMap } from 'rxjs/operators';\nimport { Title } from '@angular/platform-browser';\n\nimport { Utilities } from '@polpware/ngx-appkit-contracts-alpha';\n\n\n@Injectable()\nexport class AppTitleService {\n\n    sub: Subscription;\n    appName: string;\n\n    constructor(private titleService: Title, private router: Router) {\n        this.sub = this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd),\n            map(_ => this.router.routerState.root),\n            map(route => {\n                while (route.firstChild) {\n                    route = route.firstChild;\n                }\n\n                return route;\n            }),\n            flatMap(route => route.data))\n            .subscribe(data => {\n                let title = data.title;\n\n                if (title) {\n                    const fragment = this.router.url.split('#')[1];\n\n                    if (fragment) {\n                        title += ' | ' + Utilities.toTitleCase(fragment);\n                    }\n                }\n\n                if (title && this.appName) {\n                    title += ' - ' + this.appName;\n                } else if (this.appName) {\n                    title = this.appName;\n                }\n\n                if (title) {\n                    this.titleService.setTitle(title);\n                }\n            });\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    AlertServiceAbstractProvider,\n    IAlertServiceContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class AlertServiceProvider extends AlertServiceAbstractProvider {\n\n    constructor(private readonly alertService: AlertService) {\n        super();\n    }\n\n    get(): IAlertServiceContract {\n        return this.alertService;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n    LocalStoreManagerServiceAbstractProvider,\n    ILocalStoreManagerContract\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    LocalStoreManager\n} from '@polpware/ngx-appkit-services-alpha';\n\n@Injectable()\nexport class LocalStoreManagerProvider extends LocalStoreManagerServiceAbstractProvider {\n\n    constructor(private readonly impl: LocalStoreManager) {\n        super();\n    }\n\n    get(): ILocalStoreManagerContract {\n        return this.impl;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n\n\n@Pipe({ name: 'groupBy' })\nexport class GroupByPipe implements PipeTransform {\n\n    transform(value: Array<any>, field: string): Array<any> {\n\n        if (!value) {\n            return value;\n        }\n\n        const groupedObj = value.reduce((prev, cur) => {\n            if (!prev[cur[field]]) {\n                prev[cur[field]] = [cur];\n            } else {\n                prev[cur[field]].push(cur);\n            }\n\n            return prev;\n        }, {});\n\n        return Object.keys(groupedObj).map(key => ({ key, value: groupedObj[key] }));\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, OnInit } from '@angular/core';\n\n\n@Directive({\n    selector: '[autofocus]'\n})\nexport class AutofocusDirective implements OnInit {\n    constructor(public elementRef: ElementRef) { }\n\n    ngOnInit() {\n        setTimeout(() => this.elementRef.nativeElement.focus(), 500);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\n@Directive({\n    selector: '[bootstrapDatepicker]',\n    exportAs: 'bootstrap-datepicker'\n})\nexport class BootstrapDatepickerDirective implements OnInit, OnDestroy {\n\n    private _isShown = false;\n    private updateTimeout;\n    private changedSubscription: Subscription;\n    private shownSubscription: Subscription;\n    private hiddenSubscription: Subscription;\n\n    get isShown() {\n        return this._isShown;\n    }\n\n    @Input()\n    options = {};\n\n    @Input()\n    set ngModel(value) {\n        this.tryUpdate(value);\n    }\n\n\n    @Output()\n    ngModelChange = new EventEmitter();\n\n\n    constructor(private el: ElementRef) {\n        this.changedSubscription = fromEvent($(this.el.nativeElement), 'change').subscribe((e: any) => setTimeout(() => this.ngModelChange.emit(e.target.value)));\n        this.shownSubscription = fromEvent($(this.el.nativeElement), 'show').subscribe((e: any) => this._isShown = true);\n        this.hiddenSubscription = fromEvent($(this.el.nativeElement), 'hide').subscribe((e: any) => this._isShown = false);\n    }\n\n\n\n    ngOnInit() {\n        this.initialize(this.options);\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n\n\n\n    initialize(options?: any) {\n        $(this.el.nativeElement).datepicker(options);\n    }\n\n    destroy() {\n        if (this.changedSubscription) {\n            this.changedSubscription.unsubscribe();\n            this.shownSubscription.unsubscribe();\n            this.hiddenSubscription.unsubscribe();\n        }\n\n        $(this.el.nativeElement).datepicker('destroy');\n    }\n\n\n\n    show() {\n        $(this.el.nativeElement).datepicker('show');\n    }\n\n\n    hide() {\n        $(this.el.nativeElement).datepicker('hide');\n    }\n\n\n    toggle() {\n        this.isShown ? this.hide() : this.show();\n    }\n\n\n    private tryUpdate(value) {\n\n        clearTimeout(this.updateTimeout);\n\n        if (!$(this.el.nativeElement).is(':focus')) {\n            this.update(value);\n        } else {\n            this.updateTimeout = setTimeout(() => {\n                this.updateTimeout = null;\n                this.tryUpdate(value);\n            }, 100);\n        }\n    }\n\n    update(value) {\n        setTimeout(() => $(this.el.nativeElement).datepicker('update', value));\n    }\n\n\n    setDate(value) {\n        setTimeout(() => $(this.el.nativeElement).datepicker('setDate', value));\n    }\n\n\n    setUTCDate(value) {\n        setTimeout(() => $(this.el.nativeElement).datepicker('setUTCDate', value));\n    }\n\n\n    clearDates() {\n        setTimeout(() => $(this.el.nativeElement).datepicker('clearDates'));\n    }\n\n\n    getDate() {\n        $(this.el.nativeElement).datepicker('getDate');\n    }\n\n\n    getUTCDate() {\n        $(this.el.nativeElement).datepicker('getUTCDate');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, Attribute, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\n@Directive({\n    selector: '[bootstrapSelect]',\n    exportAs: 'bootstrap-select'\n})\nexport class BootstrapSelectDirective implements OnInit, OnDestroy {\n\n    private oldValues: string | string[] = '';\n\n    private changedSubscription: Subscription;\n    private shownSubscription: Subscription;\n    private hiddenSubscription: Subscription;\n\n    @Input()\n    required: string;\n\n    @Input()\n    set ngModel(values: string | string[]) {\n        setTimeout(() => this.selected = values);\n    }\n\n\n    @Output()\n    ngModelChange = new EventEmitter();\n\n    @Output()\n    shown = new EventEmitter();\n\n    @Output()\n    hidden = new EventEmitter();\n\n\n    constructor(private el: ElementRef) {\n        this.changedSubscription = fromEvent($(this.el.nativeElement), 'changed.bs.select').subscribe((e: any) => setTimeout(() => {\n            if (this.checkIsValuesChanged(this.selected)) {\n                this.ngModelChange.emit(this.selected);\n            }\n        }));\n        this.shownSubscription = fromEvent($(this.el.nativeElement), 'shown.bs.select').subscribe((e: any) => setTimeout(() => this.shown.emit()));\n        this.hiddenSubscription = fromEvent($(this.el.nativeElement), 'hidden.bs.select').subscribe((e: any) => setTimeout(() => this.hidden.emit()));\n    }\n\n\n    ngOnInit() {\n        $(this.el.nativeElement).selectpicker();\n\n        if (this.requiredAttribute) {\n            $(this.el.nativeElement).selectpicker('setStyle', 'required', 'add');\n        }\n\n        setTimeout(() => {\n            this.refresh();\n            this.doValidation();\n        });\n\n    }\n\n    ngOnDestroy() {\n        if (this.changedSubscription) {\n            this.changedSubscription.unsubscribe();\n        }\n\n        if (this.shownSubscription) {\n            this.shownSubscription.unsubscribe();\n        }\n\n        if (this.hiddenSubscription) {\n            this.hiddenSubscription.unsubscribe();\n        }\n\n        $(this.el.nativeElement).selectpicker('destroy');\n    }\n\n    private checkIsValuesChanged(newValue: string | string[]) {\n        return !(newValue == this.oldValues ||\n            (newValue instanceof Array && newValue.length === this.oldValues.length && newValue.every((v, i) => v === this.oldValues[i])));\n    }\n\n    private doValidation() {\n        if (this.requiredAttribute) {\n            $(this.el.nativeElement).selectpicker('setStyle', !this.valid ? 'ng-valid' : 'ng-invalid', 'remove');\n            $(this.el.nativeElement).selectpicker('setStyle', this.valid ? 'ng-valid' : 'ng-invalid', 'add');\n        }\n    }\n\n    private get requiredAttribute() {\n        return this.required === '' || this.required == 'true';\n    }\n\n\n    refresh() {\n        setTimeout(() => {\n            $(this.el.nativeElement).selectpicker('refresh');\n        });\n    }\n\n    render() {\n        setTimeout(() => {\n            $(this.el.nativeElement).selectpicker('render');\n        });\n    }\n\n\n    get valid(): boolean {\n        return this.requiredAttribute ? this.selected && this.selected.length > 0 : true;\n    }\n\n\n    set selected(values: string | string[]) {\n\n        if (!this.checkIsValuesChanged(values)) {\n            return;\n        }\n\n        this.oldValues = this.selected;\n        $(this.el.nativeElement).selectpicker('val', values);\n        this.doValidation();\n    }\n\n\n    get selected(): string | string[] {\n        return $(this.el.nativeElement).selectpicker('val');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, Output, EventEmitter, OnDestroy, NgZone } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\ninterface eventArg { type: string; target: Element; relatedTarget: Element; }\n\n@Directive({\n    selector: '[bootstrapTab]',\n    exportAs: 'bootstrap-tab'\n})\nexport class BootstrapTabDirective implements OnDestroy {\n\n\n    @Output()\n    showBSTab = new EventEmitter<eventArg>();\n\n    @Output()\n    hideBSTab = new EventEmitter<eventArg>();\n\n    private tabShownSubscription: Subscription;\n    private tabHiddenSubscription: Subscription;\n\n\n    constructor(private el: ElementRef, private zone: NgZone) {\n\n        this.tabShownSubscription = fromEvent($(this.el.nativeElement), 'show.bs.tab')\n            .subscribe((e: any) => {\n                this.runInZone(() => this.showBSTab.emit({ type: e.type, target: e.target, relatedTarget: e.relatedTarget }));\n            });\n\n        this.tabHiddenSubscription = fromEvent($(this.el.nativeElement), 'hidden.bs.tab')\n            .subscribe((e: any) => {\n                this.runInZone(() => this.hideBSTab.emit({ type: e.type, target: e.target, relatedTarget: e.relatedTarget }));\n            });\n    }\n\n\n    ngOnDestroy() {\n        this.tabShownSubscription.unsubscribe();\n        this.tabHiddenSubscription.unsubscribe();\n    }\n\n\n    private runInZone(delegate: () => any) {\n        this.zone.run(() => {\n            delegate();\n        });\n    }\n\n\n    show(selector: string) {\n        $(selector).tab('show');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n\ndeclare var $: any;\n\n@Directive({\n    selector: '[bootstrapToggle]',\n    exportAs: 'bootstrap-toggle'\n})\nexport class BootstrapToggleDirective implements OnInit, OnDestroy {\n\n    private checkedSubscription: Subscription;\n\n    @Input()\n    set ngModel(value) {\n        this.toggle(value);\n    }\n\n    @Output()\n    ngModelChange = new EventEmitter();\n\n\n    constructor(private el: ElementRef) {\n        this.checkedSubscription = fromEvent($(this.el.nativeElement), 'change')\n            .subscribe((e: any) => this.ngModelChange.emit(e.target.checked));\n    }\n\n\n    ngOnInit() {\n        this.initialize();\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n\n    initialize(options?: any) {\n        $(this.el.nativeElement).bootstrapToggle(options);\n    }\n\n    destroy() {\n        if (this.checkedSubscription) {\n            this.checkedSubscription.unsubscribe();\n        }\n\n        $(this.el.nativeElement).bootstrapToggle('destroy');\n    }\n\n    toggleOn() {\n        $(this.el.nativeElement).bootstrapToggle('on');\n    }\n\n    toggleOff() {\n        $(this.el.nativeElement).bootstrapToggle('off');\n    }\n\n    toggle(value?: boolean) {\n        if (value == null) {\n            $(this.el.nativeElement).bootstrapToggle('toggle');\n        } else {\n            $(this.el.nativeElement).prop('checked', value).change();\n        }\n    }\n\n    enable() {\n        $(this.el.nativeElement).bootstrapToggle('enable');\n    }\n\n    disable() {\n        $(this.el.nativeElement).bootstrapToggle('disable');\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, forwardRef, Attribute } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n\n\n@Directive({\n    selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\n    providers: [\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidator), multi: true }\n    ]\n})\nexport class EqualValidator implements Validator {\n    constructor( @Attribute('validateEqual') public validateEqual: string,\n                 @Attribute('reverse') public reverse: string) {\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        const other = c.root.get(this.validateEqual);\n\n        if (!other) {\n            return null;\n        }\n\n        return this.reverse === 'true' ? this.validateReverse(c, other) : this.validateNoReverse(c, other);\n    }\n\n    private validateNoReverse(c: AbstractControl, other: AbstractControl): { [key: string]: any } {\n        return other.value === c.value ? null : { validateEqual: true };\n    }\n\n    private validateReverse(c: AbstractControl, other: AbstractControl): { [key: string]: any } {\n        if (c.value === other.value) {\n            if (other.errors) {\n                delete other.errors.validateEqual;\n\n                if (Object.keys(other.errors).length == 0) {\n                    other.setErrors(null);\n                }\n            }\n        } else {\n            other.setErrors({ validateEqual: true });\n        }\n\n        return null;\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Directive, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Directive({\n    selector: '[lastElement]'\n})\nexport class LastElementDirective {\n    @Input()\n    set lastElement(isLastElement: boolean) {\n\n        if (isLastElement) {\n            setTimeout(() => {\n                this.lastFunction.emit();\n            });\n        }\n    }\n\n    @Output()\n    lastFunction = new EventEmitter();\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, TemplateRef, ViewChild, Input } from '@angular/core';\n\nimport {\n    DialogType, AlertCommand, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission\n} from '@polpware/ngx-oauth2';\n\n\nimport { NotificationService } from '../../services/notification.service';\nimport { AccountService } from '../../services/account.service';\nimport { Notification } from '../../models/notification.model';\n\n\n@Component({\n    selector: 'notifications-viewer',\n    templateUrl: './notifications-viewer.component.html',\n    styleUrls: ['./notifications-viewer.component.scss']\n})\nexport class NotificationsViewerComponent implements OnInit, OnDestroy {\n    columns: any[] = [];\n    rows: Notification[] = [];\n    loadingIndicator: boolean;\n\n    dataLoadingConsecutiveFailurs = 0;\n    dataLoadingSubscription: any;\n\n\n    @Input()\n    isViewOnly: boolean;\n\n    @Input()\n    verticalScrollbar = false;\n\n\n    @ViewChild('statusHeaderTemplate', { static: true })\n    statusHeaderTemplate: TemplateRef<any>;\n\n    @ViewChild('statusTemplate', { static: true })\n    statusTemplate: TemplateRef<any>;\n\n    @ViewChild('dateTemplate', { static: true })\n    dateTemplate: TemplateRef<any>;\n\n    @ViewChild('contentHeaderTemplate', { static: true })\n    contentHeaderTemplate: TemplateRef<any>;\n\n    @ViewChild('contenBodytTemplate', { static: true })\n    contenBodytTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService, private notificationService: NotificationService) {\n    }\n\n\n    ngOnInit() {\n\n        if (this.isViewOnly) {\n            this.columns = [\n                { prop: 'date', cellTemplate: this.dateTemplate, width: 100, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\n                { prop: 'header', cellTemplate: this.contentHeaderTemplate, width: 200, resizeable: false, sortable: false, draggable: false },\n            ];\n        } else {\n            const gT = (key: string) => this.translationService.getTranslation(key);\n\n            this.columns = [\n                { prop: '', name: '', width: 10, headerTemplate: this.statusHeaderTemplate, cellTemplate: this.statusTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\n                { prop: 'date', name: gT('notifications.Date'), cellTemplate: this.dateTemplate, width: 30 },\n                { prop: 'body', name: gT('notifications.Notification'), cellTemplate: this.contenBodytTemplate, width: 500 },\n                { name: '', width: 80, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\n            ];\n        }\n\n\n        this.initDataLoading();\n    }\n\n\n    ngOnDestroy() {\n        if (this.dataLoadingSubscription) {\n            this.dataLoadingSubscription.unsubscribe();\n        }\n    }\n\n\n\n    initDataLoading() {\n\n        if (this.isViewOnly && this.notificationService.recentNotifications) {\n            this.rows = this.processResults(this.notificationService.recentNotifications);\n            return;\n        }\n\n        this.loadingIndicator = true;\n\n        const dataLoadTask = this.isViewOnly ? this.notificationService.getNewNotifications() : this.notificationService.getNewNotificationsPeriodically();\n\n        this.dataLoadingSubscription = dataLoadTask\n            .subscribe(notifications => {\n                this.loadingIndicator = false;\n                this.dataLoadingConsecutiveFailurs = 0;\n\n                this.rows = this.processResults(notifications);\n            },\n                error => {\n                    this.loadingIndicator = false;\n\n                    this.alertService.showMessage('Load Error', 'Loading new notifications from the server failed!', MessageSeverity.warn);\n                    this.alertService.logError(error);\n\n                    if (this.dataLoadingConsecutiveFailurs++ < 5) {\n                        setTimeout(() => this.initDataLoading(), 5000);\n                    } else {\n                        this.alertService.showStickyMessage('Load Error', 'Loading new notifications from the server failed!', MessageSeverity.error);\n                    }\n\n                });\n\n\n        if (this.isViewOnly) {\n            this.dataLoadingSubscription = null;\n        }\n    }\n\n\n    private processResults(notifications: Notification[]) {\n\n        if (this.isViewOnly) {\n            notifications.sort((a, b) => {\n                return b.date.valueOf() - a.date.valueOf();\n            });\n        }\n\n        return notifications;\n    }\n\n\n\n    getPrintedDate(value: Date) {\n        if (value) {\n            return Utilities.printTimeOnly(value) + ' on ' + Utilities.printDateOnly(value);\n        }\n    }\n\n\n    deleteNotification(row: Notification) {\n        this.alertService.showDialog('Are you sure you want to delete the notification \\\"' + row.header + '\\\"?', DialogType.confirm, () => this.deleteNotificationHelper(row));\n    }\n\n\n    deleteNotificationHelper(row: Notification) {\n\n        this.alertService.startLoadingMessage('Deleting...');\n        this.loadingIndicator = true;\n\n        this.notificationService.deleteNotification(row)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                this.rows = this.rows.filter(item => item.id != row.id);\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the notification.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    togglePin(row: Notification) {\n\n        const pin = !row.isPinned;\n        const opText = pin ? 'Pinning' : 'Unpinning';\n\n        this.alertService.startLoadingMessage(opText + '...');\n        this.loadingIndicator = true;\n\n        this.notificationService.pinUnpinNotification(row, pin)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                row.isPinned = pin;\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage(opText + ' Error', `An error occured whilst ${opText} the notification.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    get canManageNotifications() {\n        return this.accountService.userHasPermission(Permission.manageRolesPermission); // Todo: Consider creating separate permission for notifications\n    }\n\n}\n","<div>\n    <ngx-datatable class=\"material colored-header sm table-hover\"\n                   [loadingIndicator]=\"loadingIndicator\"\n                   [rows]=\"rows\"\n                   [rowHeight]=\"35\"\n                   [headerHeight]=\"isViewOnly ? 0 : 35\"\n                   [footerHeight]=\"35\"\n                   [limit]=\"10\"\n                   [columns]=\"columns\"\n                   [scrollbarV]=\"verticalScrollbar\"\n                   [columnMode]=\"'force'\">\n    </ngx-datatable>\n\n    <ng-template #statusHeaderTemplate>\n        <i class=\"fa fa-bullhorn\"></i>\n    </ng-template>\n\n    <ng-template #statusTemplate>\n        <span></span>\n    </ng-template>\n\n    <ng-template #dateTemplate let-row=\"row\" let-value=\"value\">\n        <span [class.unread]=\"!row.isRead\" attr.title=\"{{getPrintedDate(value)}}\">\n            {{getPrintedDate(value)}}\n        </span>\n    </ng-template>\n\n    <ng-template #contentHeaderTemplate let-row=\"row\" let-value=\"value\">\n        <span [class.unread]=\"!row.isRead\" attr.title=\"{{row.body}}\">\n            {{value}}\n        </span>\n    </ng-template>\n\n    <ng-template #contenBodytTemplate let-row=\"row\" let-value=\"value\">\n        <span [class.unread]=\"!row.isRead\" attr.title=\"{{row.header}}\">\n            {{value}}\n        </span>\n    </ng-template>\n\n\n    <ng-template #actionsTemplate let-row=\"row\">\n        <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" tooltip=\"{{'notifications.Delete' | translate}}\" container=\"body\" (click)=\"deleteNotification(row)\"><i class=\"fa fa-times\"></i></a>\n        <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" tooltip=\"{{'notifications.Pin' | translate}}\" co container=\"body\" (click)=\"togglePin(row)\">\n            <i *ngIf=\"row.isPinned\" class=\"fa fa-thumb-tack\"></i>\n            <i *ngIf=\"!row.isPinned\" class=\"fa fa-thumb-tack fa-rotate-90\"></i>\n        </a>\n    </ng-template>\n</div>","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, ViewChild, ElementRef, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'search-box',\n    templateUrl: './search-box.component.html',\n    styleUrls: ['./search-box.component.scss']\n})\nexport class SearchBoxComponent {\n\n    @Input()\n    placeholder = 'Search...';\n\n    @Output()\n    searchChange = new EventEmitter<string>();\n\n    @ViewChild('searchInput', { static: true })\n    searchInput: ElementRef;\n\n\n    onValueChange(value: string) {\n        setTimeout(() => this.searchChange.emit(value));\n    }\n\n\n    clear() {\n        this.searchInput.nativeElement.value = '';\n        this.onValueChange(this.searchInput.nativeElement.value);\n    }\n}\n","<div class=\"icon-addon addon-sm\">\n    <label for=\"searchInput\" title=\"Search\"><i class=\"fa fa-search left-icon search-icon\"></i></label>\n    <input id=\"searchInput\" #searchInput type=\"search\" ngModel=\"\" (ngModelChange)=\"onValueChange($event)\" [attr.placeholder]=\"placeholder\" class=\"form-control left-icon right-icon\">\n    <a *ngIf=\"searchInput.value\" href=\"javascript:;\" title=\"Clear\" (click)=\"clear()\" class=\"fa fa-times-circle clear-input right-icon\"></a>\n</div>","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\n\nimport {\n    MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission,\n    User\n} from '@polpware/ngx-oauth2';\n\n\nimport { AccountService } from '../../services/account.service';\nimport { UserEdit } from '../../models/user-edit.model';\nimport { Role } from '../../models/role.model';\n\n\n@Component({\n    selector: 'user-info',\n    templateUrl: './user-info.component.html',\n    styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n\n    public isEditMode = false;\n    public isNewUser = false;\n    public isSaving = false;\n    public isChangePassword = false;\n    public isEditingSelf = false;\n    public showValidationErrors = false;\n    public uniqueId: string = Utilities.uniqueId();\n    public user: User = new User();\n    public userEdit: UserEdit;\n    public allRoles: Role[] = [];\n\n    public formResetToggle = true;\n\n    public changesSavedCallback: () => void;\n    public changesFailedCallback: () => void;\n    public changesCancelledCallback: () => void;\n\n    @Input()\n    isViewOnly: boolean;\n\n    @Input()\n    isGeneralEditor = false;\n\n\n\n\n\n    @ViewChild('f', { static: false })\n    public form;\n\n    // ViewChilds Required because ngIf hides template variables from global scope\n    @ViewChild('userName', { static: false })\n    public userName;\n\n    @ViewChild('userPassword', { static: false })\n    public userPassword;\n\n    @ViewChild('email', { static: false })\n    public email;\n\n    @ViewChild('currentPassword', { static: false })\n    public currentPassword;\n\n    @ViewChild('newPassword', { static: false })\n    public newPassword;\n\n    @ViewChild('confirmPassword', { static: false })\n    public confirmPassword;\n\n    @ViewChild('roles', { static: false })\n    public roles;\n\n    @ViewChild('rolesSelector', { static: false })\n    public rolesSelector;\n\n\n    constructor(private alertService: AlertService, private accountService: AccountService) {\n    }\n\n    ngOnInit() {\n        if (!this.isGeneralEditor) {\n            this.loadCurrentUserData();\n        }\n    }\n\n\n\n    private loadCurrentUserData() {\n        this.alertService.startLoadingMessage();\n\n        if (this.canViewAllRoles) {\n            this.accountService.getUserAndRoles().subscribe(results => this.onCurrentUserDataLoadSuccessful(results[0], results[1]), error => this.onCurrentUserDataLoadFailed(error));\n        } else {\n            this.accountService.getUser().subscribe(user => this.onCurrentUserDataLoadSuccessful(user, user.roles.map(x => new Role(x))), error => this.onCurrentUserDataLoadFailed(error));\n        }\n    }\n\n\n    private onCurrentUserDataLoadSuccessful(user: User, roles: Role[]) {\n        this.alertService.stopLoadingMessage();\n        this.user = user;\n        this.allRoles = roles;\n    }\n\n    private onCurrentUserDataLoadFailed(error: any) {\n        this.alertService.stopLoadingMessage();\n        this.alertService.showStickyMessage('Load Error', `Unable to retrieve user data from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n            MessageSeverity.error, error);\n\n        this.user = new User();\n    }\n\n\n\n    getRoleByName(name: string) {\n        return this.allRoles.find((r) => r.name == name);\n    }\n\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n\n    deletePasswordFromUser(user: UserEdit | User) {\n        const userEdit = user as UserEdit;\n\n        delete userEdit.currentPassword;\n        delete userEdit.newPassword;\n        delete userEdit.confirmPassword;\n    }\n\n\n    edit() {\n        if (!this.isGeneralEditor) {\n            this.isEditingSelf = true;\n            this.userEdit = new UserEdit();\n            Object.assign(this.userEdit, this.user);\n        } else {\n            if (!this.userEdit) {\n                this.userEdit = new UserEdit();\n            }\n\n            this.isEditingSelf = this.accountService.currentUser ? this.userEdit.id == this.accountService.currentUser.id : false;\n        }\n\n        this.isEditMode = true;\n        this.showValidationErrors = true;\n        this.isChangePassword = false;\n    }\n\n\n    save() {\n        this.isSaving = true;\n        this.alertService.startLoadingMessage('Saving changes...');\n\n        if (this.isNewUser) {\n            this.accountService.newUser(this.userEdit).subscribe(user => this.saveSuccessHelper(user), error => this.saveFailedHelper(error));\n        } else {\n            this.accountService.updateUser(this.userEdit).subscribe(response => this.saveSuccessHelper(), error => this.saveFailedHelper(error));\n        }\n    }\n\n\n    private saveSuccessHelper(user?: User) {\n        this.testIsRoleUserCountChanged(this.user, this.userEdit);\n\n        if (user) {\n            Object.assign(this.userEdit, user);\n        }\n\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.isChangePassword = false;\n        this.showValidationErrors = false;\n\n        this.deletePasswordFromUser(this.userEdit);\n        Object.assign(this.user, this.userEdit);\n        this.userEdit = new UserEdit();\n        this.resetForm();\n\n\n        if (this.isGeneralEditor) {\n            if (this.isNewUser) {\n                this.alertService.showMessage('Success', `User \\\"${this.user.userName}\\\" was created successfully`, MessageSeverity.success);\n            } else if (!this.isEditingSelf) {\n                this.alertService.showMessage('Success', `Changes to user \\\"${this.user.userName}\\\" was saved successfully`, MessageSeverity.success);\n            }\n        }\n\n        if (this.isEditingSelf) {\n            this.alertService.showMessage('Success', 'Changes to your User Profile was saved successfully', MessageSeverity.success);\n            this.refreshLoggedInUser();\n        }\n\n        this.isEditMode = false;\n\n\n        if (this.changesSavedCallback) {\n            this.changesSavedCallback();\n        }\n    }\n\n\n    private saveFailedHelper(error: any) {\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.alertService.showStickyMessage('Save Error', 'The below errors occured whilst saving your changes:', MessageSeverity.error, error);\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\n\n        if (this.changesFailedCallback) {\n            this.changesFailedCallback();\n        }\n    }\n\n\n\n    private testIsRoleUserCountChanged(currentUser: User, editedUser: User) {\n\n        const rolesAdded = this.isNewUser ? editedUser.roles : editedUser.roles.filter(role => currentUser.roles.indexOf(role) == -1);\n        const rolesRemoved = this.isNewUser ? [] : currentUser.roles.filter(role => editedUser.roles.indexOf(role) == -1);\n\n        const modifiedRoles = rolesAdded.concat(rolesRemoved);\n\n        if (modifiedRoles.length) {\n            setTimeout(() => this.accountService.onRolesUserCountChanged(modifiedRoles));\n        }\n    }\n\n\n\n    cancel() {\n        if (this.isGeneralEditor) {\n            this.userEdit = this.user = new UserEdit();\n        } else {\n            this.userEdit = new UserEdit();\n        }\n\n        this.showValidationErrors = false;\n        this.resetForm();\n\n        this.alertService.showMessage('Cancelled', 'Operation cancelled by user', MessageSeverity.default);\n        this.alertService.resetStickyMessage();\n\n        if (!this.isGeneralEditor) {\n            this.isEditMode = false;\n        }\n\n        if (this.changesCancelledCallback) {\n            this.changesCancelledCallback();\n        }\n    }\n\n\n    close() {\n        this.userEdit = this.user = new UserEdit();\n        this.showValidationErrors = false;\n        this.resetForm();\n        this.isEditMode = false;\n\n        if (this.changesSavedCallback) {\n            this.changesSavedCallback();\n        }\n    }\n\n\n\n    private refreshLoggedInUser() {\n        this.accountService.refreshLoggedInUser()\n            .subscribe(user => {\n                this.loadCurrentUserData();\n            },\n                error => {\n                    this.alertService.resetStickyMessage();\n                    this.alertService.showStickyMessage('Refresh failed', 'An error occured whilst refreshing logged in user information from the server', MessageSeverity.error, error);\n                });\n    }\n\n\n    changePassword() {\n        this.isChangePassword = true;\n    }\n\n\n    unlockUser() {\n        this.isSaving = true;\n        this.alertService.startLoadingMessage('Unblocking user...');\n\n\n        this.accountService.unblockUser(this.userEdit.id)\n            .subscribe(() => {\n                this.isSaving = false;\n                this.userEdit.isLockedOut = false;\n                this.alertService.stopLoadingMessage();\n                this.alertService.showMessage('Success', 'User has been successfully unblocked', MessageSeverity.success);\n            },\n                error => {\n                    this.isSaving = false;\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Unblock Error', 'The below errors occured whilst unblocking the user:', MessageSeverity.error, error);\n                    this.alertService.showStickyMessage(error, null, MessageSeverity.error);\n                });\n    }\n\n\n    resetForm(replace = false) {\n        this.isChangePassword = false;\n\n        if (!replace) {\n            this.form.reset();\n        } else {\n            this.formResetToggle = false;\n\n            setTimeout(() => {\n                this.formResetToggle = true;\n            });\n        }\n    }\n\n\n    newUser(allRoles: Role[]) {\n        this.isGeneralEditor = true;\n        this.isNewUser = true;\n\n        this.allRoles = [...allRoles];\n        this.user = this.userEdit = new UserEdit();\n        this.userEdit.isEnabled = true;\n        this.edit();\n\n        return this.userEdit;\n    }\n\n    editUser(user: User, allRoles: Role[]) {\n        if (user) {\n            this.isGeneralEditor = true;\n            this.isNewUser = false;\n\n            this.setRoles(user, allRoles);\n            this.user = new User();\n            this.userEdit = new UserEdit();\n            Object.assign(this.user, user);\n            Object.assign(this.userEdit, user);\n            this.edit();\n\n            return this.userEdit;\n        } else {\n            return this.newUser(allRoles);\n        }\n    }\n\n\n    displayUser(user: User, allRoles?: Role[]) {\n\n        this.user = new User();\n        Object.assign(this.user, user);\n        this.deletePasswordFromUser(this.user);\n        this.setRoles(user, allRoles);\n\n        this.isEditMode = false;\n    }\n\n\n\n    private setRoles(user: User, allRoles?: Role[]) {\n\n        this.allRoles = allRoles ? [...allRoles] : [];\n\n        if (user.roles) {\n            for (const ur of user.roles) {\n                if (!this.allRoles.some(r => r.name == ur)) {\n                    this.allRoles.unshift(new Role(ur));\n                }\n            }\n        }\n\n        if (allRoles == null || this.allRoles.length != allRoles.length) {\n            setTimeout(() => {\n                if (this.rolesSelector) {\n                    this.rolesSelector.refresh();\n                }\n            });\n        }\n    }\n\n\n\n    get canViewAllRoles() {\n        return this.accountService.userHasPermission(Permission.viewRolesPermission);\n    }\n\n    get canAssignRoles() {\n        return this.accountService.userHasPermission(Permission.assignRolesPermission);\n    }\n}\n","<div>\n  <form *ngIf=\"formResetToggle\" [attr.autocomplete]=\"isGeneralEditor ? 'NaN' : null\" name=\"userInfoForm\" #f=\"ngForm\" novalidate\n        (ngSubmit)=\"f.form.valid ? save() :\n\n          (!userName.valid && showErrorAlert('User name is required', 'Please enter a user name (minimum of 2 and maximum of 200 characters)'));\n\n          (userPassword && !userPassword.valid && showErrorAlert('Password is required', 'Please enter the current password'));\n\n          (email.errors?.required && showErrorAlert('Email is required', 'Please enter an email address (maximum of 200 characters)'));\n          (email.errors?.pattern && showErrorAlert('Invalid Email', 'Please enter a valid email address'));\n\n          (isChangePassword && isEditingSelf && !currentPassword.valid && showErrorAlert('Current password is required', 'Please enter the current password'));\n\n          ((isChangePassword || isNewUser) && !newPassword.valid && showErrorAlert('New password is required', 'Please enter the new password (minimum of 6 characters)'));\n\n          ((isChangePassword || isNewUser) && newPassword.valid && confirmPassword.errors?.required && showErrorAlert('Confirmation password is required', 'Please enter the confirmation password'));\n          ((isChangePassword || isNewUser) && newPassword.valid && confirmPassword.errors?.validateEqual && showErrorAlert('Passwword mismatch', 'New password and confirmation password do not match'));\n\n          (canAssignRoles && !isEditingSelf && !roles.valid && showErrorAlert('Roles is required', 'Please select a minimum of 1 role'));\">\n\n    <div class=\"form-group row\">\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"jobTitle-{{uniqueId}}\">{{'users.editor.JobTitle' | translate}}</label>\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <p class=\"form-control-plaintext\">{{user.jobTitle}}</p>\n      </div>\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <input autofocus type=\"text\" attr.id=\"jobTitle-{{uniqueId}}\" name=\"jobTitle\" placeholder=\"Enter Job Title\" class=\"form-control\" [(ngModel)]=\"userEdit.jobTitle\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div class=\"form-group row has-feedback-icon\">\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"userName-{{uniqueId}}\">{{'users.editor.UserName' | translate}}</label>\n      <div *ngIf=\"!isEditMode || isEditingSelf\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <p class=\"form-control-plaintext\">{{user.userName}}</p>\n      </div>\n      <div *ngIf=\"isEditMode && !isEditingSelf\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <input type=\"text\" attr.id=\"userName-{{uniqueId}}\" name=\"userName\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Enter user name\"\n               class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && userName.valid, 'is-invalid' : f.submitted && !userName.valid}\"\n               [(ngModel)]=\"userEdit.userName\" #userName=\"ngModel\" required minlength=\"2\" maxlength=\"200\" />\n        <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': userName.valid, 'fa-times' : !userName.valid}\" aria-hidden=\"true\"></i>\n        <span *ngIf=\"showValidationErrors && f.submitted && !userName.valid\" class=\"invalid-feedback\">\n          {{'users.editor.UserNameRequired' | translate}}\n        </span>\n      </div>\n    </div>\n\n    <div *ngIf=\"isEditMode && isEditingSelf && !isChangePassword && user.userName != userEdit.userName\" class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr class=\"password-separator-hr\" />\n      </div>\n    </div>\n    <div *ngIf=\"isEditMode && isEditingSelf && !isChangePassword && user.userName != userEdit.userName\" class=\"form-group row has-feedback-icon\">\n      <label class=\"col-form-label col-lg-2\" for=\"userPassword-{{uniqueId}}\">{{'users.editor.Password' | translate}}</label>\n      <div class=\"col-lg-10\">\n        <input type=\"password\" attr.id=\"userPassword-{{uniqueId}}\" name=\"userPassword\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Enter password\"\n               class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && userPassword.valid, 'is-invalid' : f.submitted && !userPassword.valid}\"\n               [(ngModel)]=\"userEdit.currentPassword\" #userPassword=\"ngModel\" required />\n        <small class=\"hint-sm\">{{'users.editor.PasswordHint' | translate}}</small>\n        <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': userPassword.valid, 'fa-times' : !userPassword.valid}\" aria-hidden=\"true\"></i>\n        <span *ngIf=\"showValidationErrors && f.submitted && !userPassword.valid\" class=\"invalid-feedback\">\n          {{'users.editor.CurrentPasswordRequired' | translate}}\n        </span>\n      </div>\n    </div>\n\n\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div class=\"form-group row has-feedback-icon\">\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"email-{{uniqueId}}\">{{'users.editor.Email' | translate}}</label>\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <p class=\"form-control-plaintext\">{{user.email}}</p>\n      </div>\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <input type=\"text\" attr.id=\"email-{{uniqueId}}\" name=\"email\" placeholder=\"Enter email address\" class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && email.valid, 'is-invalid' : f.submitted && !email.valid}\"\n               [(ngModel)]=\"userEdit.email\" #email=\"ngModel\" required maxlength=\"200\" pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\" />\n        <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': email.valid, 'fa-times' : !email.valid}\" aria-hidden=\"true\"></i>\n        <span *ngIf=\"showValidationErrors && f.submitted && email.errors?.required\" class=\"invalid-feedback\">\n          {{'users.editor.EmailRequired' | translate}}\n        </span>\n        <span *ngIf=\"showValidationErrors && f.submitted && email.errors?.pattern\" class=\"invalid-feedback\">\n          {{'users.editor.InvalidEmail' | translate}}\n        </span>\n      </div>\n    </div>\n\n    <div *ngIf=\"isEditMode\" class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div *ngIf=\"isEditMode\" class=\"form-group row\">\n      <label for=\"newPassword-{{uniqueId}}\" class=\"col-form-label col-lg-2\">{{'users.editor.Password' | translate}}</label>\n      <div *ngIf=\"!isChangePassword && !isNewUser\" class=\"col-lg-10\">\n        <button type=\"button\" (click)=\"changePassword()\" class=\"btn btn-link\">{{'users.editor.ChangePassword' | translate}}</button>\n      </div>\n\n      <div *ngIf=\"isChangePassword || isNewUser\" class=\"col-lg-10\">\n        <div class=\"password-well card card-body bg-light\">\n          <div *ngIf=\"isEditingSelf\" class=\"form-group row has-feedback-icon\">\n            <label class=\"col-form-label col-lg-3\" for=\"currentPassword-{{uniqueId}}\">{{'users.editor.CurrentPassword' | translate}}</label>\n            <div class=\"col-lg-9\">\n              <input type=\"password\" attr.id=\"currentPassword-{{uniqueId}}\" name=\"currentPassword\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Enter current password\" class=\"form-control\"\n                     [ngClass]=\"{'is-valid': f.submitted && currentPassword.valid, 'is-invalid' : f.submitted && !currentPassword.valid}\" [(ngModel)]=\"userEdit.currentPassword\" #currentPassword=\"ngModel\" required />\n              <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': currentPassword.valid, 'fa-times' : !currentPassword.valid}\" aria-hidden=\"true\"></i>\n              <span *ngIf=\"showValidationErrors && f.submitted && !currentPassword.valid\" class=\"invalid-feedback\">\n                {{'users.editor.CurrentPasswordRequired' | translate}}\n              </span>\n            </div>\n          </div>\n\n          <div *ngIf=\"!isNewUser\" class=\"row\">\n            <div class=\"col-lg-12\">\n              <hr class=\"password-separator-hr\" />\n            </div>\n          </div>\n\n          <div class=\"form-group row has-feedback-icon\">\n            <label class=\"col-form-label col-lg-3\" for=\"newPassword-{{uniqueId}}\">{{'users.editor.NewPassword' | translate}}</label>\n            <div class=\"col-lg-9\">\n              <input type=\"password\" attr.id=\"newPassword-{{uniqueId}}\" name=\"newPassword\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Enter new password\" class=\"form-control\"\n                     [ngClass]=\"{'is-valid': f.submitted && newPassword.valid, 'is-invalid' : f.submitted && !newPassword.valid}\" [(ngModel)]=\"userEdit.newPassword\" #newPassword=\"ngModel\"\n                     required minlength=\"6\" validateEqual=\"confirmPassword\" reverse=\"true\" />\n              <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': newPassword.valid, 'fa-times' : !newPassword.valid}\" aria-hidden=\"true\"></i>\n              <span *ngIf=\"showValidationErrors && f.submitted && !newPassword.valid\" class=\"invalid-feedback\">\n                {{'users.editor.NewPasswordRequired' | translate}}\n              </span>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <hr class=\"password-separator-hr\" />\n            </div>\n          </div>\n\n          <div class=\"form-group row has-feedback-icon\">\n            <label class=\"col-form-label col-lg-3\" for=\"confirmPassword-{{uniqueId}}\">{{'users.editor.ConfirmPassword' | translate}}</label>\n            <div class=\"col-lg-9\">\n              <input type=\"password\" attr.id=\"confirmPassword-{{uniqueId}}\" name=\"confirmPassword\" [attr.autocomplete]=\"isGeneralEditor ? 'new-password' : null\" placeholder=\"Confirm new password\" class=\"form-control\"\n                     [ngClass]=\"{'is-valid': f.submitted && confirmPassword.valid, 'is-invalid' : f.submitted && !confirmPassword.valid}\" [(ngModel)]=\"userEdit.confirmPassword\" #confirmPassword=\"ngModel\"\n                     required validateEqual=\"newPassword\" />\n              <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': confirmPassword.valid, 'fa-times' : !confirmPassword.valid}\" aria-hidden=\"true\"></i>\n              <span *ngIf=\"showValidationErrors && f.submitted && confirmPassword.errors?.required\" class=\"invalid-feedback\">\n                {{'users.editor.ConfirmationPasswordRequired' | translate}}\n              </span>\n              <span *ngIf=\"showValidationErrors && f.submitted && confirmPassword.errors?.validateEqual && !confirmPassword.errors?.required\" class=\"invalid-feedback\">\n                {{'users.editor.PasswordMismatch' | translate}}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!--******************************************************************************************************-->\n\n    <div *ngIf=\"!isEditMode || canAssignRoles || isEditingSelf\" class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div *ngIf=\"!isEditMode || canAssignRoles || isEditingSelf\" class=\"form-group row has-feedback-icon\">\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"roles-user-info\">{{'users.editor.Roles' | translate}}</label>\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <p ngPreserveWhitespaces class=\"form-control-plaintext\">\n          <span *ngFor=\"let role of user.roles\">\n            <span title='{{getRoleByName(role)?.description}}' class=\"badge badge-pill badge-secondary\">{{role}}</span>\n          </span>\n        </p>\n      </div>\n      <div *ngIf=\"isEditMode && canAssignRoles && !isEditingSelf\" [ngClass]=\"{'is-valid': f.submitted && roles.valid, 'is-invalid' : f.submitted && !roles.valid}\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <select id=\"roles-user-info\" name=\"roles\" [(ngModel)]=\"userEdit.roles\" #roles=\"ngModel\" #rolesSelector=\"bootstrap-select\"\n                class=\"selectpicker form-control left-status\" bootstrapSelect required multiple data-live-search=\"true\" data-actions-box=\"false\" data-live-search-placeholder=\"Search...\" title=\"Select Roles\">\n          <option *ngFor=\"let role of allRoles\" attr.data-content=\"<span title='{{role.description}}' class='badge badge-pill badge-secondary'>{{role.name}}</span>\" attr.value=\"{{role.name}}\">\n            {{role.name}}\n          </option>\n        </select>\n        <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': roles.valid, 'fa-times' : !roles.valid}\" aria-hidden=\"true\"></i>\n        <span *ngIf=\"showValidationErrors && f.submitted && !roles.valid\" class=\"invalid-feedback\">\n          {{'users.editor.RoleRequired' | translate}}\n        </span>\n      </div>\n    </div>\n\n    <!--******************************************************************************************************-->\n\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"fullName-{{uniqueId}}\">{{'users.editor.FullName' | translate}}</label>\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <p class=\"form-control-plaintext\">{{user.fullName}}</p>\n      </div>\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <input type=\"text\" attr.id=\"fullName-{{uniqueId}}\" name=\"fullName\" placeholder=\"Enter full name\" class=\"form-control\" [(ngModel)]=\"userEdit.fullName\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.separator-hr]=\"!isEditMode\" [class.edit-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div class=\"form-group row\">\n      <label [class.col-lg-3]=\"isViewOnly\" [class.col-lg-2]=\"!isViewOnly\" class=\"col-form-label\" for=\"phoneNumber-{{uniqueId}}\">{{'users.editor.PhoneNumber' | translate}}</label>\n      <div *ngIf=\"!isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <p class=\"form-control-plaintext\">{{user.phoneNumber}}</p>\n      </div>\n      <div *ngIf=\"isEditMode\" [class.col-lg-9]=\"isViewOnly\" [class.col-lg-10]=\"!isViewOnly\">\n        <input type=\"text\" attr.id=\"phoneNumber-{{uniqueId}}\" name=\"phoneNumber\" placeholder=\"Enter phone number\" class=\"form-control\" [(ngModel)]=\"userEdit.phoneNumber\" />\n      </div>\n    </div>\n\n    <div *ngIf=\"!isViewOnly\" class=\"row\">\n      <div class=\"col-lg-12\">\n        <hr [class.last-separator-hr]=\"!isEditMode\" [class.edit-last-separator-hr]=\"isEditMode\" />\n      </div>\n    </div>\n\n    <div *ngIf=\"!isViewOnly\" class=\"form-group row\">\n      <div class=\"col-sm-5\">\n        <div *ngIf=\"isGeneralEditor && isEditMode\" class=\"float-left\">\n          <div class=\"form-check user-enabled\">\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"idEnabled\" name=\"isEnabled\" [(ngModel)]=\"userEdit.isEnabled\">\n            <label for=\"idEnabled\" class=\"form-check-label\">{{'users.editor.Enabled' | translate}}</label>\n          </div>\n          <button *ngIf=\"userEdit.isLockedOut\" type=\"button\" (click)=\"unlockUser()\" class=\"btn btn-warning unblock-user\" [disabled]=\"isSaving\"><i class='fa fa-unlock-alt'></i> {{'users.editor.Unblock' | translate}}</button>\n        </div>\n      </div>\n      <div class=\"col-sm-7\">\n        <div ngPreserveWhitespaces class=\"float-right\">\n          <button *ngIf=\"!isEditMode && isGeneralEditor\" type=\"button\" (click)=\"close()\" class=\"btn btn-outline-secondary\"><i class='fa fa-close'></i> {{'users.editor.Close' | translate}}</button>\n          <button *ngIf=\"!isEditMode && !isGeneralEditor\" type=\"button\" (click)=\"edit()\" class=\"btn btn-outline-secondary\"><i class='fa fa-edit'></i> {{'users.editor.Edit' | translate}}</button>\n          <button *ngIf=\"isEditMode\" type=\"button\" (click)=\"cancel()\" class=\"btn btn-danger\" [disabled]=\"isSaving\"><i class='fa fa-times'></i> {{'users.editor.Cancel' | translate}}</button>\n          <button *ngIf=\"isEditMode\" type=\"submit\" class=\"btn btn-primary\" [disabled]=\"isSaving\">\n            <i *ngIf=\"!isSaving\" class='fa fa-save'></i><i *ngIf=\"isSaving\" class='fa fa-circle-o-notch fa-spin'></i> {{isSaving ? ('users.editor.Saving' | translate) : ('users.editor.Save' | translate)}}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"clearfix\"></div>\n  </form>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, AfterViewInit, TemplateRef, ViewChild, Input } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission,\n    User\n} from '@polpware/ngx-oauth2';\n\nimport { AccountService } from '../../services/account.service';\nimport { Role } from '../../models/role.model';\nimport { UserEdit } from '../../models/user-edit.model';\nimport { UserInfoComponent } from '../user-info/user-info.component';\n\n\n@Component({\n    selector: 'users-management',\n    templateUrl: './users-management.component.html',\n    styleUrls: ['./users-management.component.scss']\n})\nexport class UsersManagementComponent implements OnInit, AfterViewInit {\n    columns: any[] = [];\n    rows: User[] = [];\n    rowsCache: User[] = [];\n    editedUser: UserEdit;\n    sourceUser: UserEdit;\n    editingUserName: { name: string };\n    loadingIndicator: boolean;\n\n    allRoles: Role[] = [];\n\n\n    @ViewChild('indexTemplate', { static: true })\n    indexTemplate: TemplateRef<any>;\n\n    @ViewChild('userNameTemplate', { static: true })\n    userNameTemplate: TemplateRef<any>;\n\n    @ViewChild('rolesTemplate', { static: true })\n    rolesTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    @ViewChild('editorModal', { static: true })\n    editorModal: ModalDirective;\n\n    @ViewChild('userEditor', { static: true })\n    userEditor: UserInfoComponent;\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService) {\n    }\n\n\n    ngOnInit() {\n\n        const gT = (key: string) => this.translationService.getTranslation(key);\n\n        this.columns = [\n            { prop: 'index', name: '#', width: 40, cellTemplate: this.indexTemplate, canAutoResize: false },\n            { prop: 'jobTitle', name: gT('users.management.Title'), width: 50 },\n            { prop: 'userName', name: gT('users.management.UserName'), width: 90, cellTemplate: this.userNameTemplate },\n            { prop: 'fullName', name: gT('users.management.FullName'), width: 120 },\n            { prop: 'email', name: gT('users.management.Email'), width: 140 },\n            { prop: 'roles', name: gT('users.management.Roles'), width: 120, cellTemplate: this.rolesTemplate },\n            { prop: 'phoneNumber', name: gT('users.management.PhoneNumber'), width: 100 }\n        ];\n\n        if (this.canManageUsers) {\n            this.columns.push({ name: '', width: 160, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false });\n        }\n\n        this.loadData();\n    }\n\n\n    ngAfterViewInit() {\n\n        this.userEditor.changesSavedCallback = () => {\n            this.addNewUserToList();\n            this.editorModal.hide();\n        };\n\n        this.userEditor.changesCancelledCallback = () => {\n            this.editedUser = null;\n            this.sourceUser = null;\n            this.editorModal.hide();\n        };\n    }\n\n\n    addNewUserToList() {\n        if (this.sourceUser) {\n            Object.assign(this.sourceUser, this.editedUser);\n\n            let sourceIndex = this.rowsCache.indexOf(this.sourceUser, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rowsCache, sourceIndex, 0);\n            }\n\n            sourceIndex = this.rows.indexOf(this.sourceUser, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rows, sourceIndex, 0);\n            }\n\n            this.editedUser = null;\n            this.sourceUser = null;\n        } else {\n            const user = new User();\n            Object.assign(user, this.editedUser);\n            this.editedUser = null;\n\n            let maxIndex = 0;\n            for (const u of this.rowsCache) {\n                if ((u as any).index > maxIndex) {\n                    maxIndex = (u as any).index;\n                }\n            }\n\n            (user as any).index = maxIndex + 1;\n\n            this.rowsCache.splice(0, 0, user);\n            this.rows.splice(0, 0, user);\n            this.rows = [...this.rows];\n        }\n    }\n\n\n    loadData() {\n        this.alertService.startLoadingMessage();\n        this.loadingIndicator = true;\n\n        if (this.canViewRoles) {\n            this.accountService.getUsersAndRoles().subscribe(results => this.onDataLoadSuccessful(results[0], results[1]), error => this.onDataLoadFailed(error));\n        } else {\n            this.accountService.getUsers().subscribe(users => this.onDataLoadSuccessful(users, this.accountService.currentUser.roles.map(x => new Role(x))), error => this.onDataLoadFailed(error));\n        }\n    }\n\n\n    onDataLoadSuccessful(users: User[], roles: Role[]) {\n        this.alertService.stopLoadingMessage();\n        this.loadingIndicator = false;\n\n        users.forEach((user, index, users) => {\n            (user as any).index = index + 1;\n        });\n\n        this.rowsCache = [...users];\n        this.rows = users;\n\n        this.allRoles = roles;\n    }\n\n\n    onDataLoadFailed(error: any) {\n        this.alertService.stopLoadingMessage();\n        this.loadingIndicator = false;\n\n        this.alertService.showStickyMessage('Load Error', `Unable to retrieve users from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n            MessageSeverity.error, error);\n    }\n\n\n    onSearchChanged(value: string) {\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.userName, r.fullName, r.email, r.phoneNumber, r.jobTitle, r.roles));\n    }\n\n    onEditorModalHidden() {\n        this.editingUserName = null;\n        this.userEditor.resetForm(true);\n    }\n\n\n    newUser() {\n        this.editingUserName = null;\n        this.sourceUser = null;\n        this.editedUser = this.userEditor.newUser(this.allRoles);\n        this.editorModal.show();\n    }\n\n\n    editUser(row: UserEdit) {\n        this.editingUserName = { name: row.userName };\n        this.sourceUser = row;\n        this.editedUser = this.userEditor.editUser(row, this.allRoles);\n        this.editorModal.show();\n    }\n\n\n    deleteUser(row: UserEdit) {\n        this.alertService.showDialog('Are you sure you want to delete \\\"' + row.userName + '\\\"?', DialogType.confirm, () => this.deleteUserHelper(row));\n    }\n\n\n    deleteUserHelper(row: UserEdit) {\n\n        this.alertService.startLoadingMessage('Deleting...');\n        this.loadingIndicator = true;\n\n        this.accountService.deleteUser(row)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                this.rowsCache = this.rowsCache.filter(item => item !== row);\n                this.rows = this.rows.filter(item => item !== row);\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the user.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n\n    get canAssignRoles() {\n        return this.accountService.userHasPermission(Permission.assignRolesPermission);\n    }\n\n    get canViewRoles() {\n        return this.accountService.userHasPermission(Permission.viewRolesPermission);\n    }\n\n    get canManageUsers() {\n        return this.accountService.userHasPermission(Permission.manageUsersPermission);\n    }\n}\n","<div>\n  <div class=\"row control-box\">\n    <div class=\"col-lg-8\">\n      <div class=\"form-group search-box\">\n        <search-box (searchChange)=\"onSearchChanged($event)\" placeholder=\"{{'users.management.Search' | translate}}\">></search-box>\n      </div>\n    </div>\n    <div class=\"col-lg-4 pr-lg-5\">\n      <ul class=\"nav flex-column flex-lg-row justify-content-end\">\n        <li *ngIf=\"canManageUsers && canAssignRoles\" class=\"nav-item toolbaritem\">\n          <a class=\"nav-link\" href=\"javascript:;\" (click)=\"newUser()\">\n            <i class=\"fa fa-plus-circle\"></i> {{'users.management.NewUser' | translate}}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <ngx-datatable class=\"material colored-header sm table table-striped table-hover\"\n                 [loadingIndicator]=\"loadingIndicator\"\n                 [rows]=\"rows\"\n                 [rowHeight]=\"35\"\n                 [headerHeight]=\"35\"\n                 [footerHeight]=\"35\"\n                 [columns]=\"columns\"\n                 [scrollbarV]=\"true\"\n                 [columnMode]=\"'force'\">\n  </ngx-datatable>\n\n  <ng-template #indexTemplate let-value=\"value\">\n    <strong>{{value}}</strong>\n  </ng-template>\n\n  <ng-template #userNameTemplate let-row=\"row\" let-value=\"value\">\n    <span [class.locked-out]=\"row.isLockedOut\" [class.user-disabled]=\"!row.isEnabled\">\n      <i *ngIf=\"row.isLockedOut\" class=\"fa fa-exclamation-triangle\"> </i>\n      <i *ngIf=\"!row.isEnabled\" class=\"fa fa-exclamation\"> </i>\n      {{value}}\n    </span>\n  </ng-template>\n\n  <ng-template #rolesTemplate let-row=\"row\" let-value=\"value\" let-i=\"index\">\n    <span class=\"user-role badge badge-pill badge-secondary\" *ngFor=\"let role of value\">{{role}}</span>\n  </ng-template>\n\n  <ng-template #actionsTemplate let-row=\"row\" let-value=\"value\" let-i=\"index\">\n    <div *ngIf=\"canManageUsers\">\n      <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"editUser(row)\"><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'users.management.Edit' | translate}}</a>|\n      <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"deleteUser(row)\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i> {{'users.management.Delete' | translate}}</a>\n    </div>\n  </ng-template>\n\n\n  <div class=\"modal fade\" bsModal #editorModal=\"bs-modal\" (onHidden)=\"onEditorModalHidden()\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h4 *ngIf=\"!editingUserName\" class=\"modal-title float-left\"><i class=\"fa fa-user-plus\"></i> {{'users.management.NewUser' | translate}}</h4>\n          <h4 *ngIf=\"editingUserName\" class=\"modal-title float-left\"><i class=\"fa fa-user-circle-o\"></i> {{'users.management.EditUser' | translate:editingUserName}}</h4>\n          <button type=\"button\" class=\"close float-right\" title=\"Close\" (click)=\"editorModal.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <user-info #userEditor [isGeneralEditor]=\"true\"></user-info>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService,\n    LocalStoreManager,\n    ConfigurationService,\n    ThemeManager\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    AuthService,\n    Permission\n} from '@polpware/ngx-oauth2';\n\nimport { BootstrapSelectDirective } from '../../directives/bootstrap-select.directive';\nimport { AccountService } from '../../services/account.service';\n\n@Component({\n    selector: 'user-preferences',\n    templateUrl: './user-preferences.component.html',\n    styleUrls: ['./user-preferences.component.scss']\n})\nexport class UserPreferencesComponent implements OnInit, OnDestroy {\n\n    themeSelectorToggle = true;\n\n    languageChangedSubscription: any;\n\n    @ViewChild('languageSelector', { static: true })\n    languageSelector: BootstrapSelectDirective;\n\n    @ViewChild('homePageSelector', { static: true })\n    homePageSelector: BootstrapSelectDirective;\n\n    constructor(\n        private alertService: AlertService,\n        private translationService: AppTranslationService,\n        private accountService: AccountService,\n        public themeManager: ThemeManager,\n        public configurations: ConfigurationService) {\n    }\n\n    ngOnInit() {\n        this.languageChangedSubscription = this.translationService.languageChanged$.subscribe(data => {\n            this.themeSelectorToggle = false;\n\n            setTimeout(() => {\n                this.languageSelector.refresh();\n                this.homePageSelector.refresh();\n                this.themeSelectorToggle = true;\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.languageChangedSubscription.unsubscribe();\n    }\n\n\n\n    reloadFromServer() {\n        this.alertService.startLoadingMessage();\n\n        this.accountService.getUserPreferences()\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n\n                this.configurations.import(results);\n\n                this.alertService.showMessage('Defaults loaded!', '', MessageSeverity.info);\n\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Load Error', `Unable to retrieve user preferences from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n    setAsDefault() {\n        this.alertService.showDialog('Are you sure you want to set the current configuration as your new defaults?', DialogType.confirm,\n            () => this.setAsDefaultHelper(),\n            () => this.alertService.showMessage('Operation Cancelled!', '', MessageSeverity.default));\n    }\n\n    setAsDefaultHelper() {\n        this.alertService.startLoadingMessage('', 'Saving new defaults');\n\n        this.accountService.updateUserPreferences(this.configurations.export())\n            .subscribe(response => {\n                this.alertService.stopLoadingMessage();\n                this.alertService.showMessage('New Defaults', 'Account defaults updated successfully', MessageSeverity.success);\n\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Save Error', `An error occured whilst saving configuration defaults.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n\n    resetDefault() {\n        this.alertService.showDialog('Are you sure you want to reset your defaults?', DialogType.confirm,\n            () => this.resetDefaultHelper(),\n            () => this.alertService.showMessage('Operation Cancelled!', '', MessageSeverity.default));\n    }\n\n    resetDefaultHelper() {\n        this.alertService.startLoadingMessage('', 'Resetting defaults');\n\n        this.accountService.updateUserPreferences(null)\n            .subscribe(response => {\n                this.alertService.stopLoadingMessage();\n                this.configurations.import(null);\n                this.alertService.showMessage('Defaults Reset', 'Account defaults reset completed successfully', MessageSeverity.success);\n\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.alertService.showStickyMessage('Save Error', `An error occured whilst resetting configuration defaults.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    get canViewCustomers() {\n        return this.accountService.userHasPermission(Permission.viewUsersPermission); // eg. viewCustomersPermission\n    }\n\n    get canViewProducts() {\n        return this.accountService.userHasPermission(Permission.viewUsersPermission); // eg. viewProductsPermission\n    }\n\n    get canViewOrders() {\n        return true; // eg. viewOrdersPermission\n    }\n}\n","<div>\n    <div class=\"form-group row\">\n        <label for=\"refreshButton\" class=\"col-sm-3 col-form-label\">{{'preferences.ReloadPreferences' | translate}} </label>\n        <div class=\"col-sm-4\">\n            <button id=\"refreshButton\" class=\"btn btn-outline-secondary\" (click)=\"reloadFromServer()\">\n                <i class=\"fa fa-refresh\"></i>\n            </button>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.ReloadPreferencesHint' | translate}}</p>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"separator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"language\" class=\"col-sm-3 col-form-label\">{{'preferences.Language' | translate}} </label>\n        <div class=\"col-sm-4\">\n            <select id=\"language\" [(ngModel)]=\"configurations.language\" #languageSelector=\"bootstrap-select\" bootstrapSelect class=\"selectpicker form-control\">\n                <option data-subtext=\"(Default)\" value=\"en\">{{'preferences.English' | translate}}</option>\n                <option value=\"fr\">{{'preferences.French' | translate}}</option>\n                <option value=\"de\">{{'preferences.German' | translate}}</option>\n                <option value=\"pt\">{{'preferences.Portuguese' | translate}}</option>\n                <option value=\"ar\">{{'preferences.Arabic' | translate}}</option>\n                <option value=\"ko\">{{'preferences.Korean' | translate}}</option>\n            </select>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.LanguageHint' | translate}}</p>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"separator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"homePage\" class=\"col-sm-3 col-form-label\">{{'preferences.HomePage' | translate}} </label>\n        <div class=\"col-sm-4\">\n            <select id=\"homePage\" [(ngModel)]=\"configurations.homeUrl\" #homePageSelector=\"bootstrap-select\" bootstrapSelect class=\"selectpicker form-control\">\n                <option data-icon=\"fa fa-tachometer\" data-subtext=\"(Default)\" value=\"/\">{{'preferences.Dashboard' | translate}}</option>\n                <option *ngIf=\"canViewCustomers\" data-icon=\"fa fa-handshake-o\" value=\"/customers\">{{'preferences.Customers' | translate}}</option>\n                <option *ngIf=\"canViewProducts\" data-icon=\"fa fa-truck\" value=\"/products\">{{'preferences.Products' | translate}}</option>\n                <option *ngIf=\"canViewOrders\" data-icon=\"fa fa-shopping-cart\" value=\"/orders\">{{'preferences.Orders' | translate}}</option>\n                <option data-icon=\"fa fa-info-circle\" value=\"/about\">{{'preferences.About' | translate}}</option>\n                <option data-icon=\"fa fa-cog\" value=\"/settings\">{{'preferences.Settings' | translate}}</option>\n            </select>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.HomePageHint' | translate}}</p>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"separator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"defaultTheme\" class=\"col-sm-3 col-form-label\">{{'preferences.Theme' | translate}} </label>\n        <div *ngIf=\"themeSelectorToggle\" class=\"col-sm-4\">\n            <select id=\"defaultTheme\" [(ngModel)]=\"configurations.themeId\" bootstrapSelect class=\"selectpicker theme-picker form-control\">\n                <option *ngFor=\"let theme of themeManager.themes\"\n                attr.data-content=\"<div class='theme-item' style='background-color: {{theme.background}}; color: {{theme.color}}'>{{'preferences.' + theme.name + 'Theme' | translate}}\n                <span class='small'>{{theme.isDark ? '(Dark)' : ''}}</span></div>\">\n                {{theme.id}}\n                </option>\n            </select>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.ThemeHint' | translate}}</p>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"separator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-3 col-form-label\" for=\"dashboardStatistics\">{{'preferences.DashboardStatistics' | translate}} </label>\n        <div class=\"col-sm-4\">\n            <div class=\"checkbox\">\n                <input name=\"dashboardStatistics\" [(ngModel)]=\"configurations.showDashboardStatistics\" class=\"form-control\" type=\"checkbox\" bootstrapToggle data-size=\"small\">\n            </div>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.DashboardStatisticsHint' | translate}}</p>\n        </div>\n    </div>\n    <!--  -->\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"subseparator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-3 col-form-label\" for=\"dashboardTodo\">{{'preferences.DashboardNotifications' | translate}} </label>\n        <div class=\"col-sm-4\">\n            <div class=\"checkbox\">\n                <input name=\"dashboardNotifications\" [(ngModel)]=\"configurations.showDashboardNotifications\" class=\"form-control\" type=\"checkbox\" bootstrapToggle data-size=\"small\">\n            </div>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.DashboardNotificationsHint' | translate}}</p>\n        </div>\n    </div>\n    <!--  -->\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"subseparator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-3 col-form-label\" for=\"dashboardTodo\">{{'preferences.DashboardTodo' | translate}} </label>\n        <div class=\"col-sm-4\">\n            <div class=\"checkbox\">\n                <input name=\"dashboardTodo\" [(ngModel)]=\"configurations.showDashboardTodo\" class=\"form-control\" type=\"checkbox\" bootstrapToggle data-size=\"small\">\n            </div>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.DashboardTodoHint' | translate}}</p>\n        </div>\n    </div>\n    <!--  -->\n\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"subseparator-hr\" />\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"col-sm-3 col-form-label\" for=\"dashboardBanner\">{{'preferences.DashboardBanner' | translate}}</label>\n        <div class=\"col-sm-4\">\n            <div class=\"checkbox\">\n                <input name=\"dashboardBanner\" [(ngModel)]=\"configurations.showDashboardBanner\" class=\"form-control\" type=\"checkbox\" bootstrapToggle data-size=\"small\">\n            </div>\n        </div>\n        <div class=\"col-sm-5\">\n            <p class=\"form-control-plaintext text-muted small\">{{'preferences.DashboardBannerHint' | translate}}</p>\n        </div>\n    </div>\n    <!--  -->\n\n\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <hr class=\"last-separator-hr\" />\n        </div>\n    </div>\n    <div class=\"form-group row\">\n        <div class=\"col-sm-3\">\n\n        </div>\n        <div class=\"col-sm-9\">\n            <div class=\"row float-left\">\n                <div class=\"col-sm-6 col-reset-default\">\n                    <button type=\"button\" (click)=\"resetDefault()\" class=\"btn btn-success\">\n                        <i class='fa fa-circle-o-notch'></i> {{'preferences.ResetDefault' | translate}}\n                    </button>\n                </div>\n                <div class=\"col-sm-6 col-set-default\">\n                    <button type=\"button\" (click)=\"setAsDefault()\" class=\"btn btn-primary\">\n                        <i class='fa fa-hdd-o'></i> {{'preferences.SetDefault' | translate}}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, ViewChild } from '@angular/core';\n\nimport {\n    MessageSeverity\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission\n} from '@polpware/ngx-oauth2';\n\n\nimport { AccountService } from '../../services/account.service';\nimport { Role } from '../../models/role.model';\n\n@Component({\n    selector: 'role-editor',\n    templateUrl: './role-editor.component.html',\n    styleUrls: ['./role-editor.component.scss']\n})\nexport class RoleEditorComponent {\n\n    private isNewRole = false;\n    public isSaving: boolean;\n    public showValidationErrors = true;\n    public roleEdit: Role = new Role();\n    public allPermissions: Permission[] = [];\n    public selectedValues: { [key: string]: boolean; } = {};\n    private editingRoleName: string;\n\n    public formResetToggle = true;\n\n    public changesSavedCallback: () => void;\n    public changesFailedCallback: () => void;\n    public changesCancelledCallback: () => void;\n\n\n    @ViewChild('f', { static: false })\n    private form;\n\n\n\n    constructor(private alertService: AlertService, private accountService: AccountService) {\n    }\n\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n\n    save() {\n        this.isSaving = true;\n        this.alertService.startLoadingMessage('Saving changes...');\n\n        this.roleEdit.permissions = this.getSelectedPermissions();\n\n        if (this.isNewRole) {\n            this.accountService.newRole(this.roleEdit).subscribe(role => this.saveSuccessHelper(role), error => this.saveFailedHelper(error));\n        } else {\n            this.accountService.updateRole(this.roleEdit).subscribe(response => this.saveSuccessHelper(), error => this.saveFailedHelper(error));\n        }\n    }\n\n\n\n\n    private saveSuccessHelper(role?: Role) {\n        if (role) {\n            Object.assign(this.roleEdit, role);\n        }\n\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.showValidationErrors = false;\n\n        if (this.isNewRole) {\n            this.alertService.showMessage('Success', `Role \\\"${this.roleEdit.name}\\\" was created successfully`, MessageSeverity.success);\n        } else {\n            this.alertService.showMessage('Success', `Changes to role \\\"${this.roleEdit.name}\\\" was saved successfully`, MessageSeverity.success);\n        }\n\n\n        this.roleEdit = new Role();\n        this.resetForm();\n\n\n        if (!this.isNewRole && this.accountService.currentUser.roles.some(r => r == this.editingRoleName)) {\n            this.refreshLoggedInUser();\n        }\n\n        if (this.changesSavedCallback) {\n            this.changesSavedCallback();\n        }\n    }\n\n\n    private refreshLoggedInUser() {\n        this.accountService.refreshLoggedInUser()\n            .subscribe(user => { },\n                error => {\n                    this.alertService.resetStickyMessage();\n                    this.alertService.showStickyMessage('Refresh failed', 'An error occured whilst refreshing logged in user information from the server', MessageSeverity.error, error);\n                });\n    }\n\n\n\n    private saveFailedHelper(error: any) {\n        this.isSaving = false;\n        this.alertService.stopLoadingMessage();\n        this.alertService.showStickyMessage('Save Error', 'The below errors occured whilst saving your changes:', MessageSeverity.error, error);\n        this.alertService.showStickyMessage(error, null, MessageSeverity.error);\n\n        if (this.changesFailedCallback) {\n            this.changesFailedCallback();\n        }\n    }\n\n\n    cancel() {\n        this.roleEdit = new Role();\n\n        this.showValidationErrors = false;\n        this.resetForm();\n\n        this.alertService.showMessage('Cancelled', 'Operation cancelled by user', MessageSeverity.default);\n        this.alertService.resetStickyMessage();\n\n        if (this.changesCancelledCallback) {\n            this.changesCancelledCallback();\n        }\n    }\n\n\n\n    selectAll() {\n        this.allPermissions.forEach(p => this.selectedValues[p.value] = true);\n    }\n\n\n    selectNone() {\n        this.allPermissions.forEach(p => this.selectedValues[p.value] = false);\n    }\n\n\n    toggleGroup(groupName: string) {\n        let firstMemberValue: boolean;\n\n        this.allPermissions.forEach(p => {\n            if (p.groupName != groupName) {\n                return;\n            }\n\n            if (firstMemberValue == null) {\n                firstMemberValue = this.selectedValues[p.value] == true;\n            }\n\n            this.selectedValues[p.value] = !firstMemberValue;\n        });\n    }\n\n\n    private getSelectedPermissions() {\n        return this.allPermissions.filter(p => this.selectedValues[p.value] == true);\n    }\n\n\n    resetForm(replace = false) {\n\n        if (!replace) {\n            this.form.reset();\n        } else {\n            this.formResetToggle = false;\n\n            setTimeout(() => {\n                this.formResetToggle = true;\n            });\n        }\n    }\n\n\n    newRole(allPermissions: Permission[]) {\n        this.isNewRole = true;\n        this.showValidationErrors = true;\n\n        this.editingRoleName = null;\n        this.allPermissions = allPermissions;\n        this.selectedValues = {};\n        this.roleEdit = new Role();\n\n        return this.roleEdit;\n    }\n\n    editRole(role: Role, allPermissions: Permission[]) {\n        if (role) {\n            this.isNewRole = false;\n            this.showValidationErrors = true;\n\n            this.editingRoleName = role.name;\n            this.allPermissions = allPermissions;\n            this.selectedValues = {};\n            role.permissions.forEach(p => this.selectedValues[p.value] = true);\n            this.roleEdit = new Role();\n            Object.assign(this.roleEdit, role);\n\n            return this.roleEdit;\n        } else {\n            return this.newRole(allPermissions);\n        }\n    }\n\n\n\n    get canManageRoles() {\n        return this.accountService.userHasPermission(Permission.manageRolesPermission);\n    }\n}\n","<div>\n  <form *ngIf=\"formResetToggle\" name=\"roleEditorForm\" #f=\"ngForm\" novalidate\n        (ngSubmit)=\"f.form.valid ? save() :\n          (!roleName.valid && showErrorAlert('Role name is required', 'Please enter a role name (minimum of 2 and maximum of 200 characters)'));\">\n\n    <div class=\"row\">\n      <div class=\"col-sm-5\">\n        <div class=\"form-group row has-feedback-icon\">\n          <label class=\"col-form-label col-md-3\" for=\"roleName\">{{'roles.editor.Name' | translate}}</label>\n          <div class=\"col-md-9\">\n            <input [disabled]=\"!canManageRoles\" type=\"text\" id=\"roleName\" name=\"roleName\" placeholder=\"Enter role name\" class=\"form-control\"\n                   [ngClass]=\"{'is-valid': f.submitted && roleName.valid, 'is-invalid' : f.submitted && !roleName.valid}\" [(ngModel)]=\"roleEdit.name\" #roleName=\"ngModel\" required minlength=\"2\" maxlength=\"200\" />\n            <i *ngIf=\"showValidationErrors && f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': roleName.valid, 'fa-times' : !roleName.valid}\" aria-hidden=\"true\"></i>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-sm-7\">\n        <div class=\"form-group row\">\n          <label class=\"col-form-label col-md-3\" for=\"roleDescription\">{{'roles.editor.Description' | translate}}</label>\n          <div class=\"col-md-9\">\n            <input [disabled]=\"!canManageRoles\" type=\"text\" id=\"roleDescription\" name=\"roleDescription\" placeholder=\"Enter role description\" class=\"form-control\" [(ngModel)]=\"roleEdit.description\" />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <span *ngIf=\"showValidationErrors && f.submitted && !roleName.valid\" class=\"invalid-feedback\">\n          {{'roles.editor.RoleNameRequired' | translate}}\n        </span>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <hr class=\"edit-separator-hr\" />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-sm-12 card card-body bg-light well-sm permissionsRow\">\n        <div class=\"row\">\n\n          <ng-template ngFor let-permissionGroup [ngForOf]=\"allPermissions | groupBy: 'groupName'\" let-i=\"index\">\n            <div class=\"form-group row col-sm-6 permissionsColumn\">\n              <label class=\"col-md-5 col-form-label group-name\" for=\"checkboxes\" (click)=\"toggleGroup(permissionGroup.key)\">{{permissionGroup.key}}</label>\n              <div class=\"col-md-7\">\n                <div class=\"form-check\" *ngFor=\"let permission of permissionGroup.value\">\n                  <input [disabled]=\"!canManageRoles\" name=\"checkboxes-{{permission.value}}\" id=\"checkboxes-{{permission.value}}\" type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"selectedValues[permission.value]\">\n                  <label class=\"form-check-label\" tooltip=\"{{permission.description}}\" for=\"checkboxes-{{permission.value}}\">{{permission.name}}</label>\n                </div>\n              </div>\n            </div>\n            <div *ngIf=\"(i + 1) % 2 === 0\" class=\"clearfix\"></div>\n          </ng-template>\n\n        </div>\n      </div>\n\n    </div>\n\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <hr class=\"edit-last-separator-hr\" />\n      </div>\n    </div>\n\n\n    <div class=\"form-group row\">\n      <div class=\"col-sm-5\">\n        <div *ngIf=\"canManageRoles\" class=\"float-left\">\n          <a (click)=\"selectAll()\" href=\"javascript:;\" class=\"btn btn-link\">{{'roles.editor.SelectAll' | translate}}</a>|<a (click)=\"selectNone()\" href=\"javascript:;\" class=\"btn btn-link\">{{'roles.editor.SelectNone' | translate}}</a>\n        </div>\n      </div>\n\n      <div class=\"col-sm-7\">\n        <div ngPreserveWhitespaces class=\"float-right\">\n          <button *ngIf=\"!canManageRoles\" type=\"button\" (click)=\"cancel()\" class=\"btn btn-outline-secondary\">{{'roles.editor.Close' | translate}}</button>\n          <button *ngIf=\"canManageRoles\" type=\"button\" (click)=\"cancel()\" class=\"btn btn-danger\" [disabled]=\"isSaving\"><i class='fa fa-times'></i> {{'roles.editor.Cancel' | translate}}</button>\n          <button *ngIf=\"canManageRoles\" type=\"submit\" class=\"btn btn-primary\" [disabled]=\"isSaving\">\n            <i *ngIf=\"!isSaving\" class='fa fa-save'></i><i *ngIf=\"isSaving\" class='fa fa-circle-o-notch fa-spin'></i> {{isSaving ? ('roles.editor.Saving' | translate) : ('roles.editor.Save' | translate)}}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"clearfix\"></div>\n  </form>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, AfterViewInit, TemplateRef, ViewChild, Input } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\n\nimport {\n    AlertService,\n    AppTranslationService,\n    LocalStoreManager,\n    ConfigurationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    Permission\n} from '@polpware/ngx-oauth2';\n\nimport { AccountService } from '../../services/account.service';\nimport { Role } from '../../models/role.model';\nimport { RoleEditorComponent } from '../role-editor/role-editor.component';\n\n\n@Component({\n    selector: 'roles-management',\n    templateUrl: './roles-management.component.html',\n    styleUrls: ['./roles-management.component.scss']\n})\nexport class RolesManagementComponent implements OnInit, AfterViewInit {\n    columns: any[] = [];\n    rows: Role[] = [];\n    rowsCache: Role[] = [];\n    allPermissions: Permission[] = [];\n    editedRole: Role;\n    sourceRole: Role;\n    editingRoleName: { name: string };\n    loadingIndicator: boolean;\n\n\n\n    @ViewChild('indexTemplate', { static: true })\n    indexTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    @ViewChild('editorModal', { static: true })\n    editorModal: ModalDirective;\n\n    @ViewChild('roleEditor', { static: true })\n    roleEditor: RoleEditorComponent;\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private accountService: AccountService) {\n    }\n\n\n    ngOnInit() {\n\n        const gT = (key: string) => this.translationService.getTranslation(key);\n\n        this.columns = [\n            { prop: 'index', name: '#', width: 50, cellTemplate: this.indexTemplate, canAutoResize: false },\n            { prop: 'name', name: gT('roles.management.Name'), width: 180 },\n            { prop: 'description', name: gT('roles.management.Description'), width: 320 },\n            { prop: 'usersCount', name: gT('roles.management.Users'), width: 50 },\n            { name: '', width: 160, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\n        ];\n\n        this.loadData();\n    }\n\n\n\n\n\n    ngAfterViewInit() {\n\n        this.roleEditor.changesSavedCallback = () => {\n            this.addNewRoleToList();\n            this.editorModal.hide();\n        };\n\n        this.roleEditor.changesCancelledCallback = () => {\n            this.editedRole = null;\n            this.sourceRole = null;\n            this.editorModal.hide();\n        };\n    }\n\n\n    addNewRoleToList() {\n        if (this.sourceRole) {\n            Object.assign(this.sourceRole, this.editedRole);\n\n            let sourceIndex = this.rowsCache.indexOf(this.sourceRole, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rowsCache, sourceIndex, 0);\n            }\n\n            sourceIndex = this.rows.indexOf(this.sourceRole, 0);\n            if (sourceIndex > -1) {\n                Utilities.moveArrayItem(this.rows, sourceIndex, 0);\n            }\n\n            this.editedRole = null;\n            this.sourceRole = null;\n        } else {\n            const role = new Role();\n            Object.assign(role, this.editedRole);\n            this.editedRole = null;\n\n            let maxIndex = 0;\n            for (const r of this.rowsCache) {\n                if ((r as any).index > maxIndex) {\n                    maxIndex = (r as any).index;\n                }\n            }\n\n            (role as any).index = maxIndex + 1;\n\n            this.rowsCache.splice(0, 0, role);\n            this.rows.splice(0, 0, role);\n            this.rows = [...this.rows];\n        }\n    }\n\n\n\n\n    loadData() {\n        this.alertService.startLoadingMessage();\n        this.loadingIndicator = true;\n\n        this.accountService.getRolesAndPermissions()\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                const roles = results[0];\n                const permissions = results[1];\n\n                roles.forEach((role, index, roles) => {\n                    (role as any).index = index + 1;\n                });\n\n\n                this.rowsCache = [...roles];\n                this.rows = roles;\n\n                this.allPermissions = permissions;\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Load Error', `Unable to retrieve roles from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    onSearchChanged(value: string) {\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.name, r.description));\n    }\n\n\n    onEditorModalHidden() {\n        this.editingRoleName = null;\n        this.roleEditor.resetForm(true);\n    }\n\n\n    newRole() {\n        this.editingRoleName = null;\n        this.sourceRole = null;\n        this.editedRole = this.roleEditor.newRole(this.allPermissions);\n        this.editorModal.show();\n    }\n\n\n    editRole(row: Role) {\n        this.editingRoleName = { name: row.name };\n        this.sourceRole = row;\n        this.editedRole = this.roleEditor.editRole(row, this.allPermissions);\n        this.editorModal.show();\n    }\n\n    deleteRole(row: Role) {\n        this.alertService.showDialog('Are you sure you want to delete the \\\"' + row.name + '\\\" role?', DialogType.confirm, () => this.deleteRoleHelper(row));\n    }\n\n\n    deleteRoleHelper(row: Role) {\n\n        this.alertService.startLoadingMessage('Deleting...');\n        this.loadingIndicator = true;\n\n        this.accountService.deleteRole(row)\n            .subscribe(results => {\n                this.alertService.stopLoadingMessage();\n                this.loadingIndicator = false;\n\n                this.rowsCache = this.rowsCache.filter(item => item !== row);\n                this.rows = this.rows.filter(item => item !== row);\n            },\n                error => {\n                    this.alertService.stopLoadingMessage();\n                    this.loadingIndicator = false;\n\n                    this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the role.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`,\n                        MessageSeverity.error, error);\n                });\n    }\n\n\n    get canManageRoles() {\n        return this.accountService.userHasPermission(Permission.manageRolesPermission);\n    }\n\n}\n","<div>\n  <div class=\"row control-box\">\n    <div class=\"col-lg-8\">\n      <div class=\"form-group search-box\">\n        <search-box (searchChange)=\"onSearchChanged($event)\" placeholder=\"{{'roles.management.Search' | translate}}\">></search-box>\n      </div>\n    </div>\n    <div class=\"col-lg-4 pr-lg-5\">\n      <ul class=\"nav flex-column flex-lg-row justify-content-end\">\n        <li *ngIf=\"canManageRoles\" class=\"nav-item toolbaritem\">\n          <a class=\"nav-link\" href=\"javascript:;\" (click)=\"newRole()\">\n            <i class=\"fa fa-plus-circle\"></i> {{'roles.management.NewRole' | translate}}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <ngx-datatable class=\"material colored-header sm table table-striped table-hover\"\n                 [loadingIndicator]=\"loadingIndicator\"\n                 [rows]=\"rows\"\n                 [rowHeight]=\"35\"\n                 [headerHeight]=\"35\"\n                 [footerHeight]=\"35\"\n                 [columns]=\"columns\"\n                 [scrollbarV]=\"true\"\n                 [columnMode]=\"'force'\">\n  </ngx-datatable>\n\n  <ng-template #indexTemplate let-value=\"value\">\n    <strong>{{value}}</strong>\n  </ng-template>\n\n\n  <ng-template #actionsTemplate let-row=\"row\" let-value=\"value\" let-i=\"index\">\n    <a *ngIf=\"canManageRoles\" class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"editRole(row)\"><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'roles.management.Edit' | translate}}</a>\n    <a *ngIf=\"!canManageRoles\" class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"editRole(row)\"><i class=\"fa fa-eye\" aria-hidden=\"true\"></i> {{'roles.management.Details' | translate}}</a>\n    {{canManageRoles ? '|' : ''}}\n    <a *ngIf=\"canManageRoles\" class=\"btn btn-link btn-sm\" href=\"javascript:;\" (click)=\"deleteRole(row)\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i> {{'roles.management.Delete' | translate}}</a>\n  </ng-template>\n\n\n  <div class=\"modal fade\" bsModal #editorModal=\"bs-modal\" (onHidden)=\"onEditorModalHidden()\" [config]=\"{backdrop: 'static'}\" tabindex=\"-1\">\n    <div class=\"modal-dialog modal-lg\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h4 *ngIf=\"!canManageRoles\" class=\"modal-title float-left\"><i class=\"fa fa-shield\"></i> {{'roles.management.RoleDetails' | translate:editingRoleName}}</h4>\n          <h4 *ngIf=\"canManageRoles\" class=\"modal-title float-left\"><i class=\"fa fa-shield\"></i> {{editingRoleName ? ('roles.management.EditRole' | translate:editingRoleName) : ('roles.management.NewRole' | translate)}}</h4>\n          <button type=\"button\" class=\"close float-right\" title=\"Close\" (click)=\"editorModal.hide()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <role-editor #roleEditor></role-editor>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, Input, TemplateRef, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    AppTranslationService,\n    LocalStoreManager\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    AuthService,\n    Permission,\n} from '@polpware/ngx-oauth2';\n\n\n@Component({\n    selector: 'todo-demo',\n    templateUrl: './todo-demo.component.html',\n    styleUrls: ['./todo-demo.component.scss']\n})\nexport class TodoDemoComponent implements OnInit, OnDestroy {\n    public static readonly DBKeyTodoDemo = 'todo-demo.todo_list';\n\n    rows = [];\n    rowsCache = [];\n    columns = [];\n    editing = {};\n    taskEdit: any = {};\n    isDataLoaded = false;\n    loadingIndicator = true;\n    formResetToggle = true;\n    _currentUserId: string;\n    _hideCompletedTasks = false;\n\n\n    get currentUserId() {\n        if (this.authService.currentUser) {\n            this._currentUserId = this.authService.currentUser.id;\n        }\n\n        return this._currentUserId;\n    }\n\n\n    set hideCompletedTasks(value: boolean) {\n\n        if (value) {\n            this.rows = this.rowsCache.filter(r => !r.completed);\n        } else {\n            this.rows = [...this.rowsCache];\n        }\n\n\n        this._hideCompletedTasks = value;\n    }\n\n    get hideCompletedTasks() {\n        return this._hideCompletedTasks;\n    }\n\n\n    @Input()\n    verticalScrollbar = false;\n\n\n    @ViewChild('statusHeaderTemplate', { static: true })\n    statusHeaderTemplate: TemplateRef<any>;\n\n    @ViewChild('statusTemplate', { static: true })\n    statusTemplate: TemplateRef<any>;\n\n    @ViewChild('nameTemplate', { static: true })\n    nameTemplate: TemplateRef<any>;\n\n    @ViewChild('descriptionTemplate', { static: true })\n    descriptionTemplate: TemplateRef<any>;\n\n    @ViewChild('actionsTemplate', { static: true })\n    actionsTemplate: TemplateRef<any>;\n\n    @ViewChild('editorModal', { static: true })\n    editorModal: ModalDirective;\n\n\n    constructor(private alertService: AlertService, private translationService: AppTranslationService, private localStorage: LocalStoreManager, private authService: AuthService) {\n    }\n\n\n\n    ngOnInit() {\n        this.loadingIndicator = true;\n\n        this.fetch((data) => {\n            this.refreshDataIndexes(data);\n            this.rows = data;\n            this.rowsCache = [...data];\n            this.isDataLoaded = true;\n\n            setTimeout(() => { this.loadingIndicator = false; }, 1500);\n        });\n\n\n        const gT = (key: string) => this.translationService.getTranslation(key);\n\n        this.columns = [\n            { prop: 'completed', name: '', width: 30, headerTemplate: this.statusHeaderTemplate, cellTemplate: this.statusTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false },\n            { prop: 'name', name: gT('todoDemo.management.Task'), cellTemplate: this.nameTemplate, width: 200 },\n            { prop: 'description', name: gT('todoDemo.management.Description'), cellTemplate: this.descriptionTemplate, width: 500 },\n            { name: '', width: 80, cellTemplate: this.actionsTemplate, resizeable: false, canAutoResize: false, sortable: false, draggable: false }\n        ];\n    }\n\n    ngOnDestroy() {\n        this.saveToDisk();\n    }\n\n\n\n    fetch(cb) {\n        let data = this.getFromDisk();\n\n        if (data == null) {\n            setTimeout(() => {\n\n                data = this.getFromDisk();\n\n                if (data == null) {\n                    data = [\n                        { completed: true, important: true, name: 'Create visual studio extension', description: 'Create a visual studio VSIX extension package that will add this project as an aspnet-core project template' },\n                        { completed: false, important: true, name: 'Do a quick how-to writeup', description: '' },\n                        {\n                            completed: false, important: false, name: 'Create aspnet-core/Angular8 tutorials based on this project', description: 'Create tutorials (blog/video/youtube) on how to build applications (full stack)' +\n                                ' using aspnet-core/Angular8. The tutorial will focus on getting productive with the technology right away rather than the details on how and why they work so audience can get onboard quickly.'\n                        },\n                    ];\n                }\n\n                cb(data);\n            }, 1000);\n        } else {\n            cb(data);\n        }\n    }\n\n\n    refreshDataIndexes(data) {\n        let index = 0;\n\n        for (const i of data) {\n            i.$$index = index++;\n        }\n    }\n\n\n    onSearchChanged(value: string) {\n        this.rows = this.rowsCache.filter(r => Utilities.searchArray(value, false, r.name, r.description) || value == 'important' && r.important || value == 'not important' && !r.important);\n    }\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n\n    addTask() {\n        this.formResetToggle = false;\n\n        setTimeout(() => {\n            this.formResetToggle = true;\n\n            this.taskEdit = {};\n            this.editorModal.show();\n        });\n    }\n\n    save() {\n        this.rowsCache.splice(0, 0, this.taskEdit);\n        this.rows.splice(0, 0, this.taskEdit);\n        this.refreshDataIndexes(this.rowsCache);\n        this.rows = [...this.rows];\n\n        this.saveToDisk();\n        this.editorModal.hide();\n    }\n\n\n    updateValue(event, cell, cellValue, row) {\n        this.editing[row.$$index + '-' + cell] = false;\n        this.rows[row.$$index][cell] = event.target.value;\n        this.rows = [...this.rows];\n\n        this.saveToDisk();\n    }\n\n\n    delete(row) {\n        this.alertService.showDialog('Are you sure you want to delete the task?', DialogType.confirm, () => this.deleteHelper(row));\n    }\n\n\n    deleteHelper(row) {\n        this.rowsCache = this.rowsCache.filter(item => item !== row);\n        this.rows = this.rows.filter(item => item !== row);\n\n        this.saveToDisk();\n    }\n\n    getFromDisk() {\n        return this.localStorage.getDataObject(`${TodoDemoComponent.DBKeyTodoDemo}:${this.currentUserId}`);\n    }\n\n    saveToDisk() {\n        if (this.isDataLoaded) {\n            this.localStorage.saveSyncedSessionData(this.rowsCache, `${TodoDemoComponent.DBKeyTodoDemo}:${this.currentUserId}`);\n        }\n    }\n}\n","<div>\n    <div class=\"row control-box\">\n        <div class=\"col-lg-8\">\n            <div class=\"form-group search-box\">\n                <search-box (searchChange)=\"onSearchChanged($event)\" placeholder=\"{{'todoDemo.management.Search' | translate}}\"></search-box>\n            </div>\n        </div>\n        <div class=\"col-lg-4\">\n            <ul class=\"nav flex-column flex-lg-row\">\n                <li [class.active]=\"hideCompletedTasks\" class=\"nav-item toolbaritem\">\n                    <a class=\"nav-link\" href=\"javascript:;\" (click)=\"hideCompletedTasks = !hideCompletedTasks\"><i class=\"fa fa-eye-slash\"></i> {{'todoDemo.management.HideCompleted' | translate}}</a>\n                </li>\n                <li class=\"nav-item toolbaritem\">\n                    <a class=\"nav-link\" href=\"javascript:;\" (click)=\"addTask()\"><i class=\"fa fa-plus\"></i> {{'todoDemo.management.AddTask' | translate}}</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <ngx-datatable class=\"material colored-header sm table-hover\"\n                   [loadingIndicator]=\"loadingIndicator\"\n                   [rows]=\"rows\"\n                   [rowHeight]=\"35\"\n                   [headerHeight]=\"35\"\n                   [footerHeight]=\"35\"\n                   [columns]=\"columns\"\n                   [scrollbarV]=\"verticalScrollbar\"\n                   [columnMode]=\"'force'\">\n    </ngx-datatable>\n\n    <ng-template #statusHeaderTemplate>\n        <i class=\"fa fa-check-square-o\"></i>\n    </ng-template>\n\n    <ng-template #statusTemplate let-row=\"row\" let-value=\"value\">\n        <div class=\"form-check\">\n            <input class=\"form-check-input\" attr.name=\"checkboxes-{{value}}\" type=\"checkbox\" [(ngModel)]=\"row.completed\">\n            <label class=\"form-check-label\"></label>\n        </div>\n    </ng-template>\n\n    <ng-template #nameTemplate let-row=\"row\" let-value=\"value\">\n        <span *ngIf=\"!editing[row.$$index + '-name']\" class=\"inline-label\" [class.completed]=\"row.completed\" attr.title=\"Double click to edit - {{value}}\" (dblclick)=\"editing[row.$$index + '-name'] = true\">\n            {{value}}\n        </span>\n        <input *ngIf=\"editing[row.$$index + '-name']\" class=\"inline-editor\" autofocus (blur)=\"updateValue($event, 'name', value, row)\" type=\"text\" [value]=\"value\" />\n    </ng-template>\n\n    <ng-template #descriptionTemplate let-row=\"row\" let-value=\"value\">\n        <span *ngIf=\"!editing[row.$$index + '-description']\" class=\"inline-label\" [class.completed]=\"row.completed\" attr.title=\"Double click to edit - {{value}}\" (dblclick)=\"editing[row.$$index + '-description'] = true\">\n            {{value}}\n        </span>\n        <input *ngIf=\"editing[row.$$index + '-description']\" class=\"inline-editor\" autofocus (blur)=\"updateValue($event, 'description', value, row)\" type=\"text\" [value]=\"value\" />\n    </ng-template>\n\n\n    <ng-template #actionsTemplate let-row=\"row\">\n        <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" tooltip=\"{{'todoDemo.management.Delete' | translate}}\" container=\"body\" (click)=\"delete(row)\"><i class=\"fa fa-times\"></i></a>\n        <a class=\"btn btn-link btn-sm\" href=\"javascript:;\" tooltip=\"{{'todoDemo.management.Important' | translate}}\" container=\"body\" (click)=\"row.important = !row.important\" (mouseover)=\"row.isMouseOver=true\" (mouseout)=\"row.isMouseOver=false\">\n            <i *ngIf=\"row.important || row.isMouseOver\" class=\"fa fa-bookmark\"></i>\n            <i *ngIf=\"!row.important && !row.isMouseOver\" class=\"fa fa-bookmark-o\"></i>\n        </a>\n    </ng-template>\n\n\n\n\n\n    <div class=\"modal fade\" bsModal #editorModal=\"bs-modal\" tabindex=\"-1\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h4 class=\"modal-title float-left\"><i class=\"fa fa-tasks\"></i> {{'todoDemo.editor.NewTask' | translate}}</h4>\n                    <button type=\"button\" class=\"close\" title=\"Close\" (click)=\"editorModal.hide()\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <form *ngIf=\"formResetToggle\" name=\"taskEditorForm\" #f=\"ngForm\" novalidate\n                          (ngSubmit)=\"f.form.valid ? save() :\n                      (!taskName.valid && showErrorAlert('Task name is required', 'Please enter a name for the task'));\">\n\n\n                        <div class=\"form-group row has-feedback-icon\">\n                            <label class=\"col-form-label col-md-3\" for=\"taskName\">{{'todoDemo.editor.Name' | translate}}:</label>\n                            <div class=\"col-md-9\">\n                                <input autofocus type=\"text\" id=\"taskName\" name=\"taskName\" placeholder=\"Enter task name\" class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && taskName.valid, 'is-invalid' : f.submitted && !taskName.valid}\"\n                                       [(ngModel)]=\"taskEdit.name\" #taskName=\"ngModel\" required />\n                                <i *ngIf=\"f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': taskName.valid, 'fa-times' : !taskName.valid}\" aria-hidden=\"true\"></i>\n                                <span *ngIf=\"f.submitted && !taskName.valid\" class=\"invalid-feedback\">\n                                    {{'todoDemo.editor.TaskNameRequired' | translate}}\n                                </span>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group row description-form-group\">\n                            <label class=\"col-form-label col-md-3\" for=\"taskDescription\">{{'todoDemo.editor.Description' | translate}}:</label>\n                            <div class=\"col-md-9\">\n                                <input type=\"text\" id=\"taskDescription\" name=\"taskDescription\" placeholder=\"Enter task description\" class=\"form-control\" [(ngModel)]=\"taskEdit.description\" />\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <label class=\"col-form-label col-md-3\"> </label>\n                            <div class=\"col-md-9\">\n                                <div class=\"form-check\">\n                                    <input class=\"form-check-input\" id=\"isImportant\" name=\"isImportant\" type=\"checkbox\" [(ngModel)]=\"taskEdit.important\">\n                                    <label for=\"isImportant\" class=\"form-check-label\">{{'todoDemo.editor.Important' | translate}}</label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <hr class=\"edit-last-separator-hr\" />\n                            </div>\n                        </div>\n\n\n                        <div class=\"form-group actionBtn-form-group\">\n                            <div class=\"float-right\">\n                                <button type=\"submit\" class=\"btn btn-primary\">{{'todoDemo.editor.AddTask' | translate}}</button>\n                            </div>\n                        </div>\n                        <div class=\"clearfix\"></div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","<div class=\"row statistics-container\">\n  <div class=\"col-md-6\">\n    <div class=\"chart-container\">\n      <canvas baseChart width=\"600\" height=\"250\"\n              [datasets]=\"chartData\"\n              [labels]=\"chartLabels\"\n              [options]=\"chartOptions\"\n              [colors]=\"chartColors\"\n              [legend]=\"chartLegend\"\n              [chartType]=\"chartType\"\n              (chartHover)=\"chartHovered($event)\"\n              (chartClick)=\"chartClicked($event)\"></canvas>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <div class=\"d-none d-sm-block table-responsive\">\n      <table class=\"table table-sm\">\n        <thead>\n          <tr>\n            <th class=\"border-top-0\"></th>\n            <th class=\"border-top-0\" *ngFor=\"let label of chartLabels\">{{label}}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let d of chartData\">\n            <th>{{d && d.label.split(' ').pop()}}</th>\n            <td *ngFor=\"let label of chartLabels; let j=index\">{{d && d.data[j]}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <button class=\"refresh-btn\" (click)=\"randomize();showMessage('Manual refresh!');\">REFSH</button>\n    <div class=\"chart-type-container\" dropdown>\n      <button id=\"chartType\" type=\"button\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-bar-chart\"></i></button>\n      <ul class=\"dropdown-menu\">\n        <li [class.active]=\"chartType == 'bar'\">\n          <a class=\"dropdown-item\" (click)=\"changeChartType('bar')\" href=\"javascript:;\">Bar Chart</a>\n        </li>\n        <li [class.active]=\"chartType == 'pie'\">\n          <a class=\"dropdown-item\" (click)=\"changeChartType('pie')\" href=\"javascript:;\">Pie Chart</a>\n        </li>\n        <li [class.active]=\"chartType == 'doughnut'\">\n          <a class=\"dropdown-item\" (click)=\"changeChartType('doughnut')\" href=\"javascript:;\">Doughnut Chart</a>\n        </li>\n        <li [class.active]=\"chartType == 'polarArea'\">\n          <a class=\"dropdown-item\" (click)=\"changeChartType('polarArea')\" href=\"javascript:;\">Polar Area Chart</a>\n        </li>\n        <li [class.active]=\"chartType == 'radar'\">\n          <a class=\"dropdown-item\" (click)=\"changeChartType('radar')\" href=\"javascript:;\">Radar Chart</a>\n        </li>\n        <li class=\"dropdown-divider\"></li>\n        <li [class.active]=\"chartType == 'line'\">\n          <a class=\"dropdown-item\" (click)=\"changeChartType('line')\" href=\"javascript:;\">Line Chart</a>\n        </li>\n      </ul>\n    </div>\n    <button (click)=\"showMessage('You\\'ve clicked on the menu')\"><i class=\"fa fa-bars\"></i></button>\n    <button (click)=\"showDialog('Enter some value to do serious configuration...')\"><i class=\"fa fa-cogs\"></i></button>\n  </div>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription, Observable, fromEvent, of, merge } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nimport {\n    DialogType, MessageSeverity\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService\n} from '@polpware/ngx-appkit-services-alpha';\n\n\nrequire('chart.js');\n\n\n\n@Component({\n    selector: 'statistics-demo',\n    templateUrl: './statistics-demo.component.html',\n    styleUrls: ['./statistics-demo.component.scss']\n})\nexport class StatisticsDemoComponent implements OnInit, OnDestroy {\n\n    chartData = [\n        { data: [65, 59, 80, 81, 56, 55], label: 'Series A' },\n        { data: [28, 48, 40, 19, 86, 27], label: 'Series B' },\n        { data: [18, 48, 77, 9, 100, 27], label: 'Series C' }\n    ];\n    chartLabels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];\n    chartOptions = {\n        responsive: true,\n        title: {\n            display: false,\n            fontSize: 16,\n            text: 'Important Stuff'\n        }\n    };\n    chartColors = [\n        { // grey\n            backgroundColor: 'rgba(148,159,177,0.2)',\n            borderColor: 'rgba(148,159,177,1)',\n            pointBackgroundColor: 'rgba(148,159,177,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n        },\n        { // dark grey\n            backgroundColor: 'rgba(77,83,96,0.2)',\n            borderColor: 'rgba(77,83,96,1)',\n            pointBackgroundColor: 'rgba(77,83,96,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(77,83,96,1)'\n        },\n        { // something else\n            backgroundColor: 'rgba(128,128,128,0.2)',\n            borderColor: 'rgba(128,128,128,1)',\n            pointBackgroundColor: 'rgba(128,128,128,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(128,128,128,0.8)'\n        }\n    ];\n    chartLegend = true;\n    chartType = 'line';\n\n    timerReference: any;\n    windowWidth$: Observable<number>;\n    windowWidthSub: Subscription;\n\n\n    constructor(private alertService: AlertService) {\n\n    }\n\n\n    ngOnInit() {\n        this.timerReference = setInterval(() => this.randomize(), 5000);\n\n        const initialWidth$ = of(window.innerWidth);\n        const resizedWidth$ = fromEvent(window, 'resize').pipe(map((event: any) => event.target.innerWidth as number));\n        this.windowWidth$ = merge(initialWidth$, resizedWidth$).pipe(distinctUntilChanged());\n\n        this.windowWidthSub = this.windowWidth$.subscribe(width => this.chartLegend = width < 600 ? false : true);\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.timerReference);\n        this.windowWidthSub.unsubscribe();\n    }\n\n\n\n    randomize(): void {\n        const _chartData = new Array(this.chartData.length);\n        for (let i = 0; i < this.chartData.length; i++) {\n            _chartData[i] = { data: new Array(this.chartData[i].data.length), label: this.chartData[i].label };\n\n            for (let j = 0; j < this.chartData[i].data.length; j++) {\n                _chartData[i].data[j] = Math.floor((Math.random() * 100) + 1);\n            }\n        }\n\n        this.chartData = _chartData;\n    }\n\n    changeChartType(type: string) {\n        this.chartType = type;\n    }\n\n    showMessage(msg: string): void {\n        this.alertService.showMessage('Demo', msg, MessageSeverity.info);\n    }\n\n    showDialog(msg: string): void {\n        this.alertService.showDialog(msg, DialogType.prompt, (val) => this.configure(true, val), () => this.configure(false));\n    }\n\n    configure(response: boolean, value?: string) {\n\n        if (response) {\n\n            this.alertService.showStickyMessage('Simulating...', '', MessageSeverity.wait);\n\n            setTimeout(() => {\n\n                this.alertService.resetStickyMessage();\n                this.alertService.showMessage('Demo', `Your settings was successfully configured to \\\"${value}\\\"`, MessageSeverity.success);\n            }, 2000);\n        } else {\n            this.alertService.showMessage('Demo', 'Operation cancelled by user', MessageSeverity.default);\n        }\n    }\n\n    chartClicked(e): void {\n        console.log(e);\n    }\n\n    chartHovered(e): void {\n        console.log(e);\n    }\n}\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Router, NavigationExtras, ActivatedRoute } from '@angular/router';\n\nimport { Permission } from '@polpware/ngx-oauth2';\n\nimport { fadeInOut } from '../../services/animations';\nimport { BootstrapTabDirective } from '../../directives/bootstrap-tab.directive';\nimport { AccountService } from '../../services/account.service';\n\n\n@Component({\n    selector: 'settings',\n    templateUrl: './settings.component.html',\n    styleUrls: ['./settings.component.scss'],\n    animations: [fadeInOut]\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n\n    isProfileActivated = true;\n    isPreferencesActivated = false;\n    isUsersActivated = false;\n    isRolesActivated = false;\n\n    fragmentSubscription: any;\n\n    readonly profileTab = 'profile';\n    readonly preferencesTab = 'preferences';\n    readonly usersTab = 'users';\n    readonly rolesTab = 'roles';\n\n\n    @ViewChild('tab', { static: true })\n    tab: BootstrapTabDirective;\n\n\n    constructor(private router: Router, private route: ActivatedRoute, private accountService: AccountService) {\n    }\n\n\n    ngOnInit() {\n        this.fragmentSubscription = this.route.fragment.subscribe(anchor => this.showContent(anchor));\n    }\n\n\n    ngOnDestroy() {\n        this.fragmentSubscription.unsubscribe();\n    }\n\n    showContent(anchor: string) {\n        if (anchor) {\n            anchor = anchor.toLowerCase();\n        }\n\n        if ((this.isFragmentEquals(anchor, this.usersTab) && !this.canViewUsers) ||\n            (this.isFragmentEquals(anchor, this.rolesTab) && !this.canViewRoles)) {\n            return;\n        }\n\n        this.tab.show(`#${anchor || this.profileTab}Tab`);\n    }\n\n\n    isFragmentEquals(fragment1: string, fragment2: string) {\n\n        if (fragment1 == null) {\n            fragment1 = '';\n        }\n\n        if (fragment2 == null) {\n            fragment2 = '';\n        }\n\n        return fragment1.toLowerCase() == fragment2.toLowerCase();\n    }\n\n\n    onShowTab(event) {\n        const activeTab = event.target.hash.split('#', 2).pop();\n\n        this.isProfileActivated = activeTab == this.profileTab;\n        this.isPreferencesActivated = activeTab == this.preferencesTab;\n        this.isUsersActivated = activeTab == this.usersTab;\n        this.isRolesActivated = activeTab == this.rolesTab;\n\n        this.router.navigate([], { fragment: activeTab });\n    }\n\n\n    get canViewUsers() {\n        return this.accountService.userHasPermission(Permission.viewUsersPermission);\n    }\n\n    get canViewRoles() {\n        return this.accountService.userHasPermission(Permission.viewRolesPermission);\n    }\n}\n","<div class=\"container settings-page\">\n    <header class=\"pageHeader\">\n        <h3><i class=\"fa fa-cog fa-lg page-caption\" aria-hidden=\"true\"></i> {{'pageHeader.Settings' | translate}}</h3>\n    </header>\n\n    <div [@fadeInOut]>\n        <div class=\"d-sm-flex flex-row\">\n            <ul bootstrapTab #tab=\"bootstrap-tab\" (showBSTab)=\"onShowTab($event)\" class=\"nav nav-tabs nav-tabs--vertical nav-tabs--left\" role=\"navigation\">\n                <li class=\"nav-item\">\n                    <a id=\"profileTab\" [routerLink]=\"[]\" fragment=\"profile\" data-target=\"#profile\" href=\"#profile\" class=\"nav-link active\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"profile\">\n                        <i class=\"fa fa-user-circle-o fa-fw\" aria-hidden=\"true\"></i> {{'settings.tab.Profile' | translate}}\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a id=\"preferencesTab\" [routerLink]=\"[]\" fragment=\"preferences\" data-target=\"#preferences\" href=\"#preferences\" class=\"nav-link\" data-toggle=\"tab\" role=\"tab\" aria-controls=\"preferences\">\n                        <i class=\"fa fa-sliders fa-fw\" aria-hidden=\"true\"></i> {{'settings.tab.Preferences' | translate}}\n                    </a>\n                </li>\n            </ul>\n            <div class=\"tab-content w-100\">\n                <div class=\"tab-pane show active\" id=\"profile\" role=\"tabpanel\">\n                    <h4>{{'settings.header.UserProfile' | translate}}</h4>\n                    <hr class=\"separator-hr\" />\n                    <div [@fadeInOut] *ngIf=\"isProfileActivated\" class=\"content-container pl-lg-2\">\n                        <user-info></user-info>\n                    </div>\n\n                </div>\n                <div class=\"tab-pane\" id=\"preferences\" role=\"tabpanel\">\n                    <h4>{{'settings.header.UserPreferences' | translate}}</h4>\n                    <hr class=\"separator-hr\" />\n                    <div [@fadeInOut] *ngIf=\"isPreferencesActivated\" class=\"content-container pl-lg-2\">\n                        <user-preferences></user-preferences>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component } from '@angular/core';\nimport { fadeInOut } from '../../services/animations';\n\n@Component({\n    selector: 'not-found',\n    templateUrl: './not-found.component.html',\n    styleUrls: ['./not-found.component.scss'],\n    animations: [fadeInOut]\n})\nexport class NotFoundComponent {\n}\n","<header class=\"pageHeader\">\n    <h3><i class=\"fa fa-exclamation-circle fa-lg page-caption\" aria-hidden=\"true\"></i> {{'pageHeader.NotFound' | translate}}</h3>\n</header>\n\n<div [@fadeInOut] class=\"d-flex h-75\">\n    <div class=\"m-auto\">\n        <div class=\"icon-container\"><i class='fa fa-exclamation-circle'></i> {{'notFound.404' | translate}}</div>\n        <div class=\"text-muted error-description\">{{'notFound.pageNotFound' | translate}}</div>\n        <div><a class=\"btn btn-primary\" routerLink=\"/\"><i class='fa fa-home'></i> {{'notFound.backToHome' | translate}}</a></div>\n    </div>\n</div>\n","// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\n\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\n\nimport {\n    DialogType, MessageSeverity,\n    Utilities\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport {\n    AlertService,\n    ConfigurationService\n} from '@polpware/ngx-appkit-services-alpha';\n\nimport {\n    AuthService,\n    Permission\n} from '@polpware/ngx-oauth2';\n\nimport { UserLogin } from '../../models/user-login.model';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit, OnDestroy {\n\n    userLogin = new UserLogin();\n    isLoading = false;\n    formResetToggle = true;\n    modalClosedCallback: () => void;\n    loginStatusSubscription: any;\n\n    @Input()\n    isModal = false;\n\n\n    constructor(private alertService: AlertService, private authService: AuthService, private configurations: ConfigurationService) {\n\n    }\n\n\n    ngOnInit() {\n\n        this.userLogin.rememberMe = this.authService.rememberMe;\n\n        if (this.getShouldRedirect()) {\n            this.authService.redirectLoginUser();\n        } else {\n            this.loginStatusSubscription = this.authService.getLoginStatusEvent().subscribe(isLoggedIn => {\n                if (this.getShouldRedirect()) {\n                    this.authService.redirectLoginUser();\n                }\n            });\n        }\n    }\n\n\n    ngOnDestroy() {\n        if (this.loginStatusSubscription) {\n            this.loginStatusSubscription.unsubscribe();\n        }\n    }\n\n\n    getShouldRedirect() {\n        return !this.isModal && this.authService.isLoggedIn && !this.authService.isSessionExpired;\n    }\n\n\n    showErrorAlert(caption: string, message: string) {\n        this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n    closeModal() {\n        if (this.modalClosedCallback) {\n            this.modalClosedCallback();\n        }\n    }\n\n\n    login() {\n        this.isLoading = true;\n        this.alertService.startLoadingMessage('', 'Attempting login...');\n\n        this.authService.loginWithPassword(this.userLogin.userName, this.userLogin.password, this.userLogin.rememberMe)\n            .subscribe(\n                user => {\n                    setTimeout(() => {\n                        this.alertService.stopLoadingMessage();\n                        this.isLoading = false;\n                        this.reset();\n\n                        if (!this.isModal) {\n                            this.alertService.showMessage('Login', `Welcome ${user.userName}!`, MessageSeverity.success);\n                        } else {\n                            this.alertService.showMessage('Login', `Session for ${user.userName} restored!`, MessageSeverity.success);\n                            setTimeout(() => {\n                                this.alertService.showStickyMessage('Session Restored', 'Please try your last operation again', MessageSeverity.default);\n                            }, 500);\n\n                            this.closeModal();\n                        }\n                    }, 500);\n                },\n                error => {\n\n                    this.alertService.stopLoadingMessage();\n\n                    if (Utilities.checkNoNetwork(error)) {\n                        this.alertService.showStickyMessage(Utilities.noNetworkMessageCaption, Utilities.noNetworkMessageDetail, MessageSeverity.error, error);\n                        this.offerAlternateHost();\n                    } else {\n                        const errorMessage = Utilities.getHttpResponseMessage(error);\n\n                        if (errorMessage) {\n                            this.alertService.showStickyMessage('Unable to login', this.mapLoginErrorMessage(errorMessage), MessageSeverity.error, error);\n                        } else {\n                            this.alertService.showStickyMessage('Unable to login', 'An error occured whilst logging in, please try again later.\\nError: ' + Utilities.getResponseBody(error), MessageSeverity.error, error);\n                        }\n                    }\n\n                    setTimeout(() => {\n                        this.isLoading = false;\n                    }, 500);\n                });\n    }\n\n\n    offerAlternateHost() {\n\n        if (Utilities.checkIsLocalHost(location.origin) && Utilities.checkIsLocalHost(this.configurations.baseUrl)) {\n            this.alertService.showDialog('Dear Developer!\\nIt appears your backend Web API service is not running...\\n' +\n                'Would you want to temporarily switch to the online Demo API below?(Or specify another)',\n                DialogType.prompt,\n                (value: string) => {\n                    this.configurations.baseUrl = value;\n                    this.configurations.tokenUrl = value;\n                    this.alertService.showStickyMessage('API Changed!', 'The target Web API has been changed to: ' + value, MessageSeverity.warn);\n                },\n                null,\n                null,\n                null,\n                this.configurations.fallbackBaseUrl);\n        }\n    }\n\n\n    mapLoginErrorMessage(error: string) {\n\n        if (error == 'invalid_username_or_password') {\n            return 'Invalid username or password';\n        }\n\n        if (error == 'invalid_grant') {\n            return 'This account has been disabled';\n        }\n\n        return error;\n    }\n\n\n    reset() {\n        this.formResetToggle = false;\n\n        setTimeout(() => {\n            this.formResetToggle = true;\n        });\n    }\n}\n","<div class=\"d-flex h-90\">\n  <div class=\"login-container m-auto\">\n    <div class=\"card boxshadow\">\n      <div class=\"card-header bg-primary dark text-white clearfix\">\n        <i class=\"fa fa-lock\" aria-hidden=\"true\"></i> Login\n        <button *ngIf=\"isModal\" type=\"button\" class=\"close float-right text-light\" aria-label=\"Close\" (click)=\"closeModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"col-md-8 offset-md-2\">\n          <form *ngIf=\"formResetToggle\" class=\"login\" name=\"loginForm\" #f=\"ngForm\" novalidate\n                (ngSubmit)=\"f.form.valid ? login() :\n                          (!username.valid && showErrorAlert('Username is required', 'Please enter a valid username'));\n                          (!password.valid && showErrorAlert('Password is required', 'Please enter a valid password'))\">\n            <div class=\"form-group row has-feedback-icon\">\n              <label class=\"col-form-label col-md-3\" for=\"login-username\">Username:</label>\n              <div class=\"col-md-9\">\n                <input type=\"text\" id=\"login-username\" name=\"username\" placeholder=\"Enter username\" autocomplete=\"username\" class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && username.valid, 'is-invalid' : f.submitted && !username.valid}\"\n                       [(ngModel)]=\"userLogin.userName\" #username=\"ngModel\" required />\n                <i *ngIf=\"f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': username.valid, 'fa-times' : !username.valid}\" aria-hidden=\"true\"></i>\n                <span class=\"invalid-feedback\" *ngIf=\"f.submitted && !username.valid\">\n                  Username is required\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group row has-feedback-icon\">\n              <label class=\"col-form-label col-md-3\" for=\"login-password\">Password:</label>\n              <div class=\"col-md-9\">\n                <input type=\"password\" id=\"login-password\" name=\"password\" placeholder=\"Enter password\" autocomplete=\"current-password\" class=\"form-control\" [ngClass]=\"{'is-valid': f.submitted && password.valid, 'is-invalid' : f.submitted && !password.valid}\"\n                       [(ngModel)]=\"userLogin.password\" #password=\"ngModel\" required />\n                <i *ngIf=\"f.submitted\" class=\"fa form-control-feedback\" [ngClass]=\"{'fa-check': password.valid, 'fa-times' : !password.valid}\" aria-hidden=\"true\"></i>\n                <span class=\"invalid-feedback\" *ngIf=\"f.submitted && !password.valid\">\n                  Password is required\n                </span>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <div class=\"offset-md-3 col-md-9\">\n                <div class=\"form-check\">\n                  <input type=\"checkbox\" class=\"form-check-input\" id=\"login-rememberme\" name=\"rememberMe\" [(ngModel)]=\"userLogin.rememberMe\">\n                  <label class=\"form-check-label\" for=\"login-rememberme\">Remember me</label>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <div class=\"offset-md-3 col-md-9\">\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"isLoading\">\n                  <i *ngIf=\"isLoading\" class='fa fa-circle-o-notch fa-spin'></i> {{isLoading ? 'Logging in...' : 'Login'}}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n    NgModule,\n} from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n// Bootstrap\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { AlertModule } from 'ngx-bootstrap/alert';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { ChartsModule } from 'ng2-charts';\n\n@NgModule({\n    imports: [\n    ],\n    declarations: [\n    ],\n    exports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n\n        // Bootstrap, Note that we have imported them in the\n        // core modules (and they are only imported once)\n        BsDropdownModule,\n        TabsModule,\n        PaginationModule,\n        ModalModule,\n        AccordionModule,\n        PopoverModule,\n        TooltipModule,\n        CarouselModule,\n        AlertModule,\n\n        TranslateModule,\n        NgxDatatableModule,\n        ChartsModule\n    ],\n    providers: [\n    ],\n    entryComponents: [\n    ]\n})\nexport class DependencyModule {\n}\n","import {\n    ModuleWithProviders, NgModule,\n    Optional, SkipSelf\n} from '@angular/core';\n\nimport {\n    AlertServiceAbstractProvider,\n    ThemeManagerAbstractProvider,\n    ConfigurationServiceAbstractProvider,\n    LocalStoreManagerServiceAbstractProvider,\n    TranslationServiceAbstractProvider\n} from '@polpware/ngx-appkit-contracts-alpha';\n\nimport { DependencyModule } from './dependency.module';\n\nimport { AlertServiceProvider } from './services/alert.service-provider';\nimport { ThemeManagerProvider } from './services/theme-manager.provider';\nimport { ConfigurationServiceProvider } from './services/configuration.service-provider';\nimport { AppTitleService } from './services/app-title.service';\nimport { TranslationServiceProvider } from './services/translation.service-provider';\nimport { NotificationService } from './services/notification.service';\nimport { NotificationEndpoint } from './services/notification-endpoint.service';\nimport { AccountService } from './services/account.service';\nimport { AccountEndpoint } from './services/account-endpoint.service';\nimport { LocalStoreManagerProvider } from './services/local-storage-manager.service-provider';\n\nimport { EqualValidator } from './directives/equal-validator.directive';\nimport { LastElementDirective } from './directives/last-element.directive';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { BootstrapTabDirective } from './directives/bootstrap-tab.directive';\nimport { BootstrapToggleDirective } from './directives/bootstrap-toggle.directive';\nimport { BootstrapSelectDirective } from './directives/bootstrap-select.directive';\nimport { BootstrapDatepickerDirective } from './directives/bootstrap-datepicker.directive';\n\nimport { GroupByPipe } from './pipes/group-by.pipe';\n\nimport { TodoDemoComponent } from './components/todo-demo/todo-demo.component';\nimport { StatisticsDemoComponent } from './components/statistics-demo/statistics-demo.component';\nimport { NotificationsViewerComponent } from './components/notifications-viewer/notifications-viewer.component';\nimport { SearchBoxComponent } from './components/search-box/search-box.component';\nimport { UserInfoComponent } from './components/user-info/user-info.component';\nimport { UserPreferencesComponent } from './components/user-preferences/user-preferences.component';\nimport { UsersManagementComponent } from './components/users-management/users-management.component';\nimport { RolesManagementComponent } from './components/roles-management/roles-management.component';\nimport { RoleEditorComponent } from './components/role-editor/role-editor.component';\n\nimport { LoginComponent } from './pages/login/login.component';\nimport { SettingsComponent } from './pages/settings/settings.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\n\n@NgModule({\n    declarations: [\n\n        EqualValidator,\n        LastElementDirective,\n        AutofocusDirective,\n        BootstrapTabDirective,\n        BootstrapToggleDirective,\n        BootstrapSelectDirective,\n        BootstrapDatepickerDirective,\n\n        GroupByPipe,\n\n        UsersManagementComponent,\n        UserInfoComponent,\n        UserPreferencesComponent,\n        RolesManagementComponent,\n        RoleEditorComponent,\n        NotificationsViewerComponent,\n        SearchBoxComponent,\n        StatisticsDemoComponent,\n        TodoDemoComponent,\n\n        LoginComponent,\n        SettingsComponent,\n        NotFoundComponent\n    ],\n    imports: [\n        DependencyModule\n    ],\n    exports: [\n        EqualValidator,\n        LastElementDirective,\n        AutofocusDirective,\n        BootstrapTabDirective,\n        BootstrapToggleDirective,\n        BootstrapSelectDirective,\n        BootstrapDatepickerDirective,\n\n        GroupByPipe,\n\n        UsersManagementComponent,\n        UserInfoComponent,\n        UserPreferencesComponent,\n        RolesManagementComponent,\n        RoleEditorComponent,\n        NotificationsViewerComponent,\n        SearchBoxComponent,\n        StatisticsDemoComponent,\n        TodoDemoComponent,\n\n        LoginComponent,\n        SettingsComponent,\n        NotFoundComponent\n    ],\n    providers: [\n        // Services\n        AppTitleService,\n        NotificationService,\n        NotificationEndpoint,\n        AccountService,\n        AccountEndpoint,\n\n        AlertServiceProvider,\n        ThemeManagerProvider,\n        ConfigurationServiceProvider,\n        LocalStoreManagerProvider,\n        TranslationServiceProvider,\n\n        { provide: AlertServiceAbstractProvider, useClass: AlertServiceProvider },\n        { provide: ThemeManagerAbstractProvider, useClass: ThemeManagerProvider },\n        { provide: ConfigurationServiceAbstractProvider, useClass: ConfigurationServiceProvider },\n        { provide: LocalStoreManagerServiceAbstractProvider, useClass: LocalStoreManagerProvider },\n        { provide: TranslationServiceAbstractProvider, useClass: TranslationServiceProvider }\n    ],\n    entryComponents: [\n        LoginComponent\n    ]\n})\nexport class NgxAppkitStarterAlphaModule {\n    constructor(@Optional() @SkipSelf() parentModule: NgxAppkitStarterAlphaModule) {\n        if (parentModule) {\n            throw new Error(\n                'NgxAppkitStarterAlphaModule is already loaded. Import it in the AppModule only');\n        }\n    }\n\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: NgxAppkitStarterAlphaModule,\n            providers: []\n        };\n    }\n}\n","/*\n * Public API Surface of ngx-appkit-starter-alpha\n */\n\nexport * from './lib/models/notification.model';\nexport * from './lib/models/role.model';\nexport * from './lib/models/user-edit.model';\nexport * from './lib/models/enums';\nexport * from './lib/models/user-login.model';\n\nexport * from './lib/services/animations';\nexport * from './lib/services/configuration.service-provider';\nexport * from './lib/services/theme-manager.provider';\nexport * from './lib/services/account.service';\nexport * from './lib/services/notification.service';\nexport * from './lib/services/translation.service-provider';\nexport * from './lib/services/app-title.service';\nexport * from './lib/services/account-endpoint.service';\nexport * from './lib/services/alert.service-provider';\nexport * from './lib/services/notification-endpoint.service';\nexport * from './lib/services/local-storage-manager.service-provider';\n\nexport * from './lib/pipes/group-by.pipe';\n\nexport * from './lib/directives/autofocus.directive';\nexport * from './lib/directives/bootstrap-datepicker.directive';\nexport * from './lib/directives/bootstrap-select.directive';\nexport * from './lib/directives/bootstrap-tab.directive';\nexport * from './lib/directives/bootstrap-toggle.directive';\nexport * from './lib/directives/equal-validator.directive';\nexport * from './lib/directives/last-element.directive';\n\nexport * from './lib/components/notifications-viewer/notifications-viewer.component';\nexport * from './lib/components/users-management/users-management.component';\nexport * from './lib/components/user-preferences/user-preferences.component';\nexport * from './lib/components/roles-management/roles-management.component';\nexport * from './lib/components/role-editor/role-editor.component';\nexport * from './lib/components/user-info/user-info.component';\nexport * from './lib/components/todo-demo/todo-demo.component';\nexport * from './lib/components/search-box/search-box.component';\nexport * from './lib/components/statistics-demo/statistics-demo.component';\n\nexport * from './lib/pages/settings/settings.component';\nexport * from './lib/pages/not-found/not-found.component';\nexport * from './lib/pages/login/login.component';\n\nexport * from './lib/ngx-appkit-starter-alpha.module';\nexport * from './lib/dependency.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelement","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵclassProp","i0.ɵɵattribute","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵpropertyInterpolate","i0.ɵɵproperty","i0.ɵɵtextInterpolate","i0.ɵɵattributeInterpolate1","i0.ɵɵpropertyInterpolate1","i0.ɵɵattributeInterpolate2","i0.ɵɵattributeInterpolate4"],"mappings":"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"}