import { OnInit } from '@angular/core';
import { AlertService } from '@polpware/ngx-appkit-services-alpha';
import { User } from '@polpware/ngx-oauth2';
import { AccountService } from '../../services/account.service';
import { UserEdit } from '../../models/user-edit.model';
import { Role } from '../../models/role.model';
import * as i0 from "@angular/core";
export declare class UserInfoComponent implements OnInit {
    private alertService;
    private accountService;
    isEditMode: boolean;
    isNewUser: boolean;
    isSaving: boolean;
    isChangePassword: boolean;
    isEditingSelf: boolean;
    showValidationErrors: boolean;
    uniqueId: string;
    user: User;
    userEdit: UserEdit;
    allRoles: Role[];
    formResetToggle: boolean;
    changesSavedCallback: () => void;
    changesFailedCallback: () => void;
    changesCancelledCallback: () => void;
    isViewOnly: boolean;
    isGeneralEditor: boolean;
    form: any;
    userName: any;
    userPassword: any;
    email: any;
    currentPassword: any;
    newPassword: any;
    confirmPassword: any;
    roles: any;
    rolesSelector: any;
    constructor(alertService: AlertService, accountService: AccountService);
    ngOnInit(): void;
    private loadCurrentUserData;
    private onCurrentUserDataLoadSuccessful;
    private onCurrentUserDataLoadFailed;
    getRoleByName(name: string): Role;
    showErrorAlert(caption: string, message: string): void;
    deletePasswordFromUser(user: UserEdit | User): void;
    edit(): void;
    save(): void;
    private saveSuccessHelper;
    private saveFailedHelper;
    private testIsRoleUserCountChanged;
    cancel(): void;
    close(): void;
    private refreshLoggedInUser;
    changePassword(): void;
    unlockUser(): void;
    resetForm(replace?: boolean): void;
    newUser(allRoles: Role[]): UserEdit;
    editUser(user: User, allRoles: Role[]): UserEdit;
    displayUser(user: User, allRoles?: Role[]): void;
    private setRoles;
    get canViewAllRoles(): boolean;
    get canAssignRoles(): boolean;
    static ɵfac: i0.ɵɵFactoryDef<UserInfoComponent, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<UserInfoComponent, "user-info", never, { "isViewOnly": "isViewOnly"; "isGeneralEditor": "isGeneralEditor"; }, {}, never, never>;
}
